%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: wordclock_faceplate-12inch_ponoko.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ponoko
%%CreationDate: 2/20/19
%%BoundingBox: 0 0 865 865
%%HiResBoundingBox: 0 0 864.1031 864.1031
%%CropBox: 0 0 864.1031 864.1031
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#">
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-02-20T10:00:34-08:00</xmp:CreateDate>
         <xmp:MetadataDate>2019-02-20T10:00:34-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-20T10:00:34-08:00</xmp:ModifyDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>256</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgBAAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9L6ZpmmnTbQm0hr6Mf8A&#xA;utf5R7Zk5s0+M7nmerEAUif0Xpv/ACyQ/wDItP6ZV40/5x+aaDv0Xpv/ACyQ/wDItP6Y+NP+cfmt&#xA;B36L03/lkh/5Fp/THxp/zj81oO/Rem/8skP/ACLT+mPjT/nH5rQd+i9N/wCWSH/kWn9MfGn/ADj8&#xA;1oO/Rem/8skP/ItP6Y+NP+cfmtB36L03/lkh/wCRaf0x8af84/NaDv0Xpv8AyyQ/8i0/pj40/wCc&#xA;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</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>15.000000</stDim:w>
            <stDim:h>15.000000</stDim:h>
            <stDim:unit>Inches</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DocumentID>xmp.did:c55cd55b-e97e-4c6d-b1fd-1655cdbeafaf</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:c55cd55b-e97e-4c6d-b1fd-1655cdbeafaf</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:872a049d-7db5-44bb-8ce2-69d68a17436c</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:872a049d-7db5-44bb-8ce2-69d68a17436c</stEvt:instanceID>
                  <stEvt:when>2019-02-18T11:18:01-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:c55cd55b-e97e-4c6d-b1fd-1655cdbeafaf</stEvt:instanceID>
                  <stEvt:when>2019-02-20T10:00:34-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:872a049d-7db5-44bb-8ce2-69d68a17436c</stRef:instanceID>
            <stRef:documentID>xmp.did:872a049d-7db5-44bb-8ce2-69d68a17436c</stRef:documentID>
            <stRef:originalDocumentID>xmp.did:872a049d-7db5-44bb-8ce2-69d68a17436c</stRef:originalDocumentID>
         </xmpMM:DerivedFrom>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -864.103 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 864.103 li
864.103 864.103 li
864.103 0 li
cp
clp
.103078 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
.051539 864.051 mo
864.052 864.051 li
864.052 .0516044 li
.051539 .0516044 li
.051539 864.051 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 1 rgb
@
750.891 755.46 mo
768.112 755.46 li
@
768.112 755.46 mo
769.394 755.46 770.441 754.411 770.441 753.13 cv
@
770.441 753.13 mo
770.441 745.934 li
@
770.441 745.934 mo
770.441 744.651 769.394 743.602 768.112 743.602 cv
@
768.112 743.602 mo
750.891 743.602 li
@
750.891 743.602 mo
749.608 743.602 748.559 744.651 748.559 745.934 cv
@
748.559 745.934 mo
748.559 753.13 li
@
748.559 753.13 mo
748.559 754.411 749.608 755.46 750.891 755.46 cv
@
750.891 777.836 mo
768.112 777.836 li
@
768.112 777.836 mo
769.394 777.836 770.441 776.789 770.441 775.504 cv
@
770.441 775.504 mo
770.441 768.296 li
@
770.441 768.296 mo
770.441 767.011 769.394 765.962 768.112 765.962 cv
@
768.112 765.962 mo
750.891 765.962 li
@
750.891 765.962 mo
749.608 765.962 748.559 767.011 748.559 768.296 cv
@
748.559 768.296 mo
748.559 775.504 li
@
748.559 775.504 mo
748.559 776.789 749.608 777.836 750.891 777.836 cv
@
732.16 777.836 mo
739.437 777.836 li
@
739.437 777.836 mo
740.72 777.836 741.767 776.789 741.767 775.504 cv
@
741.767 775.504 mo
741.767 723.484 li
@
741.767 723.484 mo
741.767 722.201 740.72 721.156 739.437 721.156 cv
@
739.437 721.156 mo
732.16 721.156 li
@
732.16 721.156 mo
730.879 721.156 729.832 722.201 729.832 723.484 cv
@
729.832 723.484 mo
729.832 775.504 li
@
729.832 775.504 mo
729.832 776.789 730.879 777.836 732.16 777.836 cv
@
750.891 733.014 mo
768.112 733.014 li
@
768.112 733.014 mo
769.394 733.014 770.441 731.965 770.441 730.684 cv
@
770.441 730.684 mo
770.441 723.484 li
@
770.441 723.484 mo
770.441 722.201 769.394 721.156 768.112 721.156 cv
@
768.112 721.156 mo
750.891 721.156 li
@
750.891 721.156 mo
749.608 721.156 748.559 722.201 748.559 723.484 cv
@
748.559 723.484 mo
748.559 730.684 li
@
748.559 730.684 mo
748.559 731.965 749.608 733.014 750.891 733.014 cv
@
637.114 777.836 mo
644.395 777.836 li
@
644.395 777.836 mo
645.673 777.836 646.721 776.789 646.721 775.504 cv
@
646.721 775.504 mo
646.721 756.164 li
@
646.721 756.164 mo
646.721 755.478 646.454 754.885 645.944 754.429 cv
@
645.944 754.429 mo
638.669 747.92 li
@
638.669 747.92 mo
637.967 747.292 637.02 747.146 636.164 747.53 cv
@
636.164 747.53 mo
635.305 747.91 634.786 748.718 634.786 749.661 cv
@
634.786 749.661 mo
634.786 775.504 li
@
634.786 775.504 mo
634.786 776.789 635.833 777.836 637.114 777.836 cv
@
635.557 736.165 mo
679.795 776.109 li
@
679.795 776.109 mo
680.496 776.738 681.438 776.888 682.299 776.506 cv
@
682.299 776.506 mo
683.159 776.123 683.681 775.318 683.681 774.378 cv
@
683.681 774.378 mo
683.681 723.484 li
@
683.681 723.484 mo
683.681 722.201 682.635 721.156 681.353 721.156 cv
@
681.353 721.156 mo
674.077 721.156 li
@
674.077 721.156 mo
672.795 721.156 671.749 722.201 671.749 723.484 cv
@
671.749 723.484 mo
671.749 747.502 li
@
671.749 747.502 mo
671.749 748.442 671.221 749.247 670.365 749.628 cv
@
670.365 749.628 mo
669.505 750.011 668.558 749.862 667.858 749.228 cv
@
667.858 749.228 mo
638.677 722.81 li
@
638.677 722.81 mo
637.98 722.179 637.031 722.027 636.168 722.413 cv
@
636.168 722.413 mo
635.309 722.794 634.786 723.597 634.786 724.541 cv
@
634.786 724.541 mo
634.786 734.428 li
@
634.786 734.428 mo
634.786 735.117 635.05 735.705 635.557 736.165 cv
@
564.694 777.836 mo
571.967 777.836 li
@
571.967 777.836 mo
573.249 777.836 574.298 776.789 574.298 775.504 cv
@
574.298 775.504 mo
574.298 723.484 li
@
574.298 723.484 mo
574.298 722.201 573.249 721.156 571.967 721.156 cv
@
571.967 721.156 mo
564.694 721.156 li
@
564.694 721.156 mo
563.411 721.156 562.362 722.201 562.362 723.484 cv
@
562.362 723.484 mo
562.362 775.504 li
@
562.362 775.504 mo
562.362 776.789 563.411 777.836 564.694 777.836 cv
@
455.307 777.836 mo
462.583 777.836 li
@
462.583 777.836 mo
463.864 777.836 464.913 776.789 464.913 775.504 cv
@
464.913 775.504 mo
464.913 756.164 li
@
464.913 756.164 mo
464.913 755.478 464.647 754.885 464.136 754.429 cv
@
464.136 754.429 mo
456.862 747.92 li
@
456.862 747.92 mo
456.16 747.292 455.215 747.146 454.353 747.53 cv
@
454.353 747.53 mo
453.503 747.91 452.977 748.718 452.977 749.661 cv
@
452.977 749.661 mo
452.977 775.504 li
@
452.977 775.504 mo
452.977 776.789 454.026 777.836 455.307 777.836 cv
@
453.751 736.165 mo
497.984 776.109 li
@
497.984 776.109 mo
498.682 776.738 499.632 776.888 500.492 776.506 cv
@
500.492 776.506 mo
501.349 776.123 501.875 775.318 501.875 774.378 cv
@
501.875 774.378 mo
501.875 723.484 li
@
501.875 723.484 mo
501.875 722.201 500.826 721.156 499.543 721.156 cv
@
499.543 721.156 mo
492.269 721.156 li
@
492.269 721.156 mo
490.99 721.156 489.939 722.201 489.939 723.484 cv
@
489.939 723.484 mo
489.939 747.502 li
@
489.939 747.502 mo
489.939 748.442 489.418 749.247 488.556 749.628 cv
@
488.556 749.628 mo
487.698 750.011 486.746 749.862 486.049 749.228 cv
@
486.049 749.228 mo
456.87 722.81 li
@
456.87 722.81 mo
456.171 722.179 455.222 722.027 454.362 722.413 cv
@
454.362 722.413 mo
453.503 722.794 452.977 723.597 452.977 724.541 cv
@
452.977 724.541 mo
452.977 734.428 li
@
452.977 734.428 mo
452.977 735.117 453.239 735.705 453.751 736.165 cv
@
386.404 755.458 mo
388.635 755.458 li
@
388.635 755.458 mo
391.617 755.458 394.02 755.206 395.928 754.614 cv
@
395.928 754.614 mo
397.834 754.106 399.577 753.172 401.149 751.903 cv
@
401.149 751.903 mo
403.221 750.294 404.795 748.258 405.952 745.805 cv
@
405.952 745.805 mo
407.031 743.433 407.614 740.893 407.614 738.265 cv
@
407.614 738.265 mo
407.614 735.809 407.112 733.439 406.119 731.236 cv
@
406.119 731.236 mo
405.124 729.034 403.718 727.083 401.974 725.475 cv
@
401.974 725.475 mo
401.066 724.715 400.237 724.034 399.323 723.443 cv
@
399.323 723.443 mo
398.413 722.848 397.334 722.427 396.26 722.086 cv
@
396.26 722.086 mo
395.099 721.747 393.85 721.492 392.529 721.323 cv
@
392.529 721.323 mo
391.12 721.24 389.547 721.158 387.805 721.158 cv
@
387.805 721.158 mo
386.404 721.158 li
@
386.404 721.158 mo
385.125 721.158 384.074 722.2 384.074 723.49 cv
@
384.074 723.49 mo
384.074 730.853 li
@
384.074 730.853 mo
384.074 732.136 385.125 733.185 386.404 733.185 cv
@
386.404 733.185 mo
388.552 733.185 li
@
388.552 733.185 mo
389.962 733.185 391.036 733.268 391.784 733.35 cv
@
391.784 733.35 mo
392.529 733.522 393.194 733.778 393.773 734.197 cv
@
393.773 734.197 mo
394.351 734.622 394.847 735.217 395.262 735.892 cv
@
395.262 735.892 mo
395.677 736.656 395.845 737.422 395.845 738.265 cv
@
395.845 738.265 mo
395.845 739.284 395.59 740.129 395.099 740.978 cv
@
395.099 740.978 mo
394.52 741.736 393.85 742.417 392.942 742.757 cv
@
392.942 742.757 mo
392.361 743.005 391.703 743.265 391.036 743.35 cv
@
391.036 743.35 mo
390.372 743.433 389.379 743.433 387.974 743.433 cv
@
387.974 743.433 mo
386.404 743.433 li
@
386.404 743.433 mo
385.125 743.433 384.074 744.484 384.074 745.769 cv
@
384.074 745.769 mo
384.074 753.128 li
@
384.074 753.128 mo
384.074 754.411 385.125 755.458 386.404 755.458 cv
@
367.756 777.836 mo
375.035 777.836 li
@
375.035 777.836 mo
376.316 777.836 377.361 776.789 377.361 775.504 cv
@
377.361 775.504 mo
377.361 723.49 li
@
377.361 723.49 mo
377.361 722.2 376.316 721.158 375.035 721.158 cv
@
375.035 721.158 mo
367.756 721.158 li
@
367.756 721.158 mo
366.478 721.158 365.431 722.2 365.431 723.49 cv
@
365.431 723.49 mo
365.431 775.504 li
@
365.431 775.504 mo
365.431 776.789 366.478 777.836 367.756 777.836 cv
@
396.418 777.836 mo
404.098 777.836 li
@
404.098 777.836 mo
404.872 777.836 405.546 777.49 405.996 776.861 cv
@
405.996 776.861 mo
406.442 776.228 406.555 775.481 406.3 774.749 cv
@
406.3 774.749 mo
401.32 760.261 li
@
401.32 760.261 mo
401.106 759.642 400.693 759.18 400.1 758.907 cv
@
400.1 758.907 mo
399.508 758.631 398.889 758.609 398.278 758.845 cv
@
398.278 758.845 mo
397.271 759.236 396.265 759.543 395.262 759.779 cv
@
395.262 759.779 mo
394.205 760.031 393.037 760.19 391.742 760.294 cv
@
391.742 760.294 mo
391.001 760.356 390.387 760.721 389.983 761.348 cv
@
389.983 761.348 mo
389.575 761.972 389.493 762.684 389.737 763.386 cv
@
389.737 763.386 mo
394.223 776.274 li
@
394.223 776.274 mo
394.556 777.224 395.413 777.836 396.418 777.836 cv
@
272.831 723.236 mo
272.831 753.172 li
@
272.831 753.172 mo
272.831 757.321 273.245 760.713 274.155 763.424 cv
@
274.155 763.424 mo
275.068 766.218 276.477 768.76 278.548 771.044 cv
@
278.548 771.044 mo
280.373 772.997 282.448 774.688 284.764 775.958 cv
@
284.764 775.958 mo
286.198 776.801 287.7 777.478 289.278 777.979 cv
@
289.278 777.979 mo
290.01 778.209 290.735 778.086 291.358 777.632 cv
@
291.358 777.632 mo
291.972 777.182 292.306 776.518 292.306 775.754 cv
@
292.306 775.754 mo
292.306 767.765 li
@
292.306 767.765 mo
292.306 766.832 291.799 766.034 290.954 765.639 cv
@
290.954 765.639 mo
290.055 765.225 289.286 764.772 288.661 764.271 cv
@
288.661 764.271 mo
287.679 763.492 286.919 762.659 286.34 761.558 cv
@
286.34 761.558 mo
285.761 760.457 285.345 759.186 285.094 757.663 cv
@
285.094 757.663 mo
284.848 756.138 284.764 754.272 284.764 752.072 cv
@
284.764 752.072 mo
284.764 723.236 li
@
284.764 723.236 mo
284.764 721.946 283.72 720.904 282.436 720.904 cv
@
282.436 720.904 mo
275.159 720.904 li
@
275.159 720.904 mo
273.878 720.904 272.831 721.946 272.831 723.236 cv
@
306.48 723.236 mo
306.48 752.072 li
@
306.48 752.072 mo
306.48 754.616 306.393 756.563 306.141 757.915 cv
@
306.141 757.915 mo
305.899 759.359 305.483 760.546 304.902 761.558 cv
@
304.902 761.558 mo
304.323 762.659 303.494 763.59 302.582 764.358 cv
@
302.582 764.358 mo
301.92 764.86 301.142 765.298 300.26 765.683 cv
@
300.26 765.683 mo
299.387 766.057 298.852 766.868 298.852 767.821 cv
@
298.852 767.821 mo
298.852 775.739 li
@
298.852 775.739 mo
298.852 776.506 299.185 777.166 299.803 777.62 cv
@
299.803 777.62 mo
300.425 778.076 301.15 778.198 301.88 777.963 cv
@
301.88 777.963 mo
303.427 777.474 304.928 776.819 306.393 776.045 cv
@
306.393 776.045 mo
308.797 774.773 310.869 773.079 312.691 771.044 cv
@
312.691 771.044 mo
314.762 768.76 316.172 766.218 317.084 763.424 cv
@
317.084 763.424 mo
317.998 760.713 318.41 757.321 318.41 753.172 cv
@
318.41 753.172 mo
318.41 723.236 li
@
318.41 723.236 mo
318.41 721.946 317.361 720.904 316.077 720.904 cv
@
316.077 720.904 mo
308.806 720.904 li
@
308.806 720.904 mo
307.524 720.904 306.48 721.946 306.48 723.236 cv
@
176.22 755.732 mo
176.776 758.407 177.734 760.929 178.999 763.336 cv
@
178.999 763.336 mo
180.69 766.541 182.812 769.351 185.381 771.723 cv
@
185.381 771.723 mo
187.952 774.096 190.934 775.96 194.248 777.23 cv
@
194.248 777.23 mo
197.56 778.598 201.046 779.278 204.774 779.278 cv
@
204.774 779.278 mo
208.504 779.278 211.986 778.598 215.296 777.315 cv
@
215.296 777.315 mo
218.528 776.043 221.516 774.182 224.085 771.808 cv
@
224.085 771.808 mo
226.65 769.522 228.722 766.728 230.464 763.507 cv
@
230.464 763.507 mo
231.705 761.096 232.622 758.496 233.213 755.74 cv
@
233.213 755.74 mo
233.369 755.028 233.202 754.354 232.749 753.786 cv
@
232.749 753.786 mo
232.29 753.221 231.664 752.92 230.938 752.92 cv
@
230.938 752.92 mo
223.442 752.92 li
@
223.442 752.92 mo
222.413 752.92 221.536 753.558 221.225 754.544 cv
@
221.225 754.544 mo
220.063 758.187 218.122 761.084 215.465 763.253 cv
@
215.465 763.253 mo
212.379 765.77 208.836 767.065 204.691 767.065 cv
@
204.691 767.065 mo
202.617 767.065 200.63 766.728 198.805 766.049 cv
@
198.805 766.049 mo
196.983 765.373 195.329 764.441 193.834 763.168 cv
@
193.834 763.168 mo
192.343 761.897 191.101 760.457 190.02 758.68 cv
@
190.02 758.68 mo
189.235 757.445 188.625 756.069 188.192 754.593 cv
@
188.192 754.593 mo
187.898 753.588 187.007 752.92 185.957 752.92 cv
@
185.957 752.92 mo
178.497 752.92 li
@
178.497 752.92 mo
177.771 752.92 177.146 753.219 176.69 753.781 cv
@
176.69 753.781 mo
176.228 754.348 176.07 755.018 176.22 755.732 cv
@
188.194 744.399 mo
188.631 742.94 189.235 741.595 190.02 740.298 cv
@
190.02 740.298 mo
191.101 738.519 192.343 737.079 193.834 735.807 cv
@
193.834 735.807 mo
195.329 734.537 196.983 733.606 198.805 732.927 cv
@
198.805 732.927 mo
200.63 732.251 202.617 731.911 204.691 731.911 cv
@
204.691 731.911 mo
208.836 731.911 212.398 733.181 215.465 735.638 cv
@
215.465 735.638 mo
218.141 737.861 220.063 740.793 221.225 744.435 cv
@
221.225 744.435 mo
221.536 745.416 222.413 746.059 223.442 746.059 cv
@
223.442 746.059 mo
230.938 746.059 li
@
230.938 746.059 mo
231.664 746.059 232.29 745.757 232.747 745.192 cv
@
232.747 745.192 mo
233.202 744.621 233.369 743.951 233.213 743.237 cv
@
233.213 743.237 mo
232.622 740.481 231.731 737.863 230.464 735.471 cv
@
230.464 735.471 mo
228.753 732.235 226.65 729.456 224.085 727.083 cv
@
224.085 727.083 mo
221.516 724.797 218.528 722.933 215.296 721.663 cv
@
215.296 721.663 mo
211.986 720.393 208.504 719.714 204.774 719.714 cv
@
204.774 719.714 mo
201.046 719.714 197.56 720.393 194.248 721.663 cv
@
194.248 721.663 mo
190.934 723.018 187.952 724.884 185.381 727.253 cv
@
185.381 727.253 mo
182.812 729.623 180.657 732.423 178.999 735.638 cv
@
178.999 735.638 mo
177.706 738.034 176.776 740.574 176.22 743.248 cv
@
176.22 743.248 mo
176.07 743.964 176.228 744.631 176.69 745.196 cv
@
176.69 745.196 mo
177.148 745.759 177.771 746.059 178.497 746.059 cv
@
178.497 746.059 mo
185.96 746.059 li
@
185.96 746.059 mo
187.011 746.059 187.896 745.396 188.194 744.399 cv
@
114.814 755.458 mo
130.959 755.458 li
@
130.959 755.458 mo
132.239 755.458 133.287 754.411 133.287 753.128 cv
@
133.287 753.128 mo
133.287 745.932 li
@
133.287 745.932 mo
133.287 744.649 132.239 743.602 130.959 743.602 cv
@
130.959 743.602 mo
114.814 743.602 li
@
114.814 743.602 mo
113.532 743.602 112.486 744.649 112.486 745.932 cv
@
112.486 745.932 mo
112.486 753.128 li
@
112.486 753.128 mo
112.486 754.411 113.532 755.458 114.814 755.458 cv
@
96.6653 777.836 mo
103.942 777.836 li
@
103.942 777.836 mo
105.228 777.836 106.275 776.789 106.275 775.504 cv
@
106.275 775.504 mo
106.273 723.49 li
@
106.273 723.49 mo
106.273 722.2 105.228 721.158 103.942 721.158 cv
@
103.942 721.158 mo
96.6653 721.158 li
@
96.6653 721.158 mo
95.386 721.158 94.3372 722.2 94.3372 723.49 cv
@
94.3372 723.49 mo
94.3372 775.504 li
@
94.3372 775.504 mo
94.3372 776.789 95.386 777.836 96.6653 777.836 cv
@
114.814 733.014 mo
130.959 733.014 li
@
130.959 733.014 mo
132.239 733.014 133.287 731.967 133.287 730.682 cv
@
133.287 730.682 mo
133.287 723.49 li
@
133.287 723.49 mo
133.287 722.2 132.239 721.158 130.959 721.158 cv
@
130.959 721.158 mo
114.814 721.158 li
@
114.814 721.158 mo
113.532 721.158 112.486 722.2 112.486 723.49 cv
@
112.486 723.49 mo
112.486 730.682 li
@
112.486 730.682 mo
112.486 731.967 113.532 733.014 114.814 733.014 cv
@
728.019 686.933 mo
735.295 686.933 li
@
735.295 686.933 mo
736.58 686.933 737.625 685.886 737.625 684.605 cv
@
737.625 684.605 mo
737.625 665.261 li
@
737.625 665.261 mo
737.625 664.575 737.357 663.982 736.845 663.524 cv
@
736.845 663.524 mo
729.574 657.016 li
@
729.574 657.016 mo
728.87 656.393 727.926 656.244 727.069 656.625 cv
@
727.069 656.625 mo
726.213 657.009 725.689 657.815 725.689 658.752 cv
@
725.689 658.752 mo
725.689 684.605 li
@
725.689 684.605 mo
725.689 685.886 726.736 686.933 728.019 686.933 cv
@
726.461 645.262 mo
770.699 685.201 li
@
770.699 685.201 mo
771.399 685.836 772.347 685.984 773.202 685.601 cv
@
773.202 685.601 mo
774.066 685.218 774.586 684.414 774.586 683.473 cv
@
774.586 683.473 mo
774.586 632.585 li
@
774.586 632.585 mo
774.586 631.302 773.539 630.251 772.258 630.251 cv
@
772.258 630.251 mo
764.984 630.251 li
@
764.984 630.251 mo
763.701 630.251 762.652 631.302 762.652 632.585 cv
@
762.652 632.585 mo
762.652 656.597 li
@
762.652 656.597 mo
762.652 657.537 762.133 658.344 761.27 658.727 cv
@
761.27 658.727 mo
760.41 659.108 759.462 658.959 758.763 658.328 cv
@
758.763 658.328 mo
729.58 631.91 li
@
729.58 631.91 mo
728.884 631.28 727.936 631.125 727.073 631.51 cv
@
727.073 631.51 mo
726.215 631.891 725.689 632.696 725.689 633.642 cv
@
725.689 633.642 mo
725.689 643.532 li
@
725.689 643.532 mo
725.689 644.215 725.951 644.806 726.461 645.262 cv
@
659.986 664.557 mo
677.211 664.557 li
@
677.211 664.557 mo
678.491 664.557 679.537 663.508 679.537 662.225 cv
@
679.537 662.225 mo
679.537 655.031 li
@
679.537 655.031 mo
679.537 653.747 678.491 652.699 677.211 652.699 cv
@
677.211 652.699 mo
659.986 652.699 li
@
659.986 652.699 mo
658.707 652.699 657.66 653.747 657.66 655.031 cv
@
657.66 655.031 mo
657.66 662.225 li
@
657.66 662.225 mo
657.66 663.508 658.707 664.557 659.986 664.557 cv
@
659.986 686.933 mo
677.211 686.933 li
@
677.211 686.933 mo
678.491 686.933 679.537 685.886 679.537 684.605 cv
@
679.537 684.605 mo
679.537 677.391 li
@
679.537 677.391 mo
679.537 676.104 678.491 675.061 677.211 675.061 cv
@
677.211 675.061 mo
659.986 675.061 li
@
659.986 675.061 mo
658.707 675.061 657.66 676.104 657.66 677.391 cv
@
657.66 677.391 mo
657.66 684.605 li
@
657.66 684.605 mo
657.66 685.886 658.707 686.933 659.986 686.933 cv
@
641.259 686.933 mo
648.536 686.933 li
@
648.536 686.933 mo
649.823 686.933 650.864 685.89 650.866 684.605 cv
@
650.866 684.605 mo
650.866 632.585 li
@
650.866 632.585 mo
650.866 631.302 649.823 630.251 648.536 630.251 cv
@
648.536 630.251 mo
641.259 630.251 li
@
641.259 630.251 mo
639.977 630.251 638.928 631.302 638.928 632.585 cv
@
638.928 632.585 mo
638.928 684.605 li
@
638.928 684.605 mo
638.928 685.886 639.977 686.933 641.259 686.933 cv
@
659.986 642.11 mo
677.211 642.11 li
@
677.211 642.11 mo
678.491 642.11 679.537 641.062 679.537 639.776 cv
@
679.537 639.776 mo
679.537 632.585 li
@
679.537 632.585 mo
679.537 631.302 678.491 630.251 677.211 630.251 cv
@
677.211 630.251 mo
659.986 630.251 li
@
659.986 630.251 mo
658.707 630.251 657.66 631.302 657.66 632.585 cv
@
657.66 632.585 mo
657.66 639.776 li
@
657.66 639.776 mo
657.66 641.062 658.707 642.11 659.986 642.11 cv
@
570.384 685.53 mo
574.469 677.528 li
@
574.469 677.528 mo
574.819 676.842 574.819 676.1 574.474 675.414 cv
@
574.474 675.414 mo
552.455 631.672 li
@
552.455 631.672 mo
552.045 630.867 551.275 630.39 550.375 630.39 cv
@
550.375 630.39 mo
542.231 630.39 li
@
542.231 630.39 mo
541.4 630.39 540.684 630.794 540.252 631.502 cv
@
540.252 631.502 mo
539.811 632.21 539.78 633.031 540.152 633.777 cv
@
540.152 633.777 mo
566.231 685.517 li
@
566.231 685.517 mo
566.635 686.321 567.405 686.792 568.303 686.798 cv
@
568.303 686.798 mo
569.206 686.8 569.973 686.328 570.384 685.53 cv
@
572.565 656.857 mo
576.658 664.915 li
@
576.658 664.915 mo
577.06 665.721 577.834 666.195 578.74 666.195 cv
@
578.74 666.195 mo
579.635 666.191 580.404 665.713 580.81 664.911 cv
@
580.81 664.911 mo
596.504 633.777 li
@
596.504 633.777 mo
596.883 633.031 596.847 632.214 596.411 631.502 cv
@
596.411 631.502 mo
595.978 630.794 595.262 630.39 594.431 630.39 cv
@
594.431 630.39 mo
586.298 630.39 li
@
586.298 630.39 mo
585.401 630.39 584.632 630.867 584.225 631.668 cv
@
584.225 631.668 mo
572.559 654.745 li
@
572.559 654.745 mo
572.214 655.431 572.214 656.173 572.565 656.857 cv
@
478.178 664.557 mo
495.402 664.557 li
@
495.402 664.557 mo
496.683 664.557 497.73 663.508 497.73 662.225 cv
@
497.73 662.225 mo
497.73 655.031 li
@
497.73 655.031 mo
497.73 653.747 496.683 652.699 495.402 652.699 cv
@
495.402 652.699 mo
478.178 652.699 li
@
478.178 652.699 mo
476.896 652.699 475.849 653.747 475.849 655.031 cv
@
475.849 655.031 mo
475.849 662.225 li
@
475.849 662.225 mo
475.849 663.508 476.896 664.557 478.178 664.557 cv
@
478.178 686.933 mo
495.402 686.933 li
@
495.402 686.933 mo
496.683 686.933 497.73 685.886 497.73 684.605 cv
@
497.73 684.605 mo
497.73 677.391 li
@
497.73 677.391 mo
497.73 676.104 496.683 675.061 495.402 675.061 cv
@
495.402 675.061 mo
478.178 675.061 li
@
478.178 675.061 mo
476.896 675.061 475.849 676.104 475.849 677.391 cv
@
475.849 677.391 mo
475.849 684.605 li
@
475.849 684.605 mo
475.849 685.886 476.896 686.933 478.178 686.933 cv
@
459.452 686.933 mo
466.727 686.933 li
@
466.727 686.933 mo
468.007 686.933 469.053 685.89 469.055 684.605 cv
@
469.055 684.605 mo
469.053 632.585 li
@
469.053 632.585 mo
469.053 631.302 468.007 630.251 466.727 630.251 cv
@
466.727 630.251 mo
459.452 630.251 li
@
459.452 630.251 mo
458.169 630.251 457.122 631.302 457.122 632.585 cv
@
457.122 632.585 mo
457.122 684.605 li
@
457.122 684.605 mo
457.122 685.886 458.169 686.933 459.452 686.933 cv
@
478.178 642.11 mo
495.402 642.11 li
@
495.402 642.11 mo
496.683 642.11 497.73 641.062 497.73 639.776 cv
@
497.73 639.776 mo
497.73 632.585 li
@
497.73 632.585 mo
497.73 631.302 496.683 630.251 495.402 630.251 cv
@
495.402 630.251 mo
478.178 630.251 li
@
478.178 630.251 mo
476.896 630.251 475.849 631.302 475.849 632.585 cv
@
475.849 632.585 mo
475.849 639.776 li
@
475.849 639.776 mo
475.849 641.062 476.896 642.11 478.178 642.11 cv
@
372.277 686.933 mo
379.558 686.933 li
@
379.558 686.933 mo
380.84 686.933 381.885 685.89 381.885 684.605 cv
@
381.885 684.605 mo
381.885 632.585 li
@
381.885 632.585 mo
381.885 631.302 380.84 630.251 379.558 630.251 cv
@
379.558 630.251 mo
372.277 630.251 li
@
372.277 630.251 mo
370.998 630.251 369.949 631.302 369.949 632.585 cv
@
369.949 632.585 mo
369.949 684.605 li
@
369.949 684.605 mo
369.949 685.886 370.998 686.933 372.277 686.933 cv
@
389.352 686.933 mo
400.77 686.933 li
@
400.77 686.933 mo
402.053 686.933 403.098 685.886 403.098 684.605 cv
@
403.098 684.605 mo
403.098 677.391 li
@
403.098 677.391 mo
403.098 676.104 402.053 675.061 400.77 675.061 cv
@
400.77 675.061 mo
389.352 675.061 li
@
389.352 675.061 mo
388.07 675.061 387.022 676.104 387.022 677.391 cv
@
387.022 677.391 mo
387.022 684.605 li
@
387.022 684.605 mo
387.022 685.886 388.07 686.933 389.352 686.933 cv
@
296.373 664.557 mo
313.595 664.557 li
@
313.595 664.557 mo
314.877 664.557 315.926 663.508 315.926 662.225 cv
@
315.926 662.225 mo
315.926 655.031 li
@
315.926 655.031 mo
315.926 653.747 314.877 652.699 313.595 652.699 cv
@
313.595 652.699 mo
296.373 652.699 li
@
296.373 652.699 mo
295.091 652.699 294.043 653.747 294.043 655.031 cv
@
294.043 655.031 mo
294.043 662.225 li
@
294.043 662.225 mo
294.043 663.508 295.091 664.557 296.373 664.557 cv
@
296.373 686.933 mo
313.595 686.933 li
@
313.595 686.933 mo
314.877 686.933 315.926 685.886 315.926 684.605 cv
@
315.926 684.605 mo
315.926 677.391 li
@
315.926 677.391 mo
315.926 676.104 314.877 675.061 313.595 675.061 cv
@
313.595 675.061 mo
296.373 675.061 li
@
296.373 675.061 mo
295.091 675.061 294.043 676.104 294.043 677.391 cv
@
294.043 677.391 mo
294.043 684.605 li
@
294.043 684.605 mo
294.043 685.886 295.091 686.933 296.373 686.933 cv
@
277.645 686.933 mo
284.92 686.933 li
@
284.92 686.933 mo
286.202 686.933 287.248 685.89 287.25 684.605 cv
@
287.25 684.605 mo
287.248 632.585 li
@
287.248 632.585 mo
287.248 631.302 286.202 630.251 284.92 630.251 cv
@
284.92 630.251 mo
277.645 630.251 li
@
277.645 630.251 mo
276.363 630.251 275.315 631.302 275.315 632.585 cv
@
275.315 632.585 mo
275.315 684.605 li
@
275.315 684.605 mo
275.315 685.886 276.363 686.933 277.645 686.933 cv
@
296.373 642.11 mo
313.595 642.11 li
@
313.595 642.11 mo
314.877 642.11 315.926 641.062 315.926 639.776 cv
@
315.926 639.776 mo
315.926 632.585 li
@
315.926 632.585 mo
315.926 631.302 314.877 630.251 313.595 630.251 cv
@
313.595 630.251 mo
296.373 630.251 li
@
296.373 630.251 mo
295.091 630.251 294.043 631.302 294.043 632.585 cv
@
294.043 632.585 mo
294.043 639.776 li
@
294.043 639.776 mo
294.043 641.062 295.091 642.11 296.373 642.11 cv
@
194.453 652.879 mo
198.127 662.046 li
@
198.127 662.046 mo
198.48 662.923 199.277 663.478 200.223 663.5 cv
@
200.223 663.5 mo
201.171 663.53 201.994 663.02 202.396 662.161 cv
@
202.396 662.161 mo
202.589 661.751 li
@
202.589 661.751 mo
202.981 660.918 203.768 660.412 204.693 660.412 cv
@
204.693 660.412 mo
205.617 660.41 206.402 660.909 206.799 661.742 cv
@
206.799 661.742 mo
217.735 684.829 li
@
217.735 684.829 mo
218.139 685.686 218.965 686.186 219.91 686.159 cv
@
219.91 686.159 mo
220.854 686.13 221.645 685.578 221.999 684.697 cv
@
221.999 684.697 mo
225.685 675.499 li
@
225.685 675.499 mo
225.934 674.876 225.915 674.242 225.632 673.633 cv
@
225.632 673.633 mo
206.797 633.721 li
@
206.797 633.721 mo
206.402 632.888 205.613 632.382 204.689 632.384 cv
@
204.689 632.384 mo
203.762 632.388 202.977 632.89 202.585 633.729 cv
@
202.585 633.729 mo
194.502 651.023 li
@
194.502 651.023 mo
194.222 651.629 194.201 652.26 194.453 652.879 cv
@
191.706 684.835 mo
195.876 675.985 li
@
195.876 675.985 mo
196.164 675.374 196.185 674.745 195.929 674.117 cv
@
195.929 674.117 mo
179.168 632.48 li
@
179.168 632.48 mo
178.806 631.576 177.979 631.016 177.008 631.016 cv
@
177.008 631.016 mo
169.178 631.016 li
@
169.178 631.016 mo
168.376 631.016 167.69 631.379 167.244 632.047 cv
@
167.244 632.047 mo
166.796 632.711 166.716 633.485 167.019 634.223 cv
@
167.019 634.223 mo
187.442 684.716 li
@
187.442 684.716 mo
187.796 685.593 188.589 686.144 189.533 686.171 cv
@
189.533 686.171 mo
190.478 686.194 191.3 685.692 191.706 684.835 cv
@
222.946 652.537 mo
227.19 661.408 li
@
227.19 661.408 mo
227.596 662.259 228.416 662.762 229.363 662.731 cv
@
229.363 662.731 mo
230.302 662.704 231.095 662.154 231.445 661.281 cv
@
231.445 661.281 mo
242.418 634.225 li
@
242.418 634.225 mo
242.715 633.485 242.637 632.711 242.189 632.047 cv
@
242.189 632.047 mo
241.749 631.383 241.055 631.016 240.256 631.016 cv
@
240.256 631.016 mo
232.514 631.016 li
@
232.514 631.016 mo
231.547 631.016 230.725 631.572 230.359 632.462 cv
@
230.359 632.462 mo
222.896 650.642 li
@
222.896 650.642 mo
222.635 651.275 222.653 651.917 222.946 652.537 cv
@
110.225 686.933 mo
117.5 686.933 li
@
117.5 686.933 mo
118.781 686.933 119.83 685.886 119.83 684.605 cv
@
119.83 684.605 mo
119.83 651.39 li
@
119.83 651.39 mo
119.83 650.105 118.781 649.058 117.5 649.058 cv
@
117.5 649.058 mo
110.225 649.058 li
@
110.225 649.058 mo
108.943 649.058 107.895 650.105 107.895 651.39 cv
@
107.895 651.39 mo
107.895 684.605 li
@
107.895 684.605 mo
107.895 685.886 108.943 686.933 110.225 686.933 cv
@
97.4505 642.11 mo
130.18 642.11 li
@
130.18 642.11 mo
131.463 642.11 132.506 641.062 132.506 639.776 cv
@
132.506 639.776 mo
132.506 632.585 li
@
132.506 632.585 mo
132.506 631.302 131.463 630.253 130.182 630.251 cv
@
130.182 630.251 mo
97.4505 630.251 li
@
97.4505 630.251 mo
96.1653 630.251 95.1184 631.302 95.1184 632.585 cv
@
95.1184 632.585 mo
95.1184 639.776 li
@
95.1184 639.776 mo
95.1184 641.062 96.1653 642.11 97.4505 642.11 cv
@
752.939 573.34 mo
770.158 573.34 li
@
770.158 573.34 mo
771.441 573.34 772.488 572.291 772.488 571.008 cv
@
772.488 571.008 mo
772.488 563.816 li
@
772.488 563.816 mo
772.488 562.531 771.441 561.484 770.158 561.484 cv
@
770.158 561.484 mo
752.939 561.484 li
@
752.939 561.484 mo
751.657 561.484 750.611 562.531 750.611 563.816 cv
@
750.611 563.816 mo
750.611 571.008 li
@
750.611 571.008 mo
750.611 572.291 751.657 573.34 752.939 573.34 cv
@
752.939 595.717 mo
770.158 595.717 li
@
770.158 595.717 mo
771.441 595.717 772.488 594.673 772.488 593.389 cv
@
772.488 593.389 mo
772.488 586.174 li
@
772.488 586.174 mo
772.488 584.894 771.441 583.846 770.158 583.846 cv
@
770.158 583.846 mo
752.939 583.846 li
@
752.939 583.846 mo
751.657 583.846 750.611 584.894 750.611 586.174 cv
@
750.611 586.174 mo
750.611 593.389 li
@
750.611 593.389 mo
750.611 594.673 751.657 595.717 752.939 595.717 cv
@
734.21 595.717 mo
741.488 595.717 li
@
741.488 595.717 mo
742.77 595.717 743.814 594.673 743.814 593.389 cv
@
743.814 593.389 mo
743.814 541.365 li
@
743.814 541.365 mo
743.814 540.081 742.77 539.033 741.488 539.033 cv
@
741.488 539.033 mo
734.21 539.033 li
@
734.21 539.033 mo
732.931 539.033 731.884 540.081 731.884 541.365 cv
@
731.884 541.365 mo
731.884 593.389 li
@
731.884 593.389 mo
731.884 594.673 732.931 595.717 734.21 595.717 cv
@
752.939 550.893 mo
770.158 550.893 li
@
770.158 550.893 mo
771.441 550.893 772.488 549.844 772.488 548.563 cv
@
772.488 548.563 mo
772.488 541.365 li
@
772.488 541.365 mo
772.488 540.081 771.441 539.036 770.158 539.036 cv
@
770.158 539.036 mo
752.939 539.033 li
@
752.939 539.033 mo
751.657 539.033 750.611 540.081 750.611 541.365 cv
@
750.611 541.365 mo
750.611 548.563 li
@
750.611 548.563 mo
750.611 549.844 751.657 550.893 752.939 550.893 cv
@
661.612 573.34 mo
678.837 573.34 li
@
678.837 573.34 mo
680.117 573.34 681.161 572.291 681.161 571.008 cv
@
681.161 571.008 mo
681.161 563.816 li
@
681.161 563.816 mo
681.161 562.531 680.117 561.484 678.837 561.484 cv
@
678.837 561.484 mo
661.612 561.484 li
@
661.612 561.484 mo
660.333 561.484 659.284 562.531 659.284 563.816 cv
@
659.284 563.816 mo
659.284 571.008 li
@
659.284 571.008 mo
659.284 572.291 660.333 573.34 661.612 573.34 cv
@
661.612 595.717 mo
678.837 595.717 li
@
678.837 595.717 mo
680.117 595.717 681.161 594.673 681.161 593.389 cv
@
681.161 593.389 mo
681.161 586.174 li
@
681.161 586.174 mo
681.161 584.894 680.117 583.846 678.837 583.846 cv
@
678.837 583.846 mo
661.612 583.846 li
@
661.612 583.846 mo
660.333 583.846 659.284 584.894 659.284 586.174 cv
@
659.284 586.174 mo
659.284 593.389 li
@
659.284 593.389 mo
659.284 594.673 660.333 595.717 661.612 595.717 cv
@
642.885 595.717 mo
650.162 595.717 li
@
650.162 595.717 mo
651.449 595.717 652.492 594.673 652.492 593.389 cv
@
652.492 593.389 mo
652.492 541.365 li
@
652.492 541.365 mo
652.492 540.081 651.449 539.033 650.162 539.033 cv
@
650.162 539.033 mo
642.885 539.033 li
@
642.885 539.033 mo
641.603 539.033 640.554 540.081 640.554 541.365 cv
@
640.554 541.365 mo
640.554 593.389 li
@
640.554 593.389 mo
640.554 594.673 641.603 595.717 642.885 595.717 cv
@
661.612 550.893 mo
678.837 550.893 li
@
678.837 550.893 mo
680.117 550.893 681.161 549.844 681.161 548.563 cv
@
681.161 548.563 mo
681.161 541.365 li
@
681.161 541.365 mo
681.161 540.081 680.117 539.036 678.837 539.036 cv
@
678.837 539.036 mo
661.612 539.033 li
@
661.612 539.033 mo
660.333 539.033 659.284 540.081 659.284 541.365 cv
@
659.284 541.365 mo
659.284 548.563 li
@
659.284 548.563 mo
659.284 549.844 660.333 550.893 661.612 550.893 cv
@
570.37 573.34 mo
572.602 573.34 li
@
572.602 573.34 mo
575.585 573.34 577.99 573.088 579.898 572.497 cv
@
579.898 572.497 mo
581.802 571.988 583.543 571.056 585.117 569.784 cv
@
585.117 569.784 mo
587.191 568.175 588.76 566.14 589.921 563.685 cv
@
589.921 563.685 mo
591.001 561.312 591.58 558.773 591.58 556.148 cv
@
591.58 556.148 mo
591.58 553.689 591.082 551.317 590.089 549.116 cv
@
590.089 549.116 mo
589.092 546.912 587.689 544.965 585.946 543.354 cv
@
585.946 543.354 mo
585.032 542.594 584.205 541.915 583.293 541.325 cv
@
583.293 541.325 mo
582.383 540.73 581.3 540.303 580.229 539.966 cv
@
580.229 539.966 mo
579.067 539.627 577.822 539.373 576.497 539.204 cv
@
576.497 539.204 mo
575.088 539.121 573.512 539.033 571.772 539.033 cv
@
571.772 539.033 mo
570.37 539.033 li
@
570.37 539.033 mo
569.093 539.033 568.044 540.081 568.044 541.365 cv
@
568.044 541.365 mo
568.044 548.731 li
@
568.044 548.731 mo
568.044 550.016 569.093 551.063 570.37 551.063 cv
@
570.37 551.063 mo
572.519 551.063 li
@
572.519 551.063 mo
573.927 551.063 575.006 551.149 575.754 551.234 cv
@
575.754 551.234 mo
576.497 551.403 577.16 551.657 577.741 552.082 cv
@
577.741 552.082 mo
578.32 552.503 578.817 553.094 579.23 553.776 cv
@
579.23 553.776 mo
579.646 554.535 579.813 555.297 579.813 556.148 cv
@
579.813 556.148 mo
579.813 557.161 579.561 558.008 579.067 558.855 cv
@
579.067 558.855 mo
578.486 559.617 577.822 560.296 576.912 560.633 cv
@
576.912 560.633 mo
576.331 560.891 575.671 561.141 575.006 561.228 cv
@
575.006 561.228 mo
574.344 561.312 573.35 561.312 571.94 561.312 cv
@
571.94 561.312 mo
570.37 561.312 li
@
570.37 561.312 mo
569.093 561.312 568.044 562.361 568.044 563.644 cv
@
568.044 563.644 mo
568.044 571.008 li
@
568.044 571.008 mo
568.044 572.291 569.093 573.34 570.37 573.34 cv
@
551.729 595.717 mo
559.003 595.717 li
@
559.003 595.717 mo
560.284 595.717 561.333 594.673 561.333 593.389 cv
@
561.333 593.389 mo
561.333 541.365 li
@
561.333 541.365 mo
561.333 540.081 560.284 539.033 559.003 539.033 cv
@
559.003 539.033 mo
551.729 539.033 li
@
551.729 539.033 mo
550.448 539.033 549.399 540.081 549.399 541.365 cv
@
549.399 541.365 mo
549.399 593.389 li
@
549.399 593.389 mo
549.399 594.673 550.448 595.717 551.729 595.717 cv
@
580.39 595.717 mo
588.07 595.717 li
@
588.07 595.717 mo
588.847 595.717 589.513 595.375 589.966 594.741 cv
@
589.966 594.741 mo
590.414 594.111 590.521 593.363 590.269 592.629 cv
@
590.269 592.629 mo
585.29 578.141 li
@
585.29 578.141 mo
585.078 577.517 584.665 577.061 584.068 576.788 cv
@
584.068 576.788 mo
583.473 576.507 582.855 576.488 582.246 576.726 cv
@
582.246 576.726 mo
581.239 577.117 580.235 577.423 579.23 577.661 cv
@
579.23 577.661 mo
578.18 577.909 577.009 578.07 575.71 578.177 cv
@
575.71 578.177 mo
574.969 578.239 574.355 578.603 573.951 579.23 cv
@
573.951 579.23 mo
573.545 579.853 573.46 580.565 573.707 581.267 cv
@
573.707 581.267 mo
578.191 594.156 li
@
578.191 594.156 mo
578.524 595.11 579.383 595.717 580.39 595.717 cv
@
492.265 596.034 mo
499.547 596.034 li
@
499.547 596.034 mo
500.828 596.034 501.871 594.987 501.871 593.702 cv
@
501.871 593.702 mo
501.871 541.68 li
@
501.871 541.68 mo
501.871 540.395 500.828 539.348 499.547 539.348 cv
@
499.547 539.348 mo
492.265 539.348 li
@
492.265 539.348 mo
490.988 539.348 489.939 540.395 489.939 541.68 cv
@
489.939 541.68 mo
489.939 593.702 li
@
489.939 593.702 mo
489.939 594.987 490.988 596.034 492.265 596.034 cv
@
455.309 596.034 mo
462.588 596.034 li
@
462.588 596.034 mo
463.866 596.034 464.913 594.987 464.913 593.702 cv
@
464.913 593.702 mo
464.913 541.68 li
@
464.913 541.68 mo
464.913 540.395 463.866 539.348 462.588 539.348 cv
@
462.588 539.348 mo
455.309 539.348 li
@
455.309 539.348 mo
454.026 539.348 452.979 540.395 452.979 541.68 cv
@
452.979 541.68 mo
452.979 593.702 li
@
452.979 593.702 mo
452.979 594.987 454.026 596.034 455.309 596.034 cv
@
472.051 573.571 mo
482.804 573.571 li
@
482.804 573.571 mo
484.087 573.571 485.137 572.522 485.137 571.237 cv
@
485.137 571.237 mo
485.137 564.042 li
@
485.137 564.042 mo
485.137 562.761 484.087 561.712 482.804 561.712 cv
@
482.804 561.712 mo
472.051 561.712 li
@
472.051 561.712 mo
470.767 561.712 469.719 562.761 469.719 564.042 cv
@
469.719 564.042 mo
469.719 571.237 li
@
469.719 571.237 mo
469.719 572.522 470.767 573.571 472.051 573.571 cv
@
382.935 596.034 mo
390.208 596.034 li
@
390.208 596.034 mo
391.49 596.034 392.535 594.987 392.535 593.702 cv
@
392.535 593.702 mo
392.535 560.489 li
@
392.535 560.489 mo
392.535 559.201 391.49 558.159 390.208 558.159 cv
@
390.208 558.159 mo
382.935 558.159 li
@
382.935 558.159 mo
381.652 558.159 380.605 559.201 380.605 560.489 cv
@
380.605 560.489 mo
380.605 593.702 li
@
380.605 593.702 mo
380.605 594.987 381.652 596.034 382.935 596.034 cv
@
370.155 551.206 mo
402.89 551.206 li
@
402.89 551.206 mo
404.172 551.206 405.217 550.159 405.217 548.876 cv
@
405.217 548.876 mo
405.217 541.68 li
@
405.217 541.68 mo
405.217 540.395 404.172 539.348 402.89 539.348 cv
@
402.89 539.348 mo
370.155 539.348 li
@
370.155 539.348 mo
368.876 539.348 367.831 540.395 367.831 541.68 cv
@
367.831 541.68 mo
367.831 548.876 li
@
367.831 548.876 mo
367.831 550.159 368.876 551.206 370.155 551.206 cv
@
310.696 596.034 mo
319.712 596.034 li
@
319.712 596.034 mo
320.605 596.034 321.375 595.564 321.78 594.765 cv
@
321.78 594.765 mo
322.188 593.968 322.123 593.07 321.597 592.342 cv
@
321.597 592.342 mo
284.259 540.322 li
@
284.259 540.322 mo
283.808 539.689 283.14 539.348 282.367 539.348 cv
@
282.367 539.348 mo
273.339 539.348 li
@
273.339 539.348 mo
272.44 539.348 271.675 539.818 271.261 540.615 cv
@
271.261 540.615 mo
270.854 541.416 270.922 542.318 271.445 543.044 cv
@
271.445 543.044 mo
308.801 595.066 li
@
308.801 595.066 mo
309.255 595.693 309.923 596.034 310.696 596.034 cv
@
271.536 596.034 mo
280.464 596.034 li
@
280.464 596.034 mo
281.235 596.034 281.901 595.693 282.351 595.067 cv
@
282.351 595.067 mo
290.45 583.826 li
@
290.45 583.826 mo
291.045 582.999 291.049 581.931 290.456 581.1 cv
@
290.456 581.1 mo
286.024 574.923 li
@
286.024 574.923 mo
285.574 574.298 284.91 573.955 284.137 573.955 cv
@
284.137 573.955 mo
283.367 573.955 282.7 574.294 282.25 574.921 cv
@
282.25 574.921 mo
269.648 592.333 li
@
269.648 592.333 mo
269.115 593.062 269.052 593.962 269.46 594.759 cv
@
269.46 594.759 mo
269.872 595.564 270.637 596.034 271.536 596.034 cv
@
300.716 551.902 mo
305.212 558.101 li
@
305.212 558.101 mo
305.664 558.726 306.33 559.061 307.095 559.061 cv
@
307.095 559.061 mo
307.865 559.061 308.527 558.726 308.979 558.101 cv
@
308.979 558.101 mo
319.902 543.05 li
@
319.902 543.05 mo
320.431 542.323 320.507 541.422 320.096 540.622 cv
@
320.096 540.622 mo
319.689 539.826 318.92 539.348 318.021 539.348 cv
@
318.021 539.348 mo
309.025 539.348 li
@
309.025 539.348 mo
308.26 539.348 307.595 539.685 307.145 540.312 cv
@
307.145 540.312 mo
300.716 549.161 li
@
300.716 549.161 mo
300.113 549.994 300.113 551.07 300.716 551.902 cv
@
201.078 596.034 mo
208.355 596.034 li
@
208.355 596.034 mo
209.638 596.034 210.683 594.987 210.683 593.702 cv
@
210.683 593.702 mo
210.683 541.68 li
@
210.683 541.68 mo
210.683 540.395 209.638 539.348 208.355 539.348 cv
@
208.355 539.348 mo
201.078 539.348 li
@
201.078 539.348 mo
199.797 539.348 198.75 540.395 198.75 541.68 cv
@
198.75 541.68 mo
198.75 593.702 li
@
198.75 593.702 mo
198.75 594.987 199.797 596.034 201.078 596.034 cv
@
94.3836 581.29 mo
94.5315 582.228 94.7278 583.085 94.947 583.846 cv
@
94.947 583.846 mo
95.3567 585.286 95.9397 586.724 96.7713 588.163 cv
@
96.7713 588.163 mo
98.426 591.046 100.666 593.247 103.483 594.856 cv
@
103.483 594.856 mo
106.219 596.48 109.199 597.245 112.432 597.245 cv
@
112.432 597.245 mo
115.002 597.245 117.486 596.734 119.724 595.717 cv
@
119.724 595.717 mo
121.964 594.771 123.867 593.416 125.523 591.721 cv
@
125.523 591.721 mo
127.184 589.944 128.51 587.994 129.422 585.708 cv
@
129.422 585.708 mo
130.332 583.42 130.83 580.88 130.83 578.256 cv
@
130.83 578.256 mo
130.83 571.358 127.842 566.159 121.939 562.654 cv
@
121.939 562.654 mo
121.362 562.311 120.732 562.232 120.092 562.42 cv
@
120.092 562.42 mo
119.445 562.615 118.962 563.017 118.666 563.617 cv
@
118.666 563.617 mo
115.318 570.36 li
@
115.318 570.36 mo
114.797 571.409 115.125 572.668 116.097 573.326 cv
@
116.097 573.326 mo
116.813 573.809 117.385 574.329 117.817 574.864 cv
@
117.817 574.864 mo
118.566 575.797 118.895 577.069 118.895 578.508 cv
@
118.895 578.508 mo
118.895 580.455 118.316 581.979 117.073 583.249 cv
@
117.073 583.249 mo
115.83 584.519 114.337 585.199 112.516 585.199 cv
@
112.516 585.199 mo
109.234 585.199 107.121 583.569 106.224 580.309 cv
@
106.224 580.309 mo
105.942 579.278 105.043 578.593 103.979 578.593 cv
@
103.979 578.593 mo
96.6843 578.593 li
@
96.6843 578.593 mo
95.9783 578.593 95.3723 578.871 94.9124 579.405 cv
@
94.9124 579.405 mo
94.4524 579.948 94.2757 580.592 94.3836 581.29 cv
@
128.01 551.84 mo
127.771 550.339 127.417 548.913 126.851 547.591 cv
@
126.851 547.591 mo
125.979 545.54 124.781 543.778 123.37 542.257 cv
@
123.37 542.257 mo
121.879 540.815 120.138 539.712 118.235 538.867 cv
@
118.235 538.867 mo
116.247 538.104 114.09 537.68 111.687 537.68 cv
@
111.687 537.68 mo
109.365 537.68 107.212 538.104 105.224 538.95 cv
@
105.224 538.95 mo
103.234 539.798 101.495 540.984 99.9978 542.506 cv
@
99.9978 542.506 mo
98.5066 544.032 97.3484 545.727 96.5193 547.761 cv
@
96.5193 547.761 mo
95.6956 549.792 95.2801 551.995 95.2801 554.368 cv
@
95.2801 554.368 mo
95.2801 556.656 95.6956 558.855 96.5193 560.804 cv
@
96.5193 560.804 mo
97.2698 562.838 98.426 564.614 99.8343 566.055 cv
@
99.8343 566.055 mo
100.914 567.073 101.99 567.921 103.15 568.514 cv
@
103.15 568.514 mo
103.883 568.884 104.77 569.255 105.809 569.63 cv
@
105.809 569.63 mo
106.934 570.034 108.16 569.534 108.687 568.46 cv
@
108.687 568.46 mo
111.916 561.863 li
@
111.916 561.863 mo
112.22 561.238 112.241 560.581 111.977 559.939 cv
@
111.977 559.939 mo
111.708 559.297 111.229 558.849 110.571 558.628 cv
@
110.571 558.628 mo
110.305 558.537 110.025 558.458 109.78 558.347 cv
@
109.78 558.347 mo
108.022 557.545 107.212 556.148 107.212 554.368 cv
@
107.212 554.368 mo
107.212 553.094 107.627 551.995 108.454 551.063 cv
@
108.454 551.063 mo
109.286 550.133 110.359 549.709 111.606 549.709 cv
@
111.606 549.709 mo
113.619 549.709 114.929 550.766 115.572 552.882 cv
@
115.572 552.882 mo
115.876 553.879 116.757 554.535 117.798 554.535 cv
@
117.798 554.535 mo
125.712 554.535 li
@
125.712 554.535 mo
126.412 554.535 127.018 554.254 127.478 553.718 cv
@
127.478 553.718 mo
127.934 553.183 128.117 552.536 128.01 551.84 cv
@
746.549 505.125 mo
753.824 505.125 li
@
753.824 505.125 mo
755.109 505.125 756.154 504.076 756.154 502.793 cv
@
756.154 502.793 mo
756.154 469.579 li
@
756.154 469.579 mo
756.154 468.298 755.109 467.247 753.824 467.247 cv
@
753.824 467.247 mo
746.549 467.247 li
@
746.549 467.247 mo
745.267 467.247 744.222 468.298 744.222 469.579 cv
@
744.222 469.579 mo
744.222 502.793 li
@
744.222 502.793 mo
744.222 504.076 745.267 505.125 746.549 505.125 cv
@
733.774 460.303 mo
766.504 460.303 li
@
766.504 460.303 mo
767.788 460.303 768.83 459.254 768.83 457.971 cv
@
768.83 457.971 mo
768.83 450.773 li
@
768.83 450.773 mo
768.83 449.492 767.788 448.445 766.504 448.445 cv
@
766.504 448.445 mo
733.774 448.445 li
@
733.774 448.445 mo
732.495 448.445 731.444 449.492 731.444 450.773 cv
@
731.444 450.773 mo
731.444 457.971 li
@
731.444 457.971 mo
731.444 459.254 732.495 460.303 733.774 460.303 cv
@
674.073 505.125 mo
681.349 505.125 li
@
681.349 505.125 mo
682.634 505.125 683.681 504.076 683.681 502.793 cv
@
683.681 502.793 mo
683.678 450.773 li
@
683.678 450.773 mo
683.678 449.492 682.634 448.445 681.349 448.445 cv
@
681.349 448.445 mo
674.073 448.445 li
@
674.073 448.445 mo
672.792 448.445 671.747 449.492 671.747 450.773 cv
@
671.747 450.773 mo
671.747 502.793 li
@
671.747 502.793 mo
671.747 504.076 672.792 505.125 674.073 505.125 cv
@
637.114 505.125 mo
644.385 505.125 li
@
644.385 505.125 mo
645.671 505.125 646.718 504.076 646.718 502.793 cv
@
646.718 502.793 mo
646.718 450.773 li
@
646.718 450.773 mo
646.718 449.492 645.671 448.445 644.385 448.445 cv
@
644.385 448.445 mo
637.114 448.445 li
@
637.114 448.445 mo
635.833 448.445 634.784 449.492 634.784 450.773 cv
@
634.784 450.773 mo
634.784 502.793 li
@
634.784 502.793 mo
634.784 504.076 635.833 505.125 637.114 505.125 cv
@
653.85 482.665 mo
664.61 482.665 li
@
664.61 482.665 mo
665.893 482.665 666.942 481.617 666.942 480.333 cv
@
666.942 480.333 mo
666.942 473.139 li
@
666.942 473.139 mo
666.942 471.854 665.893 470.803 664.61 470.803 cv
@
664.61 470.803 mo
653.85 470.803 li
@
653.85 470.803 mo
652.573 470.803 651.524 471.854 651.524 473.139 cv
@
651.524 473.139 mo
651.524 480.333 li
@
651.524 480.333 mo
651.524 481.617 652.573 482.665 653.85 482.665 cv
@
579.668 490.179 mo
576.485 493.077 572.725 494.566 568.458 494.566 cv
@
568.458 494.566 mo
566.052 494.566 563.814 494.058 561.74 493.127 cv
@
561.74 493.127 mo
559.672 492.194 557.847 490.924 556.27 489.315 cv
@
556.27 489.315 mo
554.698 487.708 553.54 485.842 552.628 483.726 cv
@
552.628 483.726 mo
551.716 481.525 551.219 479.231 551.219 476.78 cv
@
551.219 476.78 mo
551.219 474.406 551.633 472.119 552.545 469.918 cv
@
552.545 469.918 mo
553.457 467.798 554.698 465.935 556.27 464.33 cv
@
556.27 464.33 mo
557.847 462.716 559.672 461.531 561.74 460.598 cv
@
561.74 460.598 mo
563.814 459.668 566.136 459.242 568.538 459.242 cv
@
568.538 459.242 mo
570.941 459.242 573.098 459.668 575.002 460.43 cv
@
575.002 460.43 mo
576.404 461.054 577.81 461.956 579.252 463.168 cv
@
579.252 463.168 mo
580.172 463.94 581.512 463.894 582.373 463.055 cv
@
582.373 463.055 mo
587.783 457.786 li
@
587.783 457.786 mo
588.257 457.323 588.499 456.74 588.484 456.073 cv
@
588.484 456.073 mo
588.476 455.399 588.215 454.829 587.716 454.383 cv
@
587.716 454.383 mo
582.22 449.438 575.846 446.961 568.538 446.961 cv
@
568.538 446.961 mo
564.478 446.961 560.667 447.723 557.101 449.247 cv
@
557.101 449.247 mo
553.54 450.858 550.472 452.974 547.817 455.685 cv
@
547.817 455.685 mo
545.17 458.399 543.097 461.531 541.604 465.173 cv
@
541.604 465.173 mo
540.03 468.816 539.284 472.625 539.284 476.78 cv
@
539.284 476.78 mo
539.284 480.928 540.03 484.742 541.604 488.382 cv
@
541.604 488.382 mo
543.097 492.023 545.17 495.159 547.904 497.868 cv
@
547.904 497.868 mo
550.555 500.581 553.621 502.7 557.186 504.223 cv
@
557.186 504.223 mo
560.748 505.849 564.476 506.61 568.538 506.61 cv
@
568.538 506.61 mo
571.357 506.61 574.09 506.186 576.658 505.422 cv
@
576.658 505.422 mo
579.228 504.647 581.715 503.459 583.951 502.02 cv
@
583.951 502.02 mo
586.19 500.581 588.257 498.799 590.085 496.685 cv
@
590.085 496.685 mo
591.035 495.578 591.919 494.412 592.72 493.171 cv
@
592.72 493.171 mo
593.196 492.434 593.23 491.561 592.809 490.787 cv
@
592.809 490.787 mo
592.397 490.018 591.643 489.571 590.765 489.571 cv
@
590.765 489.571 mo
581.235 489.571 li
@
581.235 489.571 mo
580.635 489.571 580.114 489.771 579.668 490.179 cv
@
570.786 482.792 mo
594.86 482.792 li
@
594.86 482.792 mo
596.018 482.792 596.986 481.955 597.16 480.811 cv
@
597.16 480.811 mo
597.216 480.426 597.263 480.068 597.295 479.743 cv
@
597.295 479.743 mo
597.375 478.894 597.377 477.961 597.377 476.861 cv
@
597.377 476.861 mo
597.377 475.762 597.377 474.828 597.295 473.984 cv
@
597.295 473.984 mo
597.263 473.653 597.216 473.297 597.16 472.919 cv
@
597.16 472.919 mo
596.988 471.769 596.018 470.938 594.86 470.938 cv
@
594.86 470.938 mo
570.786 470.936 li
@
570.786 470.936 mo
569.506 470.936 568.458 471.979 568.458 473.266 cv
@
568.458 473.266 mo
568.458 480.458 li
@
568.458 480.458 mo
568.458 481.745 569.506 482.792 570.786 482.792 cv
@
473.789 505.125 mo
481.065 505.125 li
@
481.065 505.125 mo
482.347 505.125 483.393 504.076 483.393 502.793 cv
@
483.393 502.793 mo
483.393 450.773 li
@
483.393 450.773 mo
483.393 449.492 482.347 448.445 481.065 448.445 cv
@
481.065 448.445 mo
473.789 448.445 li
@
473.789 448.445 mo
472.507 448.445 471.461 449.492 471.461 450.773 cv
@
471.461 450.773 mo
471.461 502.793 li
@
471.461 502.793 mo
471.461 504.076 472.507 505.125 473.789 505.125 cv
@
387.276 482.748 mo
404.497 482.746 li
@
404.497 482.746 mo
405.78 482.746 406.827 481.698 406.827 480.416 cv
@
406.827 480.416 mo
406.827 473.216 li
@
406.827 473.216 mo
406.827 471.935 405.78 470.888 404.497 470.888 cv
@
404.497 470.888 mo
387.276 470.888 li
@
387.276 470.888 mo
385.994 470.888 384.95 471.935 384.95 473.216 cv
@
384.95 473.216 mo
384.95 480.416 li
@
384.95 480.416 mo
384.95 481.698 385.994 482.748 387.276 482.748 cv
@
387.276 505.129 mo
404.497 505.124 li
@
404.497 505.124 mo
405.78 505.124 406.827 504.074 406.827 502.791 cv
@
406.827 502.791 mo
406.827 495.584 li
@
406.827 495.584 mo
406.827 494.297 405.78 493.252 404.497 493.252 cv
@
404.497 493.252 mo
387.276 493.252 li
@
387.276 493.252 mo
385.994 493.252 384.95 494.297 384.95 495.584 cv
@
384.95 495.584 mo
384.95 502.791 li
@
384.95 502.791 mo
384.95 504.074 385.994 505.129 387.276 505.129 cv
@
368.549 505.124 mo
375.825 505.124 li
@
375.825 505.124 mo
377.105 505.124 378.154 504.074 378.154 502.791 cv
@
378.154 502.791 mo
378.154 450.771 li
@
378.154 450.771 mo
378.154 449.49 377.105 448.441 375.825 448.441 cv
@
375.825 448.441 mo
368.549 448.441 li
@
368.549 448.441 mo
367.265 448.441 366.22 449.49 366.22 450.771 cv
@
366.22 450.771 mo
366.22 502.791 li
@
366.22 502.791 mo
366.22 504.074 367.265 505.124 368.549 505.124 cv
@
387.276 460.301 mo
404.497 460.301 li
@
404.497 460.301 mo
405.78 460.301 406.827 459.252 406.827 457.969 cv
@
406.827 457.969 mo
406.827 450.771 li
@
406.827 450.771 mo
406.827 449.49 405.78 448.441 404.497 448.441 cv
@
404.497 448.441 mo
387.276 448.441 li
@
387.276 448.441 mo
385.994 448.441 384.95 449.49 384.95 450.771 cv
@
384.95 450.771 mo
384.95 457.969 li
@
384.95 457.969 mo
384.95 459.252 385.994 460.301 387.276 460.301 cv
@
297.674 503.723 mo
301.762 495.717 li
@
301.762 495.717 mo
302.11 495.035 302.11 494.293 301.765 493.608 cv
@
301.765 493.608 mo
279.744 449.867 li
@
279.744 449.867 mo
279.335 449.059 278.564 448.583 277.664 448.583 cv
@
277.664 448.583 mo
269.519 448.583 li
@
269.519 448.583 mo
268.694 448.583 267.974 448.98 267.54 449.692 cv
@
267.54 449.692 mo
267.1 450.402 267.068 451.221 267.443 451.966 cv
@
267.443 451.966 mo
293.521 503.711 li
@
293.521 503.711 mo
293.925 504.514 294.694 504.992 295.597 504.992 cv
@
295.597 504.992 mo
296.494 504.993 297.262 504.522 297.674 503.723 cv
@
299.855 475.05 mo
303.948 483.106 li
@
303.948 483.106 mo
304.351 483.91 305.126 484.384 306.024 484.378 cv
@
306.024 484.378 mo
306.925 484.378 307.694 483.905 308.1 483.102 cv
@
308.1 483.102 mo
323.797 451.966 li
@
323.797 451.966 mo
324.178 451.221 324.137 450.404 323.705 449.694 cv
@
323.705 449.694 mo
323.268 448.984 322.554 448.583 321.719 448.583 cv
@
321.719 448.583 mo
313.595 448.583 li
@
313.595 448.583 mo
312.691 448.583 311.924 449.059 311.517 449.861 cv
@
311.517 449.861 mo
299.849 472.937 li
@
299.849 472.937 mo
299.501 473.626 299.501 474.365 299.855 475.05 cv
@
201.078 505.125 mo
208.355 505.125 li
@
208.355 505.125 mo
209.638 505.125 210.683 504.076 210.683 502.793 cv
@
210.683 502.793 mo
210.683 450.773 li
@
210.683 450.773 mo
210.683 449.492 209.638 448.445 208.355 448.445 cv
@
208.355 448.445 mo
201.078 448.445 li
@
201.078 448.445 mo
199.797 448.445 198.75 449.492 198.75 450.773 cv
@
198.75 450.773 mo
198.75 502.793 li
@
198.75 502.793 mo
198.75 504.076 199.797 505.125 201.078 505.125 cv
@
114.82 482.748 mo
130.959 482.748 li
@
130.959 482.748 mo
132.242 482.748 133.287 481.7 133.287 480.418 cv
@
133.287 480.418 mo
133.287 473.22 li
@
133.287 473.22 mo
133.287 471.939 132.242 470.89 130.959 470.89 cv
@
130.959 470.89 mo
114.82 470.89 li
@
114.82 470.89 mo
113.536 470.89 112.49 471.939 112.49 473.22 cv
@
112.49 473.22 mo
112.49 480.418 li
@
112.49 480.418 mo
112.49 481.7 113.536 482.748 114.82 482.748 cv
@
96.6692 505.125 mo
103.946 505.125 li
@
103.946 505.125 mo
105.228 505.125 106.275 504.076 106.275 502.793 cv
@
106.275 502.793 mo
106.275 450.773 li
@
106.275 450.773 mo
106.275 449.492 105.228 448.445 103.946 448.445 cv
@
103.946 448.445 mo
96.6692 448.445 li
@
96.6692 448.445 mo
95.386 448.445 94.3391 449.492 94.3391 450.773 cv
@
94.3391 450.773 mo
94.3391 502.793 li
@
94.3391 502.793 mo
94.3391 504.076 95.386 505.125 96.6692 505.125 cv
@
114.82 460.303 mo
130.959 460.303 li
@
130.959 460.303 mo
132.242 460.303 133.287 459.254 133.287 457.971 cv
@
133.287 457.971 mo
133.287 450.773 li
@
133.287 450.773 mo
133.287 449.492 132.242 448.445 130.959 448.445 cv
@
130.959 448.445 mo
114.82 448.445 li
@
114.82 448.445 mo
113.536 448.445 112.49 449.492 112.49 450.773 cv
@
112.49 450.773 mo
112.49 457.971 li
@
112.49 457.971 mo
112.49 459.254 113.536 460.303 114.82 460.303 cv
@
721.635 392.113 mo
722.201 394.788 723.155 397.317 724.42 399.722 cv
@
724.42 399.722 mo
726.109 402.928 728.235 405.737 730.802 408.11 cv
@
730.802 408.11 mo
733.373 410.48 736.351 412.346 739.668 413.618 cv
@
739.668 413.618 mo
742.983 414.989 746.467 415.663 750.195 415.663 cv
@
750.195 415.663 mo
753.924 415.663 757.403 414.989 760.717 413.702 cv
@
760.717 413.702 mo
763.949 412.431 766.933 410.569 769.502 408.194 cv
@
769.502 408.194 mo
772.072 405.907 774.142 403.115 775.885 399.892 cv
@
775.885 399.892 mo
777.125 397.483 778.043 394.883 778.634 392.125 cv
@
778.634 392.125 mo
778.788 391.413 778.622 390.744 778.166 390.174 cv
@
778.166 390.174 mo
777.71 389.609 777.085 389.305 776.357 389.305 cv
@
776.357 389.305 mo
768.863 389.305 li
@
768.863 389.305 mo
767.834 389.305 766.96 389.944 766.646 390.929 cv
@
766.646 390.929 mo
765.484 394.572 763.543 397.471 760.884 399.639 cv
@
760.884 399.639 mo
757.802 402.157 754.257 403.452 750.112 403.452 cv
@
750.112 403.452 mo
748.036 403.452 746.052 403.115 744.224 402.435 cv
@
744.224 402.435 mo
742.404 401.758 740.748 400.825 739.255 399.555 cv
@
739.255 399.555 mo
737.763 398.285 736.522 396.844 735.445 395.066 cv
@
735.445 395.066 mo
734.656 393.83 734.046 392.454 733.609 390.979 cv
@
733.609 390.979 mo
733.318 389.975 732.427 389.305 731.379 389.305 cv
@
731.379 389.305 mo
723.918 389.305 li
@
723.918 389.305 mo
723.19 389.305 722.56 389.605 722.11 390.167 cv
@
722.11 390.167 mo
721.653 390.735 721.491 391.404 721.635 392.113 cv
@
733.615 380.785 mo
734.048 379.327 734.656 377.982 735.445 376.685 cv
@
735.445 376.685 mo
736.522 374.907 737.763 373.467 739.255 372.196 cv
@
739.255 372.196 mo
740.748 370.924 742.404 369.991 744.224 369.313 cv
@
744.224 369.313 mo
746.052 368.638 748.036 368.297 750.112 368.297 cv
@
750.112 368.297 mo
754.257 368.297 757.818 369.568 760.884 372.026 cv
@
760.884 372.026 mo
763.566 374.246 765.484 377.175 766.646 380.822 cv
@
766.646 380.822 mo
766.96 381.809 767.834 382.444 768.863 382.444 cv
@
768.863 382.444 mo
776.357 382.444 li
@
776.357 382.444 mo
777.085 382.444 777.708 382.145 778.166 381.579 cv
@
778.166 381.579 mo
778.622 381.012 778.788 380.336 778.634 379.628 cv
@
778.634 379.628 mo
778.043 376.868 777.152 374.252 775.885 371.857 cv
@
775.885 371.857 mo
774.174 368.62 772.072 365.844 769.502 363.47 cv
@
769.502 363.47 mo
766.933 361.182 763.949 359.322 760.717 358.049 cv
@
760.717 358.049 mo
757.403 356.78 753.924 356.102 750.195 356.102 cv
@
750.195 356.102 mo
746.467 356.102 742.983 356.78 739.668 358.049 cv
@
739.668 358.049 mo
736.351 359.404 733.373 361.267 730.802 363.641 cv
@
730.802 363.641 mo
728.235 366.011 726.078 368.809 724.42 372.026 cv
@
724.42 372.026 mo
723.127 374.42 722.201 376.959 721.635 379.638 cv
@
721.635 379.638 mo
721.491 380.344 721.653 381.02 722.11 381.581 cv
@
722.11 381.581 mo
722.566 382.147 723.19 382.444 723.918 382.444 cv
@
723.918 382.444 mo
731.385 382.444 li
@
731.385 382.444 mo
732.429 382.444 733.315 381.785 733.615 380.785 cv
@
659.117 391.845 mo
661.348 391.845 li
@
661.348 391.845 mo
664.333 391.845 666.734 391.591 668.641 390.998 cv
@
668.641 390.998 mo
670.546 390.491 672.287 389.557 673.861 388.287 cv
@
673.861 388.287 mo
675.931 386.68 677.506 384.645 678.666 382.19 cv
@
678.666 382.19 mo
679.747 379.817 680.324 377.278 680.324 374.651 cv
@
680.324 374.651 mo
680.324 372.194 679.828 369.822 678.833 367.62 cv
@
678.833 367.62 mo
677.837 365.417 676.433 363.468 674.69 361.863 cv
@
674.69 361.863 mo
673.778 361.099 672.951 360.418 672.037 359.827 cv
@
672.037 359.827 mo
671.125 359.235 670.048 358.811 668.973 358.471 cv
@
668.973 358.471 mo
667.813 358.132 666.567 357.878 665.241 357.708 cv
@
665.241 357.708 mo
663.833 357.624 662.259 357.541 660.517 357.541 cv
@
660.517 357.541 mo
659.117 357.541 li
@
659.117 357.541 mo
657.835 357.541 656.788 358.588 656.788 359.873 cv
@
656.788 359.873 mo
656.788 367.235 li
@
656.788 367.235 mo
656.788 368.521 657.835 369.571 659.117 369.571 cv
@
659.117 369.571 mo
661.265 369.571 li
@
661.265 369.571 mo
662.675 369.571 663.756 369.652 664.497 369.737 cv
@
664.497 369.737 mo
665.241 369.908 665.907 370.161 666.484 370.581 cv
@
666.484 370.581 mo
667.065 371.006 667.561 371.599 667.975 372.279 cv
@
667.975 372.279 mo
668.392 373.042 668.554 373.802 668.554 374.651 cv
@
668.554 374.651 mo
668.554 375.666 668.308 376.513 667.813 377.36 cv
@
667.813 377.36 mo
667.232 378.121 666.567 378.799 665.655 379.142 cv
@
665.655 379.142 mo
665.076 379.396 664.416 379.65 663.756 379.733 cv
@
663.756 379.733 mo
663.086 379.817 662.095 379.817 660.684 379.817 cv
@
660.684 379.817 mo
659.117 379.817 li
@
659.117 379.817 mo
657.835 379.817 656.788 380.868 656.788 382.149 cv
@
656.788 382.149 mo
656.788 389.513 li
@
656.788 389.513 mo
656.788 390.796 657.835 391.845 659.117 391.845 cv
@
640.473 414.222 mo
647.749 414.222 li
@
647.749 414.222 mo
649.03 414.222 650.077 413.172 650.077 411.888 cv
@
650.077 411.888 mo
650.077 359.873 li
@
650.077 359.873 mo
650.077 358.588 649.03 357.541 647.749 357.541 cv
@
647.749 357.541 mo
640.473 357.541 li
@
640.473 357.541 mo
639.192 357.541 638.143 358.588 638.143 359.873 cv
@
638.143 359.873 mo
638.143 411.888 li
@
638.143 411.888 mo
638.143 413.172 639.192 414.222 640.473 414.222 cv
@
669.137 414.222 mo
676.812 414.222 li
@
676.812 414.222 mo
677.588 414.222 678.26 413.876 678.708 413.241 cv
@
678.708 413.241 mo
679.156 412.614 679.266 411.868 679.012 411.134 cv
@
679.012 411.134 mo
674.034 396.648 li
@
674.034 396.648 mo
673.819 396.024 673.411 395.566 672.814 395.289 cv
@
672.814 395.289 mo
672.219 395.016 671.6 394.994 670.99 395.231 cv
@
670.99 395.231 mo
669.986 395.619 668.981 395.93 667.975 396.164 cv
@
667.975 396.164 mo
666.921 396.412 665.749 396.575 664.46 396.68 cv
@
664.46 396.68 mo
663.714 396.738 663.101 397.107 662.697 397.733 cv
@
662.697 397.733 mo
662.29 398.356 662.205 399.064 662.447 399.772 cv
@
662.447 399.772 mo
666.936 412.658 li
@
666.936 412.658 mo
667.269 413.611 668.126 414.222 669.137 414.222 cv
@
539.83 392.113 mo
540.39 394.788 541.348 397.317 542.613 399.722 cv
@
542.613 399.722 mo
544.298 402.928 546.427 405.737 548.995 408.11 cv
@
548.995 408.11 mo
551.559 410.48 554.548 412.346 557.861 413.618 cv
@
557.861 413.618 mo
561.177 414.989 564.657 415.663 568.388 415.663 cv
@
568.388 415.663 mo
572.115 415.663 575.596 414.989 578.913 413.702 cv
@
578.913 413.702 mo
582.141 412.431 585.126 410.569 587.695 408.194 cv
@
587.695 408.194 mo
590.265 405.907 592.336 403.115 594.075 399.892 cv
@
594.075 399.892 mo
595.318 397.483 596.236 394.883 596.825 392.125 cv
@
596.825 392.125 mo
596.975 391.413 596.813 390.744 596.359 390.172 cv
@
596.359 390.172 mo
595.903 389.607 595.278 389.305 594.549 389.305 cv
@
594.549 389.305 mo
587.056 389.305 li
@
587.056 389.305 mo
586.021 389.305 585.153 389.948 584.836 390.929 cv
@
584.836 390.929 mo
583.674 394.572 581.736 397.471 579.077 399.639 cv
@
579.077 399.639 mo
575.992 402.157 572.444 403.452 568.305 403.452 cv
@
568.305 403.452 mo
566.231 403.452 564.244 403.115 562.42 402.435 cv
@
562.42 402.435 mo
560.595 401.758 558.937 400.825 557.448 399.555 cv
@
557.448 399.555 mo
555.953 398.285 554.712 396.844 553.635 395.066 cv
@
553.635 395.066 mo
552.85 393.83 552.239 392.454 551.806 390.979 cv
@
551.806 390.979 mo
551.51 389.975 550.621 389.305 549.57 389.305 cv
@
549.57 389.305 mo
542.11 389.305 li
@
542.11 389.305 mo
541.383 389.305 540.758 389.605 540.302 390.167 cv
@
540.302 390.167 mo
539.842 390.733 539.684 391.404 539.83 392.113 cv
@
551.806 380.785 mo
552.245 379.327 552.85 377.978 553.635 376.685 cv
@
553.635 376.685 mo
554.71 374.905 555.953 373.467 557.448 372.196 cv
@
557.448 372.196 mo
558.937 370.924 560.595 369.991 562.42 369.313 cv
@
562.42 369.313 mo
564.244 368.638 566.231 368.297 568.305 368.297 cv
@
568.305 368.297 mo
572.444 368.297 576.01 369.568 579.077 372.026 cv
@
579.077 372.026 mo
581.757 374.246 583.674 377.179 584.836 380.82 cv
@
584.836 380.82 mo
585.153 381.803 586.021 382.444 587.056 382.444 cv
@
587.056 382.444 mo
594.549 382.444 li
@
594.549 382.444 mo
595.278 382.444 595.903 382.145 596.359 381.579 cv
@
596.359 381.579 mo
596.813 381.012 596.975 380.336 596.825 379.628 cv
@
596.825 379.628 mo
596.236 376.868 595.344 374.252 594.075 371.857 cv
@
594.075 371.857 mo
592.365 368.62 590.265 365.844 587.695 363.47 cv
@
587.695 363.47 mo
585.126 361.182 582.141 359.322 578.913 358.049 cv
@
578.913 358.049 mo
575.596 356.78 572.115 356.102 568.388 356.102 cv
@
568.388 356.102 mo
564.657 356.102 561.177 356.78 557.861 358.049 cv
@
557.861 358.049 mo
554.548 359.404 551.559 361.267 548.995 363.641 cv
@
548.995 363.641 mo
546.427 366.011 544.271 368.809 542.613 372.026 cv
@
542.613 372.026 mo
541.318 374.42 540.39 376.959 539.83 379.638 cv
@
539.83 379.638 mo
539.684 380.344 539.842 381.02 540.302 381.581 cv
@
540.302 381.581 mo
540.758 382.147 541.383 382.444 542.11 382.444 cv
@
542.11 382.444 mo
549.578 382.444 li
@
549.578 382.444 mo
550.621 382.444 551.51 381.785 551.806 380.785 cv
@
473.839 414.222 mo
481.114 414.222 li
@
481.114 414.222 mo
482.395 414.222 483.442 413.172 483.442 411.888 cv
@
483.442 411.888 mo
483.442 378.676 li
@
483.442 378.676 mo
483.442 377.395 482.395 376.344 481.114 376.344 cv
@
481.114 376.344 mo
473.839 376.344 li
@
473.839 376.344 mo
472.555 376.344 471.509 377.395 471.509 378.676 cv
@
471.509 378.676 mo
471.509 411.888 li
@
471.509 411.888 mo
471.509 413.172 472.555 414.222 473.839 414.222 cv
@
461.06 369.398 mo
493.794 369.398 li
@
493.794 369.398 mo
495.075 369.398 496.12 368.351 496.12 367.066 cv
@
496.12 367.066 mo
496.12 359.873 li
@
496.12 359.873 mo
496.12 358.588 495.075 357.541 493.794 357.541 cv
@
493.794 357.541 mo
461.06 357.541 li
@
461.06 357.541 mo
459.779 357.541 458.734 358.588 458.734 359.873 cv
@
458.734 359.873 mo
458.734 367.066 li
@
458.734 367.066 mo
458.734 368.351 459.779 369.398 461.06 369.398 cv
@
368.317 399.71 mo
368.468 400.644 368.662 401.506 368.882 402.266 cv
@
368.882 402.266 mo
369.295 403.705 369.876 405.144 370.7 406.587 cv
@
370.7 406.587 mo
372.36 409.464 374.597 411.667 377.415 413.28 cv
@
377.415 413.28 mo
380.149 414.9 383.134 415.663 386.366 415.663 cv
@
386.366 415.663 mo
388.934 415.663 391.419 415.156 393.658 414.14 cv
@
393.658 414.14 mo
395.896 413.193 397.801 411.838 399.458 410.143 cv
@
399.458 410.143 mo
401.118 408.368 402.444 406.412 403.354 404.128 cv
@
403.354 404.128 mo
404.266 401.844 404.762 399.301 404.762 396.674 cv
@
404.762 396.674 mo
404.762 389.779 401.778 384.579 395.867 381.074 cv
@
395.867 381.074 mo
395.29 380.727 394.665 380.65 394.024 380.842 cv
@
394.024 380.842 mo
393.378 381.032 392.898 381.441 392.598 382.041 cv
@
392.598 382.041 mo
389.25 388.776 li
@
389.25 388.776 mo
388.728 389.828 389.059 391.086 390.029 391.744 cv
@
390.029 391.744 mo
390.739 392.234 391.316 392.745 391.752 393.285 cv
@
391.752 393.285 mo
392.496 394.219 392.829 395.489 392.829 396.928 cv
@
392.829 396.928 mo
392.829 398.877 392.248 400.402 391.007 401.671 cv
@
391.007 401.671 mo
389.763 402.943 388.27 403.62 386.447 403.62 cv
@
386.447 403.62 mo
383.168 403.62 381.059 401.989 380.159 398.727 cv
@
380.159 398.727 mo
379.878 397.7 378.973 397.013 377.913 397.013 cv
@
377.913 397.013 mo
370.619 397.013 li
@
370.619 397.013 mo
369.911 397.013 369.306 397.296 368.845 397.832 cv
@
368.845 397.832 mo
368.388 398.369 368.206 399.014 368.317 399.71 cv
@
401.939 370.264 mo
401.697 368.763 401.349 367.335 400.783 366.011 cv
@
400.783 366.011 mo
399.914 363.964 398.713 362.2 397.306 360.676 cv
@
397.306 360.676 mo
395.815 359.239 394.074 358.134 392.165 357.287 cv
@
392.165 357.287 mo
390.176 356.526 388.024 356.102 385.621 356.102 cv
@
385.621 356.102 mo
383.301 356.102 381.143 356.526 379.156 357.372 cv
@
379.156 357.372 mo
377.169 358.219 375.428 359.404 373.936 360.928 cv
@
373.936 360.928 mo
372.441 362.453 371.281 364.149 370.455 366.181 cv
@
370.455 366.181 mo
369.624 368.214 369.209 370.417 369.209 372.786 cv
@
369.209 372.786 mo
369.209 375.074 369.624 377.278 370.455 379.226 cv
@
370.455 379.226 mo
371.2 381.258 372.36 383.036 373.766 384.479 cv
@
373.766 384.479 mo
374.848 385.493 375.926 386.342 377.088 386.934 cv
@
377.088 386.934 mo
377.811 387.31 378.708 387.681 379.745 388.054 cv
@
379.745 388.054 mo
380.865 388.458 382.095 387.956 382.622 386.884 cv
@
382.622 386.884 mo
385.85 380.281 li
@
385.85 380.281 mo
386.156 379.658 386.17 378.999 385.908 378.361 cv
@
385.908 378.361 mo
385.642 377.716 385.163 377.266 384.505 377.046 cv
@
384.505 377.046 mo
384.238 376.955 383.959 376.883 383.715 376.769 cv
@
383.715 376.769 mo
381.952 375.963 381.143 374.566 381.143 372.786 cv
@
381.143 372.786 mo
381.143 371.516 381.559 370.417 382.387 369.487 cv
@
382.387 369.487 mo
383.214 368.555 384.294 368.128 385.539 368.128 cv
@
385.539 368.128 mo
387.552 368.128 388.859 369.184 389.506 371.307 cv
@
389.506 371.307 mo
389.812 372.307 390.693 372.959 391.734 372.959 cv
@
391.734 372.959 mo
399.64 372.959 li
@
399.64 372.959 mo
400.346 372.959 400.953 372.678 401.409 372.14 cv
@
401.409 372.14 mo
401.867 371.607 402.048 370.96 401.939 370.264 cv
@
269.563 414.082 mo
277.705 414.082 li
@
277.705 414.082 mo
278.605 414.082 279.379 413.603 279.785 412.798 cv
@
279.785 412.798 mo
291.382 389.7 li
@
291.382 389.7 mo
291.721 389.02 291.721 388.291 291.382 387.612 cv
@
291.382 387.612 mo
287.345 379.517 li
@
287.345 379.517 mo
286.942 378.706 286.169 378.23 285.268 378.224 cv
@
285.268 378.224 mo
284.364 378.222 283.591 378.702 283.182 379.507 cv
@
283.182 379.507 mo
267.485 410.7 li
@
267.485 410.7 mo
267.112 411.448 267.143 412.266 267.58 412.974 cv
@
267.58 412.974 mo
268.014 413.68 268.732 414.082 269.563 414.082 cv
@
313.484 414.082 mo
321.677 414.082 li
@
321.677 414.082 mo
322.508 414.082 323.223 413.68 323.661 412.972 cv
@
323.661 412.972 mo
324.094 412.258 324.132 411.444 323.755 410.698 cv
@
323.755 410.698 mo
297.619 358.961 li
@
297.619 358.961 mo
297.214 358.158 296.444 357.684 295.547 357.682 cv
@
295.547 357.682 mo
294.642 357.682 293.873 358.154 293.465 358.955 cv
@
293.465 358.955 mo
289.373 367.014 li
@
289.373 367.014 mo
289.024 367.702 289.024 368.442 289.373 369.126 cv
@
289.373 369.126 mo
301.348 392.722 li
@
301.348 392.722 mo
298.067 392.722 li
@
298.067 392.722 mo
297.165 392.722 296.384 393.2 295.982 394.015 cv
@
295.982 394.015 mo
292.413 401.211 li
@
292.413 401.211 mo
292.043 401.954 292.078 402.774 292.522 403.48 cv
@
292.522 403.48 mo
292.957 404.184 293.669 404.578 294.502 404.578 cv
@
294.502 404.578 mo
305.874 404.578 li
@
305.874 404.578 mo
306.78 404.578 307.553 405.06 307.958 405.871 cv
@
307.958 405.871 mo
311.398 412.788 li
@
311.398 412.788 mo
311.802 413.599 312.576 414.082 313.484 414.082 cv
@
185.953 414.222 mo
193.227 414.222 li
@
193.227 414.222 mo
194.512 414.222 195.557 413.172 195.557 411.888 cv
@
195.557 411.888 mo
195.557 359.873 li
@
195.557 359.873 mo
195.557 358.588 194.512 357.541 193.227 357.541 cv
@
193.227 357.541 mo
185.953 357.541 li
@
185.953 357.541 mo
184.671 357.541 183.625 358.588 183.625 359.873 cv
@
183.625 359.873 mo
183.625 411.888 li
@
183.625 411.888 mo
183.625 413.172 184.671 414.222 185.953 414.222 cv
@
204.599 391.845 mo
206.829 391.845 li
@
206.829 391.845 mo
209.811 391.845 212.217 391.591 214.118 390.998 cv
@
214.118 390.998 mo
216.027 390.491 217.766 389.557 219.342 388.287 cv
@
219.342 388.287 mo
221.412 386.68 222.988 384.645 224.148 382.19 cv
@
224.148 382.19 mo
225.229 379.817 225.807 377.278 225.807 374.651 cv
@
225.807 374.651 mo
225.807 372.194 225.31 369.822 224.316 367.62 cv
@
224.316 367.62 mo
223.317 365.417 221.909 363.468 220.172 361.863 cv
@
220.172 361.863 mo
219.262 361.099 218.425 360.418 217.519 359.827 cv
@
217.519 359.827 mo
216.608 359.235 215.53 358.811 214.451 358.471 cv
@
214.451 358.471 mo
213.293 358.132 212.048 357.878 210.721 357.708 cv
@
210.721 357.708 mo
209.313 357.624 207.741 357.541 206 357.541 cv
@
206 357.541 mo
204.599 357.541 li
@
204.599 357.541 mo
203.32 357.541 202.271 358.588 202.271 359.873 cv
@
202.271 359.873 mo
202.271 367.235 li
@
202.271 367.235 mo
202.271 368.521 203.32 369.571 204.599 369.571 cv
@
204.599 369.571 mo
206.747 369.571 li
@
206.747 369.571 mo
208.155 369.571 209.23 369.652 209.977 369.737 cv
@
209.977 369.737 mo
210.721 369.908 211.387 370.161 211.967 370.581 cv
@
211.967 370.581 mo
212.548 371.006 213.043 371.599 213.458 372.279 cv
@
213.458 372.279 mo
213.872 373.042 214.037 373.802 214.037 374.651 cv
@
214.037 374.651 mo
214.037 375.666 213.791 376.513 213.293 377.36 cv
@
213.293 377.36 mo
212.714 378.121 212.048 378.799 211.137 379.142 cv
@
211.137 379.142 mo
210.556 379.396 209.892 379.65 209.23 379.733 cv
@
209.23 379.733 mo
208.569 379.817 207.572 379.817 206.168 379.817 cv
@
206.168 379.817 mo
204.599 379.817 li
@
204.599 379.817 mo
203.32 379.817 202.271 380.868 202.271 382.149 cv
@
202.271 382.149 mo
202.271 389.513 li
@
202.271 389.513 mo
202.271 390.796 203.32 391.845 204.599 391.845 cv
@
89.9134 414.222 mo
97.1887 414.222 li
@
97.1887 414.222 mo
98.47 414.222 99.5188 413.172 99.5188 411.888 cv
@
99.5188 411.888 mo
99.5188 359.873 li
@
99.5188 359.873 mo
99.5188 358.588 98.47 357.541 97.1887 357.541 cv
@
97.1887 357.541 mo
89.9134 357.541 li
@
89.9134 357.541 mo
88.6321 357.541 87.5833 358.588 87.5833 359.873 cv
@
87.5833 359.873 mo
87.5833 411.888 li
@
87.5833 411.888 mo
87.5833 413.172 88.6321 414.222 89.9134 414.222 cv
@
108.397 414.222 mo
110.79 414.222 li
@
110.79 414.222 mo
114.521 414.222 117.665 413.868 120.403 413.107 cv
@
120.403 413.107 mo
123.057 412.344 125.543 411.161 127.861 409.546 cv
@
127.861 409.546 mo
131.671 406.837 134.656 403.365 136.81 399.214 cv
@
136.81 399.214 mo
138.966 395.064 140.041 390.575 140.041 385.831 cv
@
140.041 385.831 mo
140.041 381.682 139.214 377.699 137.559 374.054 cv
@
137.559 374.054 mo
135.9 370.415 133.414 367.197 130.264 364.315 cv
@
130.264 364.315 mo
127.611 361.944 124.711 360.25 121.644 359.148 cv
@
121.644 359.148 mo
118.496 358.051 114.683 357.541 110.292 357.541 cv
@
110.292 357.541 mo
108.397 357.541 li
@
108.397 357.541 mo
107.114 357.541 106.067 358.588 106.067 359.873 cv
@
106.067 359.873 mo
106.067 367.066 li
@
106.067 367.066 mo
106.067 368.351 107.114 369.398 108.397 369.398 cv
@
108.397 369.398 mo
109.134 369.398 li
@
109.134 369.398 mo
110.706 369.398 112.035 369.398 113.275 369.485 cv
@
113.275 369.485 mo
114.437 369.571 115.514 369.737 116.422 369.991 cv
@
116.422 369.991 mo
117.336 370.244 118.246 370.581 119.077 371.006 cv
@
119.077 371.006 mo
119.824 371.432 120.652 371.853 121.396 372.448 cv
@
121.396 372.448 mo
123.472 373.973 125.125 375.92 126.372 378.295 cv
@
126.372 378.295 mo
127.531 380.665 128.11 383.292 128.11 385.914 cv
@
128.11 385.914 mo
128.11 390.319 126.535 394.219 123.384 397.521 cv
@
123.384 397.521 mo
121.729 399.214 119.907 400.402 118.002 401.161 cv
@
118.002 401.161 mo
116.011 401.84 113.442 402.177 110.377 402.177 cv
@
110.377 402.177 mo
108.397 402.177 li
@
108.397 402.177 mo
107.114 402.177 106.067 403.226 106.067 404.509 cv
@
106.067 404.509 mo
106.067 411.888 li
@
106.067 411.888 mo
106.067 413.172 107.114 414.222 108.397 414.222 cv
@
751.137 300.943 mo
767.281 300.943 li
@
767.281 300.943 mo
768.563 300.943 769.613 299.895 769.613 298.61 cv
@
769.613 298.61 mo
769.613 291.417 li
@
769.613 291.417 mo
769.613 290.135 768.563 289.086 767.281 289.086 cv
@
767.281 289.086 mo
751.137 289.086 li
@
751.137 289.086 mo
749.856 289.086 748.809 290.135 748.809 291.417 cv
@
748.809 291.417 mo
748.809 298.61 li
@
748.809 298.61 mo
748.809 299.895 749.856 300.943 751.137 300.943 cv
@
732.991 323.319 mo
740.266 323.319 li
@
740.266 323.319 mo
741.547 323.319 742.598 322.274 742.598 320.987 cv
@
742.598 320.987 mo
742.598 268.97 li
@
742.598 268.97 mo
742.598 267.685 741.547 266.638 740.266 266.638 cv
@
740.266 266.638 mo
732.991 266.638 li
@
732.991 266.638 mo
731.71 266.638 730.661 267.685 730.661 268.97 cv
@
730.661 268.97 mo
730.661 320.987 li
@
730.661 320.987 mo
730.661 322.274 731.71 323.319 732.991 323.319 cv
@
751.137 278.498 mo
767.281 278.498 li
@
767.281 278.498 mo
768.563 278.498 769.613 277.448 769.613 276.166 cv
@
769.613 276.166 mo
769.613 268.97 li
@
769.613 268.97 mo
769.613 267.685 768.563 266.638 767.281 266.638 cv
@
767.281 266.638 mo
751.137 266.638 li
@
751.137 266.638 mo
749.856 266.638 748.809 267.685 748.809 268.97 cv
@
748.809 268.97 mo
748.809 276.166 li
@
748.809 276.166 mo
748.809 277.448 749.856 278.498 751.137 278.498 cv
@
644.99 323.319 mo
652.268 323.319 li
@
652.268 323.319 mo
653.547 323.319 654.593 322.274 654.593 320.987 cv
@
654.593 320.987 mo
654.593 268.97 li
@
654.593 268.97 mo
654.593 267.685 653.547 266.638 652.268 266.638 cv
@
652.268 266.638 mo
644.99 266.638 li
@
644.99 266.638 mo
643.706 266.638 642.658 267.685 642.658 268.97 cv
@
642.658 268.97 mo
642.658 320.987 li
@
642.658 320.987 mo
642.658 322.274 643.706 323.319 644.99 323.319 cv
@
662.06 323.319 mo
673.482 323.319 li
@
673.482 323.319 mo
674.763 323.319 675.81 322.274 675.81 320.987 cv
@
675.81 320.987 mo
675.81 313.781 li
@
675.81 313.781 mo
675.81 312.497 674.763 311.447 673.482 311.447 cv
@
673.482 311.447 mo
662.06 311.447 li
@
662.06 311.447 mo
660.779 311.447 659.732 312.497 659.732 313.781 cv
@
659.732 313.781 mo
659.732 320.987 li
@
659.732 320.987 mo
659.732 322.274 660.779 323.319 662.06 323.319 cv
@
542.274 323.176 mo
550.411 323.176 li
@
550.411 323.176 mo
551.311 323.176 552.087 322.7 552.491 321.891 cv
@
552.491 321.891 mo
564.086 298.792 li
@
564.086 298.792 mo
564.43 298.117 564.43 297.385 564.09 296.706 cv
@
564.09 296.706 mo
560.054 288.612 li
@
560.054 288.612 mo
559.651 287.803 558.877 287.327 557.974 287.327 cv
@
557.974 287.327 mo
557.074 287.321 556.301 287.799 555.893 288.608 cv
@
555.893 288.608 mo
540.194 319.798 li
@
540.194 319.798 mo
539.819 320.542 539.853 321.362 540.29 322.069 cv
@
540.29 322.069 mo
540.729 322.777 541.441 323.176 542.274 323.176 cv
@
586.19 323.176 mo
594.386 323.176 li
@
594.386 323.176 mo
595.219 323.176 595.936 322.777 596.369 322.065 cv
@
596.369 322.065 mo
596.802 321.357 596.843 320.536 596.463 319.794 cv
@
596.463 319.794 mo
570.332 268.058 li
@
570.332 268.058 mo
569.922 267.253 569.154 266.781 568.258 266.781 cv
@
568.258 266.781 mo
567.353 266.779 566.58 267.251 566.176 268.054 cv
@
566.176 268.054 mo
562.083 276.109 li
@
562.083 276.109 mo
561.73 276.801 561.73 277.54 562.083 278.225 cv
@
562.083 278.225 mo
574.056 301.817 li
@
574.056 301.817 mo
570.778 301.817 li
@
570.778 301.817 mo
569.87 301.817 569.093 302.3 568.692 303.114 cv
@
568.692 303.114 mo
565.125 310.308 li
@
565.125 310.308 mo
564.754 311.051 564.788 311.867 565.227 312.575 cv
@
565.227 312.575 mo
565.666 313.281 566.378 313.677 567.207 313.677 cv
@
567.207 313.677 mo
578.584 313.677 li
@
578.584 313.677 mo
579.49 313.677 580.269 314.159 580.668 314.97 cv
@
580.668 314.97 mo
584.108 321.883 li
@
584.108 321.883 mo
584.509 322.694 585.282 323.176 586.19 323.176 cv
@
492.265 323.319 mo
499.547 323.319 li
@
499.547 323.319 mo
500.828 323.319 501.871 322.274 501.871 320.987 cv
@
501.871 320.987 mo
501.871 268.97 li
@
501.871 268.97 mo
501.871 267.685 500.828 266.638 499.547 266.638 cv
@
499.547 266.638 mo
492.265 266.638 li
@
492.265 266.638 mo
490.988 266.638 489.939 267.685 489.939 268.97 cv
@
489.939 268.97 mo
489.939 320.987 li
@
489.939 320.987 mo
489.939 322.274 490.988 323.319 492.265 323.319 cv
@
455.309 323.319 mo
462.588 323.319 li
@
462.588 323.319 mo
463.866 323.319 464.915 322.274 464.915 320.987 cv
@
464.915 320.987 mo
464.913 268.97 li
@
464.913 268.97 mo
464.913 267.685 463.866 266.638 462.588 266.638 cv
@
462.588 266.638 mo
455.309 266.638 li
@
455.309 266.638 mo
454.026 266.638 452.979 267.685 452.979 268.97 cv
@
452.979 268.97 mo
452.979 320.987 li
@
452.979 320.987 mo
452.979 322.274 454.026 323.319 455.309 323.319 cv
@
472.051 300.859 mo
482.804 300.859 li
@
482.804 300.859 mo
484.087 300.859 485.137 299.81 485.137 298.529 cv
@
485.137 298.529 mo
485.137 291.332 li
@
485.137 291.332 mo
485.137 290.051 484.087 289 482.804 289 cv
@
482.804 289 mo
472.051 289 li
@
472.051 289 mo
470.767 289 469.719 290.051 469.719 291.332 cv
@
469.719 291.332 mo
469.719 298.529 li
@
469.719 298.529 mo
469.719 299.81 470.767 300.859 472.051 300.859 cv
@
387.276 300.943 mo
404.497 300.943 li
@
404.497 300.943 mo
405.78 300.943 406.827 299.895 406.827 298.61 cv
@
406.827 298.61 mo
406.827 291.417 li
@
406.827 291.417 mo
406.827 290.135 405.78 289.086 404.497 289.086 cv
@
404.497 289.086 mo
387.276 289.086 li
@
387.276 289.086 mo
385.994 289.086 384.95 290.135 384.95 291.417 cv
@
384.95 291.417 mo
384.95 298.61 li
@
384.95 298.61 mo
384.95 299.895 385.994 300.943 387.276 300.943 cv
@
387.276 323.319 mo
404.497 323.319 li
@
404.497 323.319 mo
405.78 323.319 406.827 322.274 406.827 320.987 cv
@
406.827 320.987 mo
406.827 313.781 li
@
406.827 313.781 mo
406.827 312.497 405.78 311.447 404.497 311.447 cv
@
404.497 311.447 mo
387.276 311.447 li
@
387.276 311.447 mo
385.994 311.447 384.95 312.497 384.95 313.781 cv
@
384.95 313.781 mo
384.95 320.987 li
@
384.95 320.987 mo
384.95 322.274 385.994 323.319 387.276 323.319 cv
@
368.549 323.319 mo
375.825 323.319 li
@
375.825 323.319 mo
377.105 323.319 378.154 322.274 378.154 320.987 cv
@
378.154 320.987 mo
378.154 268.97 li
@
378.154 268.97 mo
378.154 267.685 377.105 266.638 375.825 266.638 cv
@
375.825 266.638 mo
368.549 266.638 li
@
368.549 266.638 mo
367.265 266.638 366.22 267.685 366.22 268.97 cv
@
366.22 268.97 mo
366.22 320.987 li
@
366.22 320.987 mo
366.22 322.274 367.265 323.319 368.549 323.319 cv
@
387.276 278.498 mo
404.497 278.498 li
@
404.497 278.498 mo
405.78 278.498 406.827 277.448 406.827 276.166 cv
@
406.827 276.166 mo
406.827 268.97 li
@
406.827 268.97 mo
406.827 267.685 405.78 266.638 404.497 266.638 cv
@
404.497 266.638 mo
387.276 266.638 li
@
387.276 266.638 mo
385.994 266.638 384.95 267.685 384.95 268.97 cv
@
384.95 268.97 mo
384.95 276.166 li
@
384.95 276.166 mo
384.95 277.448 385.994 278.498 387.276 278.498 cv
@
297.674 321.91 mo
301.762 313.91 li
@
301.762 313.91 mo
302.11 313.227 302.11 312.488 301.765 311.797 cv
@
301.765 311.797 mo
279.744 268.058 li
@
279.744 268.058 mo
279.335 267.251 278.564 266.777 277.664 266.777 cv
@
277.664 266.777 mo
269.519 266.773 li
@
269.519 266.773 mo
268.694 266.773 267.974 267.175 267.54 267.885 cv
@
267.54 267.885 mo
267.1 268.593 267.068 269.414 267.443 270.16 cv
@
267.443 270.16 mo
293.521 321.903 li
@
293.521 321.903 mo
293.925 322.707 294.694 323.178 295.597 323.184 cv
@
295.597 323.184 mo
296.494 323.186 297.262 322.714 297.674 321.91 cv
@
299.855 293.241 mo
303.948 301.299 li
@
303.948 301.299 mo
304.351 302.104 305.126 302.577 306.024 302.573 cv
@
306.024 302.573 mo
306.925 302.569 307.694 302.096 308.1 301.295 cv
@
308.1 301.295 mo
323.797 270.16 li
@
323.797 270.16 mo
324.178 269.414 324.137 268.593 323.705 267.887 cv
@
323.705 267.887 mo
323.268 267.177 322.554 266.773 321.719 266.773 cv
@
321.719 266.773 mo
313.595 266.773 li
@
313.595 266.773 mo
312.691 266.773 311.924 267.249 311.517 268.054 cv
@
311.517 268.054 mo
299.849 291.128 li
@
299.849 291.128 mo
299.501 291.811 299.501 292.558 299.855 293.241 cv
@
201.078 323.319 mo
208.355 323.319 li
@
208.355 323.319 mo
209.638 323.319 210.683 322.274 210.683 320.987 cv
@
210.683 320.987 mo
210.683 268.97 li
@
210.683 268.97 mo
210.683 267.685 209.638 266.638 208.355 266.638 cv
@
208.355 266.638 mo
201.078 266.638 li
@
201.078 266.638 mo
199.797 266.638 198.75 267.685 198.75 268.97 cv
@
198.75 268.97 mo
198.75 320.987 li
@
198.75 320.987 mo
198.75 322.274 199.797 323.319 201.078 323.319 cv
@
114.82 300.943 mo
130.959 300.943 li
@
130.959 300.943 mo
132.242 300.943 133.287 299.895 133.287 298.61 cv
@
133.287 298.61 mo
133.287 291.417 li
@
133.287 291.417 mo
133.287 290.135 132.242 289.086 130.959 289.086 cv
@
130.959 289.086 mo
114.82 289.086 li
@
114.82 289.086 mo
113.536 289.086 112.49 290.135 112.49 291.417 cv
@
112.49 291.417 mo
112.49 298.61 li
@
112.49 298.61 mo
112.49 299.895 113.536 300.943 114.82 300.943 cv
@
96.6692 323.319 mo
103.946 323.319 li
@
103.946 323.319 mo
105.228 323.319 106.275 322.274 106.275 320.987 cv
@
106.275 320.987 mo
106.275 268.97 li
@
106.275 268.97 mo
106.275 267.685 105.228 266.638 103.946 266.638 cv
@
103.946 266.638 mo
96.6692 266.638 li
@
96.6692 266.638 mo
95.386 266.638 94.3391 267.685 94.3391 268.97 cv
@
94.3391 268.97 mo
94.3391 320.987 li
@
94.3391 320.987 mo
94.3391 322.274 95.386 323.319 96.6692 323.319 cv
@
114.82 278.498 mo
130.959 278.498 li
@
130.959 278.498 mo
132.242 278.498 133.287 277.448 133.287 276.166 cv
@
133.287 276.166 mo
133.287 268.97 li
@
133.287 268.97 mo
133.287 267.685 132.242 266.638 130.959 266.638 cv
@
130.959 266.638 mo
114.82 266.638 li
@
114.82 266.638 mo
113.536 266.638 112.49 267.685 112.49 268.97 cv
@
112.49 268.97 mo
112.49 276.166 li
@
112.49 276.166 mo
112.49 277.448 113.536 278.498 114.82 278.498 cv
@
744.802 232.415 mo
752.079 232.415 li
@
752.079 232.415 mo
753.36 232.415 754.407 231.37 754.407 230.083 cv
@
754.407 230.083 mo
754.407 208.077 li
@
754.407 208.077 mo
754.407 207.571 754.546 207.136 754.844 206.723 cv
@
754.844 206.723 mo
774.32 179.421 li
@
774.32 179.421 mo
774.842 178.696 774.903 177.795 774.497 177 cv
@
774.497 177 mo
774.085 176.204 773.319 175.735 772.427 175.735 cv
@
772.427 175.735 mo
763.398 175.735 li
@
763.398 175.735 mo
762.621 175.735 761.957 176.077 761.502 176.71 cv
@
761.502 176.71 mo
742.912 202.74 li
@
742.912 202.74 mo
742.614 203.156 742.473 203.588 742.473 204.1 cv
@
742.473 204.1 mo
742.473 230.083 li
@
742.473 230.083 mo
742.473 231.37 743.518 232.415 744.802 232.415 cv
@
740.175 194.518 mo
744.734 188.253 li
@
744.734 188.253 mo
745.331 187.437 745.343 186.384 744.769 185.555 cv
@
744.769 185.555 mo
738.694 176.743 li
@
738.694 176.743 mo
738.244 176.092 737.563 175.737 736.776 175.737 cv
@
736.776 175.737 mo
727.854 175.735 li
@
727.854 175.735 mo
726.958 175.735 726.201 176.201 725.786 176.985 cv
@
725.786 176.985 mo
725.372 177.774 725.433 178.663 725.937 179.396 cv
@
725.937 179.396 mo
736.38 194.476 li
@
736.38 194.476 mo
736.826 195.113 737.488 195.466 738.267 195.476 cv
@
738.267 195.476 mo
739.047 195.482 739.717 195.145 740.175 194.518 cv
@
659.115 210.039 mo
661.346 210.039 li
@
661.346 210.039 mo
664.329 210.039 666.734 209.785 668.639 209.193 cv
@
668.639 209.193 mo
670.544 208.687 672.283 207.754 673.861 206.484 cv
@
673.861 206.484 mo
675.931 204.873 677.506 202.841 678.666 200.384 cv
@
678.666 200.384 mo
679.741 198.012 680.324 195.47 680.324 192.846 cv
@
680.324 192.846 mo
680.324 190.387 679.826 188.018 678.833 185.815 cv
@
678.833 185.815 mo
677.837 183.61 676.427 181.664 674.688 180.056 cv
@
674.688 180.056 mo
673.776 179.292 672.947 178.615 672.037 178.022 cv
@
672.037 178.022 mo
671.123 177.428 670.048 177.006 668.969 176.663 cv
@
668.969 176.663 mo
667.809 176.327 666.565 176.074 665.241 175.908 cv
@
665.241 175.908 mo
663.833 175.819 662.257 175.735 660.515 175.735 cv
@
660.515 175.735 mo
659.115 175.735 li
@
659.115 175.735 mo
657.833 175.735 656.787 176.787 656.787 178.067 cv
@
656.787 178.067 mo
656.787 185.432 li
@
656.787 185.432 mo
656.787 186.715 657.833 187.764 659.115 187.764 cv
@
659.115 187.764 mo
661.263 187.764 li
@
661.263 187.764 mo
662.673 187.764 663.75 187.847 664.495 187.932 cv
@
664.495 187.932 mo
665.241 188.101 665.905 188.357 666.482 188.78 cv
@
666.482 188.78 mo
667.061 189.202 667.561 189.796 667.973 190.471 cv
@
667.973 190.471 mo
668.39 191.236 668.552 191.997 668.552 192.846 cv
@
668.552 192.846 mo
668.552 193.86 668.306 194.704 667.809 195.557 cv
@
667.809 195.557 mo
667.23 196.319 666.565 196.994 665.655 197.331 cv
@
665.655 197.331 mo
665.076 197.588 664.414 197.843 663.75 197.927 cv
@
663.75 197.927 mo
663.082 198.012 662.09 198.012 660.68 198.012 cv
@
660.68 198.012 mo
659.115 198.012 li
@
659.115 198.012 mo
657.833 198.012 656.787 199.061 656.787 200.344 cv
@
656.787 200.344 mo
656.787 207.707 li
@
656.787 207.707 mo
656.787 208.992 657.833 210.039 659.115 210.039 cv
@
640.469 232.415 mo
647.749 232.415 li
@
647.749 232.415 mo
649.03 232.415 650.071 231.37 650.075 230.089 cv
@
650.075 230.089 mo
650.075 178.067 li
@
650.075 178.067 mo
650.075 176.787 649.03 175.735 647.749 175.735 cv
@
647.749 175.735 mo
640.469 175.735 li
@
640.469 175.735 mo
639.188 175.735 638.141 176.787 638.141 178.067 cv
@
638.141 178.067 mo
638.141 230.083 li
@
638.141 230.083 mo
638.141 231.37 639.188 232.415 640.469 232.415 cv
@
669.132 232.415 mo
676.809 232.415 li
@
676.809 232.415 mo
677.587 232.415 678.256 232.073 678.706 231.438 cv
@
678.706 231.438 mo
679.156 230.809 679.262 230.064 679.012 229.327 cv
@
679.012 229.327 mo
674.032 214.842 li
@
674.032 214.842 mo
673.817 214.219 673.403 213.763 672.81 213.486 cv
@
672.81 213.486 mo
672.212 213.208 671.598 213.19 670.984 213.424 cv
@
670.984 213.424 mo
669.984 213.817 668.977 214.122 667.973 214.36 cv
@
667.973 214.36 mo
666.921 214.61 665.745 214.763 664.454 214.875 cv
@
664.454 214.875 mo
663.712 214.935 663.101 215.302 662.693 215.929 cv
@
662.693 215.929 mo
662.286 216.553 662.203 217.261 662.447 217.967 cv
@
662.447 217.967 mo
666.932 230.853 li
@
666.932 230.853 mo
667.265 231.804 668.126 232.415 669.132 232.415 cv
@
569.083 210.039 mo
586.302 210.039 li
@
586.302 210.039 mo
587.586 210.039 588.634 208.992 588.634 207.707 cv
@
588.634 207.707 mo
588.634 200.513 li
@
588.634 200.513 mo
588.634 199.232 587.586 198.181 586.302 198.181 cv
@
586.302 198.181 mo
569.083 198.181 li
@
569.083 198.181 mo
567.8 198.181 566.751 199.232 566.753 200.513 cv
@
566.753 200.513 mo
566.753 207.707 li
@
566.753 207.707 mo
566.753 208.992 567.802 210.039 569.083 210.039 cv
@
569.083 232.415 mo
586.302 232.415 li
@
586.302 232.415 mo
587.586 232.415 588.634 231.37 588.634 230.083 cv
@
588.634 230.083 mo
588.634 222.875 li
@
588.634 222.875 mo
588.634 221.59 587.586 220.543 586.302 220.543 cv
@
586.302 220.543 mo
569.083 220.543 li
@
569.083 220.543 mo
567.802 220.543 566.753 221.59 566.753 222.875 cv
@
566.753 222.875 mo
566.753 230.083 li
@
566.753 230.083 mo
566.753 231.37 567.802 232.415 569.083 232.415 cv
@
550.355 232.415 mo
557.633 232.415 li
@
557.633 232.415 mo
558.914 232.415 559.961 231.37 559.961 230.089 cv
@
559.961 230.089 mo
559.961 178.067 li
@
559.961 178.067 mo
559.961 176.787 558.914 175.735 557.633 175.735 cv
@
557.633 175.735 mo
550.355 175.735 li
@
550.355 175.735 mo
549.072 175.735 548.025 176.787 548.025 178.067 cv
@
548.025 178.067 mo
548.025 230.083 li
@
548.025 230.083 mo
548.025 231.37 549.072 232.415 550.355 232.415 cv
@
569.083 187.593 mo
586.302 187.593 li
@
586.302 187.593 mo
587.586 187.593 588.634 186.544 588.634 185.261 cv
@
588.634 185.261 mo
588.634 178.067 li
@
588.634 178.067 mo
588.634 176.787 587.586 175.737 586.302 175.737 cv
@
586.302 175.737 mo
569.083 175.735 li
@
569.083 175.735 mo
567.802 175.735 566.753 176.787 566.753 178.067 cv
@
566.753 178.067 mo
566.753 185.261 li
@
566.753 185.261 mo
566.753 186.544 567.802 187.593 569.083 187.593 cv
@
473.839 232.415 mo
481.114 232.415 li
@
481.114 232.415 mo
482.395 232.415 483.442 231.37 483.442 230.083 cv
@
483.442 230.083 mo
483.442 196.869 li
@
483.442 196.869 mo
483.442 195.585 482.395 194.535 481.114 194.535 cv
@
481.114 194.535 mo
473.839 194.535 li
@
473.839 194.535 mo
472.555 194.535 471.509 195.585 471.509 196.869 cv
@
471.509 196.869 mo
471.509 230.083 li
@
471.509 230.083 mo
471.509 231.37 472.555 232.415 473.839 232.415 cv
@
461.06 187.593 mo
493.794 187.593 li
@
493.794 187.593 mo
495.075 187.593 496.12 186.544 496.12 185.261 cv
@
496.12 185.261 mo
496.12 178.067 li
@
496.12 178.067 mo
496.12 176.787 495.075 175.737 493.794 175.737 cv
@
493.794 175.737 mo
461.06 175.735 li
@
461.06 175.735 mo
459.779 175.735 458.734 176.787 458.734 178.067 cv
@
458.734 178.067 mo
458.734 185.261 li
@
458.734 185.261 mo
458.734 186.544 459.779 187.593 461.06 187.593 cv
@
386.406 210.039 mo
388.637 210.039 li
@
388.637 210.039 mo
391.617 210.039 394.024 209.785 395.928 209.193 cv
@
395.928 209.193 mo
397.836 208.687 399.573 207.754 401.151 206.484 cv
@
401.151 206.484 mo
403.225 204.873 404.797 202.841 405.955 200.384 cv
@
405.955 200.384 mo
407.035 198.012 407.614 195.47 407.614 192.846 cv
@
407.614 192.846 mo
407.614 190.387 407.118 188.018 406.123 185.815 cv
@
406.123 185.815 mo
405.126 183.61 403.718 181.664 401.974 180.056 cv
@
401.974 180.056 mo
401.066 179.292 400.239 178.615 399.327 178.022 cv
@
399.327 178.022 mo
398.415 177.428 397.339 177.006 396.26 176.663 cv
@
396.26 176.663 mo
395.097 176.327 393.854 176.074 392.531 175.908 cv
@
392.531 175.908 mo
391.122 175.819 389.547 175.735 387.807 175.735 cv
@
387.807 175.735 mo
386.406 175.735 li
@
386.406 175.735 mo
385.125 175.735 384.078 176.787 384.078 178.067 cv
@
384.078 178.067 mo
384.078 185.432 li
@
384.078 185.432 mo
384.078 186.715 385.125 187.764 386.406 187.764 cv
@
386.406 187.764 mo
388.553 187.764 li
@
388.553 187.764 mo
389.962 187.764 391.038 187.847 391.786 187.932 cv
@
391.786 187.932 mo
392.531 188.101 393.194 188.357 393.773 188.78 cv
@
393.773 188.78 mo
394.352 189.202 394.851 189.796 395.266 190.471 cv
@
395.266 190.471 mo
395.68 191.236 395.845 191.997 395.845 192.846 cv
@
395.845 192.846 mo
395.845 193.86 395.597 194.704 395.097 195.557 cv
@
395.097 195.557 mo
394.522 196.319 393.854 196.994 392.944 197.331 cv
@
392.944 197.331 mo
392.365 197.588 391.703 197.843 391.038 197.927 cv
@
391.038 197.927 mo
390.376 198.012 389.383 198.012 387.974 198.012 cv
@
387.974 198.012 mo
386.406 198.012 li
@
386.406 198.012 mo
385.125 198.012 384.078 199.061 384.078 200.344 cv
@
384.078 200.344 mo
384.078 207.707 li
@
384.078 207.707 mo
384.078 208.992 385.125 210.039 386.406 210.039 cv
@
367.762 232.415 mo
375.037 232.415 li
@
375.037 232.415 mo
376.32 232.415 377.361 231.37 377.365 230.089 cv
@
377.365 230.089 mo
377.365 178.067 li
@
377.365 178.067 mo
377.365 176.787 376.32 175.735 375.037 175.735 cv
@
375.037 175.735 mo
367.762 175.735 li
@
367.762 175.735 mo
366.48 175.735 365.431 176.787 365.431 178.067 cv
@
365.431 178.067 mo
365.431 230.083 li
@
365.431 230.083 mo
365.431 231.37 366.48 232.415 367.762 232.415 cv
@
396.422 232.415 mo
404.096 232.415 li
@
404.096 232.415 mo
404.878 232.415 405.548 232.073 405.998 231.438 cv
@
405.998 231.438 mo
406.448 230.809 406.555 230.064 406.3 229.327 cv
@
406.3 229.327 mo
401.322 214.842 li
@
401.322 214.842 mo
401.112 214.215 400.697 213.763 400.104 213.486 cv
@
400.104 213.486 mo
399.508 213.208 398.891 213.19 398.28 213.424 cv
@
398.28 213.424 mo
397.275 213.821 396.271 214.122 395.266 214.36 cv
@
395.266 214.36 mo
394.211 214.61 393.037 214.763 391.742 214.875 cv
@
391.742 214.875 mo
391.005 214.935 390.391 215.302 389.985 215.926 cv
@
389.985 215.926 mo
389.581 216.553 389.493 217.261 389.741 217.967 cv
@
389.741 217.967 mo
394.223 230.853 li
@
394.223 230.853 mo
394.56 231.804 395.421 232.415 396.422 232.415 cv
@
269.563 232.275 mo
277.705 232.275 li
@
277.705 232.275 mo
278.601 232.275 279.379 231.802 279.783 230.993 cv
@
279.783 230.993 mo
291.38 207.892 li
@
291.38 207.892 mo
291.72 207.217 291.72 206.486 291.382 205.801 cv
@
291.382 205.801 mo
287.343 197.71 li
@
287.343 197.71 mo
286.94 196.904 286.169 196.425 285.272 196.419 cv
@
285.272 196.419 mo
284.364 196.417 283.589 196.898 283.182 197.704 cv
@
283.182 197.704 mo
267.485 228.898 li
@
267.485 228.898 mo
267.112 229.641 267.143 230.46 267.582 231.166 cv
@
267.582 231.166 mo
268.016 231.878 268.73 232.275 269.563 232.275 cv
@
313.482 232.275 mo
321.677 232.275 li
@
321.677 232.275 mo
322.51 232.275 323.225 231.872 323.661 231.166 cv
@
323.661 231.166 mo
324.092 230.456 324.132 229.637 323.753 228.892 cv
@
323.753 228.892 mo
297.621 177.157 li
@
297.621 177.157 mo
297.216 176.35 296.444 175.879 295.547 175.877 cv
@
295.547 175.877 mo
294.642 175.875 293.873 176.35 293.465 177.151 cv
@
293.465 177.151 mo
289.373 185.209 li
@
289.373 185.209 mo
289.026 185.898 289.026 186.639 289.373 187.322 cv
@
289.373 187.322 mo
301.346 210.915 li
@
301.346 210.915 mo
298.067 210.915 li
@
298.067 210.915 mo
297.165 210.915 296.386 211.398 295.982 212.208 cv
@
295.982 212.208 mo
292.413 219.403 li
@
292.413 219.403 mo
292.043 220.151 292.08 220.967 292.518 221.671 cv
@
292.518 221.671 mo
292.955 222.381 293.667 222.776 294.5 222.776 cv
@
294.5 222.776 mo
305.876 222.776 li
@
305.876 222.776 mo
306.78 222.776 307.555 223.256 307.958 224.067 cv
@
307.958 224.067 mo
311.394 230.982 li
@
311.394 230.982 mo
311.799 231.796 312.572 232.275 313.482 232.275 cv
@
181.928 177.813 mo
181.928 207.754 li
@
181.928 207.754 mo
181.928 211.907 182.341 215.29 183.253 218.003 cv
@
183.253 218.003 mo
184.165 220.797 185.575 223.339 187.644 225.625 cv
@
187.644 225.625 mo
189.468 227.575 191.54 229.272 193.861 230.541 cv
@
193.861 230.541 mo
195.298 231.376 196.795 232.061 198.375 232.558 cv
@
198.375 232.558 mo
199.106 232.785 199.831 232.665 200.453 232.213 cv
@
200.453 232.213 mo
201.066 231.761 201.399 231.099 201.399 230.335 cv
@
201.399 230.335 mo
201.399 222.337 li
@
201.399 222.337 mo
201.399 221.408 200.891 220.613 200.049 220.222 cv
@
200.049 220.222 mo
199.148 219.807 198.387 219.347 197.755 218.848 cv
@
197.755 218.848 mo
196.77 218.073 196.013 217.24 195.434 216.141 cv
@
195.434 216.141 mo
194.853 215.038 194.44 213.769 194.192 212.241 cv
@
194.192 212.241 mo
193.943 210.719 193.861 208.853 193.861 206.654 cv
@
193.861 206.654 mo
193.861 177.813 li
@
193.861 177.813 mo
193.861 176.533 192.812 175.481 191.531 175.481 cv
@
191.531 175.481 mo
184.256 175.481 li
@
184.256 175.481 mo
182.976 175.481 181.928 176.533 181.928 177.813 cv
@
215.573 177.813 mo
215.573 206.654 li
@
215.573 206.654 mo
215.573 209.191 215.49 211.138 215.244 212.498 cv
@
215.244 212.498 mo
214.992 213.938 214.578 215.121 213.999 216.141 cv
@
213.999 216.141 mo
213.418 217.24 212.591 218.173 211.678 218.937 cv
@
211.678 218.937 mo
211.016 219.443 210.243 219.876 209.354 220.259 cv
@
209.354 220.259 mo
208.482 220.638 207.947 221.452 207.947 222.403 cv
@
207.947 222.403 mo
207.947 230.32 li
@
207.947 230.32 mo
207.947 231.086 208.282 231.743 208.9 232.202 cv
@
208.9 232.202 mo
209.517 232.652 210.247 232.777 210.977 232.548 cv
@
210.977 232.548 mo
212.528 232.061 214.025 231.398 215.49 230.624 cv
@
215.49 230.624 mo
217.891 229.356 219.964 227.659 221.79 225.625 cv
@
221.79 225.625 mo
223.858 223.339 225.268 220.797 226.18 218.003 cv
@
226.18 218.003 mo
227.093 215.29 227.506 211.907 227.506 207.754 cv
@
227.506 207.754 mo
227.506 177.813 li
@
227.506 177.813 mo
227.506 176.533 226.46 175.481 225.181 175.481 cv
@
225.181 175.481 mo
217.903 175.481 li
@
217.903 175.481 mo
216.619 175.481 215.573 176.533 215.573 177.813 cv
@
139.641 221.221 mo
121.833 221.221 li
@
121.833 221.221 mo
119.347 221.221 117.273 221.134 115.533 221.049 cv
@
115.533 221.049 mo
113.792 220.967 112.22 220.882 110.975 220.626 cv
@
110.975 220.626 mo
109.653 220.372 108.489 220.035 107.581 219.613 cv
@
107.581 219.613 mo
106.584 219.185 105.59 218.681 104.678 218.084 cv
@
104.678 218.084 mo
102.936 216.984 101.53 215.629 100.452 214.021 cv
@
100.452 214.021 mo
99.6111 212.762 98.8186 211.298 98.1565 209.583 cv
@
98.1565 209.583 mo
97.8025 208.666 96.9656 208.094 95.9842 208.094 cv
@
95.9842 208.094 mo
88.4495 208.094 li
@
88.4495 208.094 mo
87.7107 208.094 87.0755 208.399 86.6214 208.978 cv
@
86.6214 208.978 mo
86.1634 209.563 86.0115 210.249 86.1848 210.969 cv
@
86.1848 210.969 mo
86.8079 213.543 87.6912 215.889 88.8513 218.002 cv
@
88.8513 218.002 mo
90.4236 220.882 92.5784 223.507 95.3147 225.881 cv
@
95.3147 225.881 mo
96.8885 227.232 98.4627 228.336 100.036 229.27 cv
@
100.036 229.27 mo
101.612 230.202 103.269 230.96 105.176 231.555 cv
@
105.176 231.555 mo
107.083 232.146 109.153 232.489 111.473 232.743 cv
@
111.473 232.743 mo
113.792 232.993 116.528 233.093 119.595 233.093 cv
@
119.595 233.093 mo
139.641 233.093 li
@
139.641 233.093 mo
140.922 233.093 141.971 232.046 141.971 230.761 cv
@
141.971 230.761 mo
141.971 223.553 li
@
141.971 223.553 mo
141.971 222.266 140.922 221.221 139.641 221.221 cv
@
140.666 212.591 mo
141.012 211.389 141.303 210.207 141.472 209.105 cv
@
141.472 209.105 mo
141.724 207.5 141.888 205.803 141.888 204.025 cv
@
141.888 204.025 mo
141.888 200.044 141.141 196.232 139.652 192.759 cv
@
139.652 192.759 mo
138.159 189.285 136.085 186.15 133.52 183.527 cv
@
133.52 183.527 mo
130.948 180.899 127.883 178.868 124.484 177.341 cv
@
124.484 177.341 mo
121.086 175.819 117.355 175.057 113.459 175.057 cv
@
113.459 175.057 mo
109.734 175.057 106.334 175.735 103.103 177.004 cv
@
103.103 177.004 mo
99.8709 178.359 96.9734 180.222 94.4851 182.511 cv
@
94.4851 182.511 mo
91.9168 184.88 89.8426 187.679 88.2683 190.897 cv
@
88.2683 190.897 mo
87.0852 193.388 86.2249 196.023 85.698 198.803 cv
@
85.698 198.803 mo
85.5633 199.509 85.7346 200.171 86.1902 200.723 cv
@
86.1902 200.723 mo
86.6482 201.28 87.2678 201.568 87.9798 201.568 cv
@
87.9798 201.568 mo
95.326 201.568 li
@
95.326 201.568 mo
96.4016 201.568 97.3137 200.862 97.5794 199.819 cv
@
97.5794 199.819 mo
97.9505 198.367 98.5203 197.011 99.2073 195.724 cv
@
99.2073 195.724 mo
100.142 193.96 101.364 192.42 102.773 191.149 cv
@
102.773 191.149 mo
104.181 189.878 105.836 188.948 107.662 188.268 cv
@
107.662 188.268 mo
109.484 187.591 111.473 187.252 113.548 187.252 cv
@
113.548 187.252 mo
115.783 187.252 117.937 187.679 119.924 188.522 cv
@
119.924 188.522 mo
121.916 189.455 123.657 190.643 125.148 192.166 cv
@
125.148 192.166 mo
126.639 193.693 127.798 195.468 128.71 197.504 cv
@
128.71 197.504 mo
129.539 199.622 129.953 201.822 129.953 204.195 cv
@
129.953 204.195 mo
129.953 205.974 129.702 207.667 129.21 209.278 cv
@
129.21 209.278 mo
129.004 209.834 128.775 210.396 128.512 210.963 cv
@
128.512 210.963 mo
128.173 211.712 128.221 212.51 128.667 213.202 cv
@
128.667 213.202 mo
129.102 213.89 129.806 214.275 130.626 214.275 cv
@
130.626 214.275 mo
138.43 214.275 li
@
138.43 214.275 mo
139.481 214.275 140.376 213.603 140.666 212.591 cv
@
726.238 141.516 mo
733.512 141.516 li
@
733.512 141.516 mo
734.797 141.516 735.844 140.467 735.844 139.184 cv
@
735.844 139.184 mo
735.844 87.1629 li
@
735.844 87.1629 mo
735.844 85.8778 734.797 84.8309 733.512 84.8309 cv
@
733.512 84.8309 mo
726.238 84.8309 li
@
726.238 84.8309 mo
724.955 84.8309 723.906 85.8778 723.906 87.1629 cv
@
723.906 87.1629 mo
723.906 139.184 li
@
723.906 139.184 mo
723.906 140.467 724.955 141.516 726.238 141.516 cv
@
744.714 141.516 mo
747.113 141.516 li
@
747.113 141.516 mo
750.844 141.516 753.991 141.162 756.725 140.396 cv
@
756.725 140.396 mo
759.377 139.636 761.865 138.451 764.183 136.84 cv
@
764.183 136.84 mo
767.995 134.129 770.979 130.656 773.133 126.508 cv
@
773.133 126.508 mo
775.29 122.355 776.367 117.865 776.367 113.121 cv
@
776.367 113.121 mo
776.367 108.971 775.536 104.99 773.883 101.348 cv
@
773.883 101.348 mo
772.222 97.7035 769.736 94.4862 766.587 91.6097 cv
@
766.587 91.6097 mo
763.933 89.2352 761.036 87.5443 757.967 86.4398 cv
@
757.967 86.4398 mo
754.823 85.3412 751.006 84.8309 746.616 84.8309 cv
@
746.616 84.8309 mo
744.714 84.8309 li
@
744.714 84.8309 mo
743.433 84.8309 742.388 85.8778 742.388 87.1629 cv
@
742.388 87.1629 mo
742.388 94.3573 li
@
742.388 94.3573 mo
742.388 95.641 743.433 96.6893 744.714 96.6893 cv
@
744.714 96.6893 mo
745.454 96.6893 li
@
745.454 96.6893 mo
747.03 96.6893 748.357 96.6893 749.596 96.7723 cv
@
749.596 96.7723 mo
750.759 96.8607 751.837 97.0282 752.749 97.2821 cv
@
752.749 97.2821 mo
753.661 97.536 754.57 97.8768 755.402 98.3001 cv
@
755.402 98.3001 mo
756.144 98.7235 756.973 99.1463 757.722 99.7391 cv
@
757.722 99.7391 mo
759.793 101.265 761.449 103.214 762.694 105.585 cv
@
762.694 105.585 mo
763.854 107.957 764.431 110.582 764.431 113.208 cv
@
764.431 113.208 mo
764.431 117.613 762.858 121.509 759.71 124.812 cv
@
759.71 124.812 mo
758.05 126.508 756.229 127.693 754.324 128.453 cv
@
754.324 128.453 mo
752.335 129.132 749.764 129.471 746.697 129.471 cv
@
746.697 129.471 mo
744.714 129.471 li
@
744.714 129.471 mo
743.433 129.471 742.388 130.514 742.388 131.803 cv
@
742.388 131.803 mo
742.388 139.184 li
@
742.388 139.184 mo
742.388 140.467 743.433 141.516 744.714 141.516 cv
@
653.9 141.516 mo
661.176 141.516 li
@
661.176 141.516 mo
662.457 141.516 663.504 140.467 663.504 139.184 cv
@
663.504 139.184 mo
663.504 117.176 li
@
663.504 117.176 mo
663.504 116.664 663.644 116.229 663.94 115.819 cv
@
663.94 115.819 mo
683.421 88.5174 li
@
683.421 88.5174 mo
683.936 87.7923 683.998 86.8919 683.594 86.0951 cv
@
683.594 86.0951 mo
683.185 85.2987 682.418 84.8309 681.523 84.8309 cv
@
681.523 84.8309 mo
672.491 84.8309 li
@
672.491 84.8309 mo
671.718 84.8309 671.052 85.1717 670.601 85.8065 cv
@
670.601 85.8065 mo
652.007 111.836 li
@
652.007 111.836 mo
651.711 112.246 651.57 112.685 651.57 113.193 cv
@
651.57 113.193 mo
651.57 139.184 li
@
651.57 139.184 mo
651.57 140.467 652.619 141.516 653.9 141.516 cv
@
649.278 103.611 mo
653.835 97.3475 li
@
653.835 97.3475 mo
654.422 96.5335 654.439 95.4793 653.866 94.6517 cv
@
653.866 94.6517 mo
647.793 85.8372 li
@
647.793 85.8372 mo
647.343 85.1888 646.662 84.8309 645.877 84.8309 cv
@
645.877 84.8309 mo
636.945 84.8309 li
@
636.945 84.8309 mo
636.059 84.8309 635.294 85.2889 634.885 86.078 cv
@
634.885 86.078 mo
634.47 86.8685 634.53 87.7577 635.036 88.4925 cv
@
635.036 88.4925 mo
645.476 103.568 li
@
645.476 103.568 mo
645.923 104.205 646.591 104.561 647.368 104.567 cv
@
647.368 104.567 mo
648.141 104.575 648.817 104.242 649.278 103.611 cv
@
564.742 141.516 mo
572.017 141.516 li
@
572.017 141.516 mo
573.299 141.516 574.347 140.467 574.347 139.184 cv
@
574.347 139.184 mo
574.347 105.966 li
@
574.347 105.966 mo
574.347 104.682 573.299 103.638 572.017 103.638 cv
@
572.017 103.638 mo
564.742 103.638 li
@
564.742 103.638 mo
563.461 103.638 562.412 104.682 562.412 105.966 cv
@
562.412 105.966 mo
562.412 139.184 li
@
562.412 139.184 mo
562.412 140.467 563.461 141.516 564.742 141.516 cv
@
551.968 96.6893 mo
584.697 96.6893 li
@
584.697 96.6893 mo
585.98 96.6893 587.023 95.641 587.023 94.3573 cv
@
587.023 94.3573 mo
587.023 87.1629 li
@
587.023 87.1629 mo
587.023 85.8778 585.98 84.8348 584.697 84.8348 cv
@
584.697 84.8348 mo
551.968 84.8309 li
@
551.968 84.8309 mo
550.682 84.8309 549.637 85.8778 549.637 87.1629 cv
@
549.637 87.1629 mo
549.637 94.3573 li
@
549.637 94.3573 mo
549.637 95.641 550.682 96.6893 551.968 96.6893 cv
@
455.305 141.516 mo
462.583 141.516 li
@
462.583 141.516 mo
463.866 141.516 464.913 140.467 464.913 139.184 cv
@
464.913 139.184 mo
464.913 119.843 li
@
464.913 119.843 mo
464.913 119.154 464.649 118.565 464.136 118.105 cv
@
464.136 118.105 mo
456.862 111.598 li
@
456.862 111.598 mo
456.16 110.968 455.215 110.822 454.357 111.205 cv
@
454.357 111.205 mo
453.499 111.592 452.977 112.394 452.977 113.337 cv
@
452.977 113.337 mo
452.977 139.184 li
@
452.977 139.184 mo
452.977 140.467 454.026 141.516 455.305 141.516 cv
@
453.749 99.8412 mo
497.986 139.784 li
@
497.986 139.784 mo
498.681 140.411 499.632 140.563 500.492 140.182 cv
@
500.492 140.182 mo
501.349 139.8 501.875 138.992 501.875 138.053 cv
@
501.875 138.053 mo
501.875 87.1629 li
@
501.875 87.1629 mo
501.875 85.8778 500.826 84.8309 499.543 84.8309 cv
@
499.543 84.8309 mo
492.265 84.8309 li
@
492.265 84.8309 mo
490.984 84.8309 489.937 85.8778 489.939 87.1629 cv
@
489.939 87.1629 mo
489.939 111.176 li
@
489.939 111.176 mo
489.939 112.115 489.418 112.925 488.556 113.306 cv
@
488.556 113.306 mo
487.698 113.689 486.752 113.535 486.053 112.904 cv
@
486.053 112.904 mo
456.87 86.4935 li
@
456.87 86.4935 mo
456.171 85.8587 455.226 85.7025 454.36 86.0838 cv
@
454.36 86.0838 mo
453.499 86.4706 452.977 87.2747 452.977 88.2196 cv
@
452.977 88.2196 mo
452.977 98.1112 li
@
452.977 98.1112 mo
452.977 98.7962 453.243 99.3851 453.749 99.8412 cv
@
387.278 119.136 mo
404.499 119.136 li
@
404.499 119.136 mo
405.78 119.136 406.827 118.088 406.827 116.803 cv
@
406.827 116.803 mo
406.827 109.61 li
@
406.827 109.61 mo
406.827 108.327 405.78 107.28 404.499 107.28 cv
@
404.499 107.28 mo
387.278 107.278 li
@
387.278 107.278 mo
385.994 107.278 384.95 108.327 384.95 109.61 cv
@
384.95 109.61 mo
384.95 116.803 li
@
384.95 116.803 mo
384.95 118.088 385.994 119.136 387.278 119.136 cv
@
387.278 141.516 mo
404.499 141.516 li
@
404.499 141.516 mo
405.78 141.516 406.827 140.467 406.827 139.184 cv
@
406.827 139.184 mo
406.827 131.97 li
@
406.827 131.97 mo
406.827 130.689 405.78 129.64 404.499 129.64 cv
@
404.499 129.64 mo
387.278 129.64 li
@
387.278 129.64 mo
385.994 129.64 384.95 130.689 384.95 131.97 cv
@
384.95 131.97 mo
384.95 139.184 li
@
384.95 139.184 mo
384.95 140.467 385.994 141.518 387.278 141.516 cv
@
368.549 141.516 mo
375.822 141.516 li
@
375.822 141.516 mo
377.103 141.516 378.154 140.467 378.154 139.184 cv
@
378.154 139.184 mo
378.154 87.1629 li
@
378.154 87.1629 mo
378.154 85.8778 377.103 84.8309 375.822 84.8309 cv
@
375.822 84.8309 mo
368.549 84.8309 li
@
368.549 84.8309 mo
367.267 84.8309 366.22 85.8778 366.22 87.1629 cv
@
366.22 87.1629 mo
366.22 139.184 li
@
366.22 139.184 mo
366.22 140.467 367.267 141.516 368.549 141.516 cv
@
387.278 96.6913 mo
404.499 96.6893 li
@
404.499 96.6893 mo
405.78 96.6893 406.827 95.641 406.827 94.3573 cv
@
406.827 94.3573 mo
406.827 87.1629 li
@
406.827 87.1629 mo
406.827 85.8778 405.78 84.8309 404.499 84.8309 cv
@
404.499 84.8309 mo
387.278 84.8309 li
@
387.278 84.8309 mo
385.994 84.8309 384.95 85.8778 384.95 87.1629 cv
@
384.95 87.1629 mo
384.95 94.3573 li
@
384.95 94.3573 mo
384.95 95.6429 385.994 96.6932 387.278 96.6913 cv
@
285.355 107.459 mo
289.032 116.619 li
@
289.032 116.619 mo
289.386 117.499 290.182 118.053 291.128 118.082 cv
@
291.128 118.082 mo
292.076 118.109 292.903 117.597 293.303 116.741 cv
@
293.303 116.741 mo
293.492 116.333 li
@
293.492 116.333 mo
293.887 115.496 294.672 114.993 295.597 114.992 cv
@
295.597 114.992 mo
296.516 114.992 297.309 115.49 297.706 116.325 cv
@
297.706 116.325 mo
308.635 139.407 li
@
308.635 139.407 mo
309.043 140.265 309.866 140.769 310.811 140.739 cv
@
310.811 140.739 mo
311.758 140.712 312.547 140.158 312.901 139.284 cv
@
312.901 139.284 mo
316.594 130.079 li
@
316.594 130.079 mo
316.842 129.455 316.82 128.821 316.535 128.216 cv
@
316.535 128.216 mo
297.706 88.3001 li
@
297.706 88.3001 mo
297.307 87.4671 296.516 86.9613 295.595 86.9627 cv
@
295.595 86.9627 mo
294.672 86.9627 293.885 87.4691 293.488 88.3099 cv
@
293.488 88.3099 mo
285.411 105.6 li
@
285.411 105.6 mo
285.126 106.206 285.106 106.835 285.355 107.459 cv
@
282.609 139.417 mo
286.785 130.564 li
@
286.785 130.564 mo
287.069 129.955 287.089 129.325 286.837 128.697 cv
@
286.837 128.697 mo
270.07 87.0555 li
@
270.07 87.0555 mo
269.712 86.1527 268.881 85.5951 267.911 85.5951 cv
@
267.911 85.5951 mo
260.076 85.5951 li
@
260.076 85.5951 mo
259.277 85.5951 258.595 85.9583 258.147 86.6244 cv
@
258.147 86.6244 mo
257.703 87.2826 257.619 88.0599 257.923 88.8026 cv
@
257.923 88.8026 mo
278.342 139.293 li
@
278.342 139.293 mo
278.699 140.173 279.492 140.727 280.438 140.75 cv
@
280.438 140.75 mo
281.386 140.779 282.203 140.273 282.609 139.417 cv
@
313.849 107.114 mo
318.09 115.991 li
@
318.09 115.991 mo
318.5 116.839 319.321 117.341 320.266 117.31 cv
@
320.266 117.31 mo
321.205 117.284 321.992 116.733 322.348 115.858 cv
@
322.348 115.858 mo
333.321 88.8045 li
@
333.321 88.8045 mo
333.622 88.0633 333.537 87.286 333.095 86.6244 cv
@
333.095 86.6244 mo
332.648 85.9642 331.961 85.5951 331.159 85.5951 cv
@
331.159 85.5951 mo
323.418 85.5951 li
@
323.418 85.5951 mo
322.452 85.5951 321.631 86.1473 321.264 87.0399 cv
@
321.264 87.0399 mo
313.802 105.215 li
@
313.802 105.215 mo
313.538 105.856 313.556 106.497 313.849 107.114 cv
@
201.125 141.516 mo
208.403 141.516 li
@
208.403 141.516 mo
209.682 141.516 210.729 140.467 210.729 139.184 cv
@
210.729 139.184 mo
210.729 105.966 li
@
210.729 105.966 mo
210.729 104.682 209.682 103.638 208.403 103.638 cv
@
208.403 103.638 mo
201.125 103.638 li
@
201.125 103.638 mo
199.843 103.638 198.796 104.682 198.796 105.966 cv
@
198.796 105.966 mo
198.796 139.184 li
@
198.796 139.184 mo
198.796 140.467 199.843 141.516 201.125 141.516 cv
@
188.348 96.6893 mo
221.084 96.6893 li
@
221.084 96.6893 mo
222.365 96.6893 223.41 95.641 223.41 94.3573 cv
@
223.41 94.3573 mo
223.41 87.1629 li
@
223.41 87.1629 mo
223.41 85.8778 222.365 84.8309 221.084 84.8309 cv
@
221.084 84.8309 mo
188.348 84.8309 li
@
188.348 84.8309 mo
187.066 84.8309 186.022 85.8778 186.022 87.1629 cv
@
186.022 87.1629 mo
186.022 94.3573 li
@
186.022 94.3573 mo
186.022 95.641 187.066 96.6893 188.348 96.6893 cv
@
87.7547 141.371 mo
95.8977 141.371 li
@
95.8977 141.371 mo
96.7981 141.371 97.5716 140.892 97.9739 140.088 cv
@
97.9739 140.088 mo
109.569 116.987 li
@
109.569 116.987 mo
109.911 116.308 109.911 115.578 109.569 114.897 cv
@
109.569 114.897 mo
105.535 106.805 li
@
105.535 106.805 mo
105.134 105.994 104.362 105.515 103.459 105.512 cv
@
103.459 105.512 mo
102.557 105.512 101.782 105.989 101.376 106.797 cv
@
101.376 106.797 mo
85.6785 137.991 li
@
85.6785 137.991 mo
85.3054 138.736 85.3362 139.555 85.7747 140.263 cv
@
85.7747 140.263 mo
86.2117 140.97 86.9256 141.371 87.7547 141.371 cv
@
131.671 141.371 mo
139.87 141.371 li
@
139.87 141.371 mo
140.701 141.371 141.417 140.97 141.851 140.258 cv
@
141.851 140.258 mo
142.284 139.547 142.325 138.734 141.944 137.987 cv
@
141.944 137.987 mo
115.814 86.2508 li
@
115.814 86.2508 mo
115.408 85.4447 114.636 84.9715 113.74 84.9715 cv
@
113.74 84.9715 mo
112.836 84.9696 112.066 85.4447 111.656 86.2455 cv
@
111.656 86.2455 mo
107.566 94.3036 li
@
107.566 94.3036 mo
107.217 94.9925 107.217 95.7332 107.566 96.4164 cv
@
107.566 96.4164 mo
119.539 120.008 li
@
119.539 120.008 mo
116.261 120.008 li
@
116.261 120.008 mo
115.358 120.008 114.583 120.487 114.179 121.303 cv
@
114.179 121.303 mo
110.606 128.499 li
@
110.606 128.499 mo
110.236 129.243 110.271 130.063 110.71 130.767 cv
@
110.71 130.767 mo
111.148 131.474 111.86 131.866 112.692 131.866 cv
@
112.692 131.866 mo
124.067 131.866 li
@
124.067 131.866 mo
124.973 131.866 125.749 132.353 126.151 133.161 cv
@
126.151 133.161 mo
129.587 140.078 li
@
129.587 140.078 mo
129.991 140.892 130.765 141.371 131.671 141.371 cv
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 23.0.1%%For: (Ponoko) ()%%Title: (wordclock_faceplate-12inch_ponoko.eps)%%CreationDate: 2/20/19 10:00 AM%%Canvassize: 16383%AI9_DataStream%Gb!Q;kBb!)e*+=CmK(cuDUa?r4.uh@&40#4oX=/-GO7n@!Sb*cHf"KY]?b**(,OBP1efchfppifes#q+-b9%'XN/\<hG*i5qG;^h%PGhi$2Ws7_ks<tC'-`()*t8AU6'?o9#^Sg'e/uJY!L36P^s@!2lGJ!;#fUc,k6J5=*Xp(\l=&$U"G"sjnS'jd+7&gKG^;?F2TsAE%&D!cY*j51$i=C/he<psRh]P!f::$GgC3\6<KEm2A0mo'Fc'OXZBf2@I_g3Cr4XL@IPkG.U*'f+JiT%_HYQ@Uhe)M%!!T3s;c&Gtk%M]"V[s'g:YicNtO&o%3oG0nT-]g;>"pVui<IQ6bNa8'?'[ke<aS*at#?U1Q9\'OO;K^]OB^bOiB&>3#7eb`a`")-'Ma%.aHs/n4b%D3r0#PbKSoo6Yl:J!lU1pb^h*\DBqf,TfB-jO`F@N.V,LkT=+:4T/bRrA1P$:PY.uSgJ2]Ir*F1!E?p,&k2'"oUEj73Sh0ro-6u.%6m4rs[Bc2oQ_=<QpY"Yi+so[fo3]'pCUjD4*Wb_GQ7#5-YWg-;!4,]Ir]PtANR8#HgZc;Wkto'8;e,QSnV%6"kT_g1+Fn_ka?9YI%o&7EH*qf:/b7UPB+9O$PP(#P06A'g@"9rO*o`D?;EUF`gq+LG^ie,n9DLb;5f)^fZp@FpP3m8!V0Z`YEP7-+FdUN:Za+HA<SI^=b%H@fK&"k1Qj7h66ZlZer&R6^oj:/s8)M0^XGd#6+oP1m"qZlQrk,iH0i@+46"LOOIH9YCHk5AfWs;;VW/%;7n36^YG7od2Ys02LM+%DSJ2K$g[8@cBai67T4_\^7OWSGC&PN?#QL0%JRn-2u<dR>*r!=Qc8,*cF7t"ONkc:31^G-1/DfngR4(_Rlt01M7tnE"^`A\\=iMs%rGW1"$GN.e."_WNY\-H9IS"s!s0)@do^j)Eqsnh)BkI=aFLg(F^s_V7iRO:4ol,C-(-=I)J2]hLOV`PPiUkc&!>0;C(6F0#_4M(R%#+SaEVYfi4BX=3N<bKM/-Zq-%oC6kTr;1H'WZX]N$s1JUTA6%K1OX&F=^Jo7?C`O^4Jn^epAZ-mlI6?q[5I_5'>qaF&7P\BQ2]$X%.B`8\`:/;Ds''H<L<J]VB0Y1sk$p,&,4EkQ\F6e!',],;\t0neB]uW9cu@+UcW!]P4u8T/TdR+dA_T'A*!2O5Sr[Ee_1$m[f>)"F%2c'&*oKo=tC'uU[I<.=%:8u4X[VVN9q?B2lEA`p6Xe_t1F[pS,QLsO"l$93-;>C;T;qhCBG56?.g"H(N^F,\=Y$ZPCH4SgLW,9(N%H16okpeYUel5FmNm0fEeL(6iS#QMbWA)j9=%af3fNHkAJ3BcT=V=ius2>'B[f%Jo2FrR$=a1bjJXU\E2]h@O*c@J8CAXf@hRL\H3%?^SPh":lD3e.WsUGCYg)n:*4SL\?ip&AgaZ*WV3%$2b.q#n#Pb8_b*jq>AUt"-*NK$NMsn(t3qm[BmFN*I9WT\po>c7I]7P4Sf^&%870cZpJLkl4RP+L<$s"R0<J<JFF#SW"o(;>?9k1,BGF*>+"i-'2PilF+$FjB69g*s@.tc!Q2a]'"3eS(&L;u3)Y.>9&FeOA?i323%NWS7o:BLDRUq]TU^pg!<06BOI#JdGhcU;0]WeFm(TUT1=\Y:h/i"jVV;#1oDBg=BPLNs:.#p)\=BDTbs8*M2h1C%7[4()CiD*E\R%*q''*^NV3i.e%pU?U!^kJ$##PnCe>)mX@>\*N)0L]3s++IR!a["6'@N3N^:Wi*GfLCUstXpD*a?c>V[6j53](_m_PIqCq\S\3E(V%ER4j8f0B21IghYk[OllUOD)*-U4dF(o]3gbp:lhQUH'&M_,LsN&.uEo<Jh4-']QQErFa0\hQ3QbbT5S]1L<a&C<"9%I*hNC3I4AB%oW%%r4rc/PC)C;t-N?"Vo^Es&QTAsZ+6I#l]^b6*goUL]P3h)d_sh(?XYd!JJEThQNrSse!.FYrlH9,;X7Yo[kC9`prXUZ7_f@s?%h_'hjpKY@jl#8(7keGYAoABR^)18j$UbJg`<&*ikH;m0pl+p0t%0TNJ3+[ckW;`;_N\`O;@iG@8)Vo3js-]hupudtC@@ktqPFIQU%J4?"QYSkU4mj#MqUh4;l^\KOe%k,9Hgmn)u.CJ45+#aa])Z*<S@5U1X-bs'"[i_;*qdH!K!=C^>`G#aQTFC6V!Q4Qm5R4]DW%S\5%5:<t/<o7_%Cm`ruDJgiqdp[j^&\?Q`JlNWn&O&AQ_qC_qKL(#B?Q\5\D:Iu/QfV@Tl1nc"*<'4]_EC5#`/4G4Zl/9ZHK[E!fCL^6%,s1[Uf8HonVOhJ*&G[:5S1ZXqbLWOVUSk\%h]1ct#h3(;eNlL+XaINQE.QLe*8#g!Vp"?"aL\c'%@DZKopVf2()6<'GCH.pOIMfn%&DUZiaYef]4?]SAfhYc5oALr9P\uEFpM@$0[T=0HY\^,-+#YfW5sKs*'\&GL98!=:"pKOg(P!GWk6Ji5&).Q2T)hsm:UY<TrJ9sL%o=>r;KRI&6%uW6I-OP/:^sk;tLZ9(d!Qts`Z/1EUS'qsGB>\/%[V8:I*H%d%rF*E$/ZD"98n*k,.oik=RF[8%U1FN^*Pa\[Nr.f3%YT3co2#\GERnpi@rjf*M$#kKQU*s.$:CkqQ+&dT'qU^k`<Z7"\bP@:Z7a+ZD`QeHoAP?jKraU1dE`&DoUAAdh+TdaPb6$T!1#6bV%\5p[%Jffr<o.B/VFCtOS"T8?7`V^nk^b?:d!KnR%1.:>Y=:"M[IM/_p\=@t6J]-74L=mUMW006[p&$KGCecitX;hM$JI=l(:CjO*%c%)cfr$8-8jZj&;2hGpa[N)fYBGEGgaPap]1Ar^bh]F]SUcBH6edNK&6G@O8r?rT6#78V(;tj5>jYHGZnZ93OrkKCl#U_LUAHSB^%s2nkMOT201]YNZ*B+Pp3/DqXQDjop<!A#KQge9i"#i'R2VhD)I%k>7^58o+qO/MQMP$Mr`HO<DYI[JS>U3R_"'n1=<!_pG@$q]Gk%DBBje!aV["eGh8"H7m2i[eIpd1-_o5QZT\8[7qiW?"M?HUu^]9cS8[P.')@#"KkE/Za1.:1_0g1UD$M]05@EF(+:s6hcrT$G]!Yg%8FjYCk];#**\LmY%NGjDU+Magl+W8A[cG/?_(ZeGHEDu$*6oJ*O)mIg$AO?%G$GL[\p=\3dLO=rB#-Mqpk<n.aiqXZYg#5TE?,A-%`c)r;[$+:g>mbgEQSF?+UH#4GrI(%g/Z&>9\UN;lpoHc0_,(],=WGPAK(n:B.FU&m0cLh<b3]1[#Q+V57GV>\(WD],^663<5cV"e%;f66#W!B1!_(hSCAAB@/KpTrS;5/Z??1(\o:scFI5;V#d,e[Wt.1d0.brK*@-n.7!lu5']XFHOnNN&TX>"d1(eXAGg>a&0pFbA]q%8@Q1S\f??!9f]P_[.'-lhW,Wa6AVbM)\!#rZS3)K!RmWC_\5t=INUCKmi2QBVh_n']1<XAVra(A#9E;<^ae9E\6&q:oUM!ChKUi+%D)_>:Pba-<&131\oIO]BYK!(1A3.7*V"[nK8)ER<rS1Wg\$*.6Ea%/o!BN2"9RiudA%R,pmI3*I[%V/6#5X's7gj#cB.Ho!6KLV[%?L'_#(tZr7D_@p$I_M[QH0@YS3,a6Q?37-b"B61MmuuW7\q/IM/j9c"_^75Ys+5!IJrW9WE@`"ja5Z+.0k7":YF!NtegJ#J&U$SS%Fb$GTaM=(F6oZM!"[U/p:gb,`AU#lu8+5nYj8j_go#_ja2VLq-Gn8@5Q%LI=o!"L"7poR0r\OqN;,]>W/qlTsX*-2kDn,dTWH<!I%$%KcP]UW=XFb9S6AKQkNN$/]J2^=\HWP996at*&jg\,9fn:3A\SSZ$T4f?13aFki:HB>#dG.[LqS(9?3+PcL9F,>+fRXs4*]UsH,%P$AL+Sj/Inm=.5SBlrC#LNVf>a4YPf9jUT<n`oRs$qPpA)m#^cB)dpl3BeFL$sC$nM%&2$hK'H#J0Dr@e^1:f9_W=?,k;:+CcJ,`%HA_Z'!G$RH-d%8j-8I4\$??7apJF/>m0"V?ElJ_+RsPEd%P'1p9;##0[62TQ*GigM`KFUAH.%3IE%9.6=MT^8pPIaS;)`:_/@1HK%8\j,`.UIS*%-aHZSPh6&,+eb#,RO]1_'VjRjhrGVGmBqV:uDkarG]I,>h&OkpS^Q_l#pGP%o<:o!#,=pDgcpBXJWZn-9-M`#HIC+%\\J/[bPA^$b+O&@>skZM=c0XT,F?mr1+>F'o)%7Q7qA[Z8mZAKk=Z[DTGsBf6)bg\VtF-m`oP'?ne1M4bNq9o0m"kT#omDV9R1>%%-%O")2410aN6A8c*De)&A-ON_0FlH/k,8]&[IT)F=F\E5$`_U!/W=CM\(NCSJ'5;]cBhd_;oV!\N9812E%Bb/;SkQa;q/]@<O4r+%GA9QR3)e(?5j+4"UDtpcbmlF;>G2L;[&>+2_V1]=!k0:A_nDSf"5E3'l0qAF&+1*rT!15:NR/p/85[-4>H4D6g0b^[-eSrBHd73,%-U7ILoJ$;JF*Ek5Oise#^9P2_W#r9%n\%,4-Hh;c<<5sGkVU*Brd/_[V,WD0dn;-_LXYH0%'rNLnk:5oCjHS!&:[B?1-5$b)9nk/%/i1NQc[,FD]PN*k1kHc"0P(d#;O2&&<l%sW)TG*j637ehl_)D6-sTX"]VQA7V3M1j,mHjn4GQTVeC&e!#V]1cCpB9j_Nokb9SXj\%_8>j/6$f7*4B=O@EFAU.^ep3DXUM.$A18Xu@mNK0%?E#.4dK7JTE1!n%s_"Y0d@Gj4Iiho$iN)T+/^U4jpa8r*$XK]?N/B:i]8\_%.8`Pb3oTG*=KGc6>D9<>2Wm0V$2,_dG?['_6H<NqG%;kn=AA5G""0taZk<M,:gm0l2AjGP_S\cL,^D\1?T+89Zk9=Qls4k"F#MI.%BVl,jTJ&H^are>c&0u<(eVhNMdYgSO['u>34_9E2I3dMDXr,@#;\_UlY:*j'o8S")(-dQ9fuh?"_-6:ab?ArJm6CXKK-9lk1kI]g%"pD1G%6ARW=3f=p\blQ6+F&;6;S^'QdiNsT,m+%;-2:ks!IkNo>V\Lf;>mcDi-ShDe)/ip#HO-dRe[j<MX]pFoef;DT47;*NGdNt%)i*D(1%dC9Hm,rVK?XC)5:;'Uhf&#+*e@[&3ciU38[uQK#AdpajNNN3!C"&onCO)Xr6Y#OY>e#?BhuWp!$Bu5oer;.mW\/9)h)pB%^7m\.r%J8'6G=^/)ssW.e6#&1B7Ab'niiQ>mRR9H^\P@Fbc$46ZHqc6_F'Pt%O1.[f+Y:B_48aq*B9_"Xe-K!_XH`-CYkR6SVU(!%A/$a)SXC\91LW[`Ge-.>n?hFCN.,oR`]sK*[\eK.mk;t9r%3-]%F60bUj'8)3na>URGhLfMW*X(^R<2b/DfTGS@>@Y+H=bKl0KBd%&&GHcj!#>;[IabH0BR(T6Q"*DD#iE,)OK:b-uMVj1h/i2U[#[9akg5Hd?qj'ac+hB_Z&1M5J'^(3kC,X/=WdeQi-?&,o>Ns/&(>o%P8mW75ck&NK5`igT3)l@`+nmbb!'GG28?m_m\K!-I+XjdPd1!92@_]&j_WICQql[krp_Uu-,^ZamK3lOf#;U&l&)ZCo:O-%B+D",%U7V#L&.<%*^9bq+\GEi,QG/o#@.fPf"hglt'b:%CAq[`jM,M[p%;,1_R<43jhU@0M_5]:=QglAa>l)[>5eqaA-5-2q!HTk[ICMBJ%01CE%]LaqUaNU'ri8;'J[Wagn.I/AoFF+G\DtaL!:0&iAiKVc3q%(H^ruacmk!k<F)+=str%EYt?V/&>q\4Y#MFZ;p"#F#%8)JjL%X5+fU#_sB6O&PWW=thJXeq`.A=kb9Zro8KN0:hWcr?hkX\KPl9(;sVFLCp:3>t%GsF+fn_@-Li=2':b)CDb;>[b1-kZ"KLE`)1jO%+O1cj&oi%X4,EbYo8@i_DEHkVR7@g1<I[<=6XYc_`hNh`:2N5TZTK$9^WZD/"L,]`$-"Iu'$?A_,htjQOf'q8?Uc6*f)QGC(2HIB%'DXrRCWqV\_i?R:H8c=qN+HooZLqKCad]a]8>3IL+slt4JWtrP!E+n;m7?'m0-DpC`#NJ,.O<G3]5=?bqDBDON@TXo%3dTYjeLQ?%+J1=1&*0eQF!7;RUPV[U>8-QjM3a:WAp?]Z(,V)R_S$tqWHiO*DZ%(5N\3G45RPDm_733?%$m^:@^++gD1aVZ6OiI9q9+:hL//!T%X/pDTKC:a(1^'j[S)Gg/r\-aB_e2>ahqK#HZUWE*r@F(c6GK`]PX"^r6Z#^E%?9Jmg<`$,>)"(*i-Zf9#/d*j$k/mG_#4.1^^]ln%!3e4rqhArN=9)H`f!aILB^SSa$Q5EOmIS`+dG=HXN>U%N)LWC<Bah/!#NPF-e$h'gpjFrqX2UM^haFfjo'7K/XFImE`n#(HD<r/-%<b"A$2&M,AiSHQmBs*E0Gj/:B2Qe!uRIOZVr0Ro#fXJuf9)Y-IT=L?rI4G2aHq8Tq$@N>+VJ'\%Qr7YBC<@1r\#JA7opH`$6cAW^%$0Ou(hG2l`$le(uhj)X6[.l\P9\X(&@n*%b&Y7TkkuPu>kK3R/`i?qafmc[Tc-KB_e=8qAS*&MmAS/*0,'J#`i/*qML1Aj5\QnLF%PM`q.r&a\RS%%;8Pm*Qa8W.^GH*MTFX0%'a(nN;;3qdHJcP&4-fokrN8sW(nZ*q"jY))3,,r`+<d5bq:RJPbllh%6uEcToAXd6l*%gZkAV]2l5dpK4%oSj'6tdY>+EC<_UCrXk,m?g"l"p%(#@=MOetVfbul%'7K<49jl=2&\bsT'oM-jq%:*[`ECVBZjqY]!_s-MRM*I%BsE)6%*,eJEEfk'PGmA^9U6*1CN;JEHW/5$4]!b$mBOuia.D%^&,*SI0sPq\WE8uK"tA6gd2'N,h^sIELH3%h3]r^PUVktbmi8Sp%\T$U9e(!nsfaJn7c1KI>=q3b:Mg>?YESLuZSTam+hh_Rs"6WV>0QO&*cu3RIQ!QLY/)@m[BK2BM^QkJ4Gr.>Z3j[!f0IC(M[SV*0%]/T2]bTT&le]%ihX4ONgY43<jENM]g=1;Vo>.EDNW7)am]+aU#Fnb/R/\a74NphU>Isnt1g^?nfk!&aVTcRk;^#JQd7S?O)[KTbq%V2jrndj[MN4Mt&Ymo^FX9<Y$[4F>nD`lK*h(k(8j.KAY7Ko^o]X^1ks!_2g-GP08oC9o4X;5.o4TJ>=XM\_@r,MMrb^S7J>_M>8p%?HcZYQ$$[IX4k6hUhQH0KcsX9g7&)&NNgn:>Nb;mgq9+(E'.TPimCJ4M3h,44hU+MjRC9u)8LH-UQr']Rqol:g:rH.n#K14"3Db7%&"2FqDttbO)I@3Xc:iPF.46!Y%Tpe]cY4N6%b$Q1p.P_^5aW$FkJD62KjFic?S7U!qqBnqh)BNWTY?u?&b%k%ad>;KIHCF\UpoT,%24=XIBPC]IGG1TSi:nGnJWP;C"o9eE=m?2P;1&tClo0s?@01REV=kgTcKD[Q;CY6BhkEosi4Kd(%2ir$4G6L'oha)bfnNfgZff]e%e-+?LnC\P"b^2#%E7TO>R2*o!HdgY+4E![:3qJQ7[+md+WEf-GS[KT2>3UM3C%>H74roFBlSE93qOZ`Hht_>A2D.*&K-0gMh=oZ*%`#\0?,#QD!*iTW^j2dm'.Rgd7*t`YW9)E9I4mGP<,tB+>GcQAJO)F,b9?ccu/Rm,m^)sCmbOsLAlUo4kgL2MuXl[4c7"DM]Rl3&8%T<&g_"S15Q,`(FV4HZ'(IM/hKYMY1DlYr/s4thAKTpO4X=k]VIjC^5\9Q'T7Vp:h'<#n@VJX<.2k4)PII?/E>[&JD@U]\$i+^M0p%4R)k2/<Se<<LOf/,s'?tK+<7*rIH4LF2t;I[D)V]Z;9=[-sN5pg=]?jGfV%:HR.cq#=!85HPKr1p!)MhDWeCqo4Y(eb,=S&7D:k,%7.VqLnu(D\Q(itch>UVl^Q2<Ihb\2t[%Hi&0fh0QMp9hS?^u89d?:X*IOIYA5!((K4b\F!S0,q_i4`9Q%.L(<>]*^YNq0:Cr`cX;%8>d)k-W?:2H]D0VP>=a")>KV"'E64&p!m]V<`dThl'eN5IB',.;7uU?34We9bedQ(B1$1B&GnH;#KP0N$e#&=]`bY\_b2Rl1[E7<%hbLr"@Ir't7Z@*O1cdp@XKee6MbWZidVe3[ND];RB&C$._hYQ5CrMuMortRLqDj"cg5^0nfM9/I_X4gEr2%)F4Y8_/cNr+$bbCBJ%[jCYCC/6`ZSbY/5oA+kD$^qO.qsS3qld,<T]/?MRWVa$#N-ii';kTKF[n".24!&c:L@alCn>mUVCUq<O[oLFSI`K/5NqX1VoD(TG%*(<*YOYQEh1=+iA5"=:?+6e,'3ck>#)BSS+0?nNedolr>ae@Ve=[V&[5N`&;Hf/VI1P:8g$Ok&2RIeTs(/A5927E;VHp<XHVS_P,%(lNTELMu^/F*K1a?UdhNH@=;2FR#X7A(2>#X2g7G4Dl4Ep[P+[(f("3TARc6(u7tgSTjsq/>Bjm4n=o//lPQ*D^)q8J(J#=VshTK%SG47HU@;)s=p@4,,t;LbbPGpRpT?Q`j^PusP99Lrq+EgI5$qC7_#"!%f>iU&k(e$N]DX0H(*UkAZKS(tJ]6Sl4'Xs^?@pAW$(J(+%h,SP3Ir;DiT6RfS[b=(!FiK;eXN+X(Z>g%1a%\9a]P_>VkjoQ[CW:5)3V_<GS4HLih?CZg^>3R5B\4P_B=a.NqORT#&]c!Zk3p[s%7*j`$LqfCU$>Ido,;tmNG(F`3i<8RJk_JI1P7B%.!(m3H3jK5:%0_5LV5=WM`5b8mlrm96^J`(jnbdBk1]7&Udq*s=s.3P.7:%8T%br1(6kEG3oR-*n!C#u]acF:u2JtImM8HN,&)\Pru#mcl]Dtlhr^u<^3Uqe.ZmrVn2SGP]2eDQ;^^&lS^BB2LpcAL?oRiMh1#q)?P%_Sl8hbP;hEie`K!Nlgp;.(@8:)j+S*)sp)?DfKEciL_9:+s0,+?>BW[ld"_R))sNm+iH7-K3)F;_!sC<Ru",n9d=P_Jtq0ncUOW&%+Y!9rH,'q*d(/e#N7GY:6o%:9JV1[_HZjmM2h>$3SQt$Gq8"na1[fla)C8YCC,'$%*MUCJo;a7NGp>D=rPokGI`qFgfgm;B`Z0iN%R__=XZjdI@N#pc':I;7aJ@L7"+Q=AfRW)4lpah'-"qr(fT.cLdrKs+mU"QtD,@(c.9/[`%bk/]=Z$_t+3\tT_AS*18,AFG12hrm]%M>:TU!4n9s#eGqEYR0[YraY^uHAHV2jG`44bCul9mie(IRIO5ECBP^>QG?/^V7C!+%c)QjT!#kho"#&s%=[Vj,7SnM!Ifc#Uo\Qt%p=oT="Xu.$ph5(/`*tBRoP<@A*SV2t;^6d%kf1T'K%W?k?SSObk/i]FYn0G%Cp4n\VTi-Ml2L>:1"f$n`Wq3^Sehl?1lKAF-'7t_%VVopI8/s)3q`qKijGOjQSbZ[7DStVj][@?1/"/83b*#;t`A1SY,&_i.0uf+_W?#sK'nHgtK\:RVJfg/FX'#n$U(#J]eLHqbZ5(G4%.AU?kNA;<GE)f(BqYP_S7.Iqg)JOHSCJTDlU.@N)Xf<YpJG6ZiV2tbFJ<(Ji.TiF#Yk&utZjmM"m]>af6[Gt+H^GXJi8/\h^);%]%EaiO4Ze@dQ+g`_Ve<'V8Ql7Kf-AE5ZpA7u".?qrkZ20IB`O_4q697MUY-3jFdN"^[:2PQR!%B/5p.(l.`f.=g[L!^DX@brGBV_&W%7@&`$m27J\g_`HE\3cXVDQ&i#1BY"8X`1B'pU?h!;SOrjQt/FXOJ^E_UE:*k"^#HFKj?\;]<=+\OZ&i5KI#!oZq6o'8Di6:F'pp,%/>?W+jepZ'2nMcuBudgaO[Ron]eIn/JeV[&d,r\MC&9HAZqQkAg%]VV*9jnFO@7e?j:"ONmu*46L;(Z"BlTr6BP-c0ddN)<mFN*W%!E'74KD)e;Rq*h,IK\'t@HeOt>5d9[C7uanMKD[6".:]#f"JWY6mRlfg1Y*4.Z,DZ<o!s*hKNT4ddW8`$FJGS.\-cp!J>J^fEI2Q%r`1($.&=@1C<Q3=>"67Hi<2R6]$`Efhjr&/_2<j\5TAAa7H%ZbM(hJ]0rJET#Z1/:)JQL4(&3C-[6M$n#XmsOOFj`VV,G.SN\tqn%+GGq(5E.LSQ/"Kt^6rb0<kg&YKINE@nWB95j<'E5&1o@OlTR&ZYl%]nK_!ah)br.Z__3&3Gn$8-=,U*te)A(qYV(>![cMQD^:Y8p%mCco.Nmuf$[(T4DD]-Y-6uUd'nS9f`(2(e6]`"B*"E46)Cr#cAYQtTnY%NKlc7JcT:bRJd,i8fG8)m8=m;2Q3]t>(Vb\p25QFF-[%YKP46%$uE)WdR*g]qm.>2qADt;-r86_7V)ogcj)'^TG,0!-[*WJ,3a5@YV,VmASZBZP4'uhaon4.oYNrX*NbpUu-Ws_i`-s.uJbC%56E7S?iM25gUuV%70cW&LqR@J[T[4:T2NE._gQh$8\Qe9A@*l_G.\kRbL.*2+I9m"6h5(@;&N(Sh\PaL!L'B_!l7V)Yf*_nGr-1S%Y[\0tSciu&Xd;D6H(4@e$WgoRop'SD`84F.emXH@k-3LmfNZ#.I1':9Nb=`"4&XF[Z+d+gc5G4kb78nTXr2[F6-hKD\;R%%n9f^i%n;df<b9F*2,6e+[!`9ah6#3!1#&+C]i#=S;XPDSME,29;B!_SNk%]^NOap*;\>#N7i0nXdPID00>CdaH4[GJEg`:q8qtZ2skab45%Fs,NJ)<gLuH,?#.eG5(']LX1<)ia7PnsuiU05.&jI?R&+<7!9FM%n3`=.<YiRIpUrk#cH$&F"k+P\cdJ8;#H'PCmsdYo#,b&'!;0%_9r.5JABR'C%]aqbq433m6+%:J@lJ!$n5\G;ng.pXFu,>d!,8L5hbNsO497SO?C5&+"QG780Wc%_b;'71ZB!69)2p1g9O_A^m%83%M%nYg/`*!m6S*QK'/TO$fLihO<q7j,G+Y\_>-XXU\GOKlCKq/jdF's`pl:IQ8MK:fKTd(3\h)VigPR*?!TH=jg/GilOJNh-AFei;%hRPB-])7D&D3Gaql;R4&5h,#Krk.@2O!&sd-u\sYq@F+thU=`+%5SPO_0UL!%R`*bk)ZRK@1Z6>1lL;?)_eY?Q>XQtPYjb#l((Pt%k4>2Lhm6]W?F=kG1rPR;%em"@A%UO!K<H'Sbaf_)F_I7O&?'rLHt3V?KEB;k7A&7,rIHNqWmmk6W$'Y;SXJ`li+*"m>B/WQ(g=F;%C]o;]MWf<bPUp*r/l$H^LZpk1Tjp^3&],@bU1/N"+3"%k)K]TQ))Rr*kE$Z*1jn&@o*7EuFYa<dD^41:7:J!ETQP5`%!*\DZV&$_%0`.(2XS;2GXPCikT'eZ4PR")5gPm_=^\.]5nDmfPGU'KgU;q]p4cJ5&rV=\,Vj=i82DQA.4dU[!*p\[S=P#kG*spYLB$TJ&k`%+Q%UAlpS@jA\=>ha>k=!^paMm#`&Q7"`#SmYQiB1'khLfgQTOXDuUQX%W6qq[@t9%p7V<7AG!_T_uoZY([;S^#smK!&LJdtdN=j@bjn%]*3;[S!KEgf+o<oXEc*%PTU@P_@Qp:,`HrUECO'e3HHqj&/(lq-3/1K_l*[W?[%NGPs<KMXZ@r+W--o*%Gd679H#We)frh[n'"n$%h1dH"!0Y`q.7m8_4.YjOR*J>9qjKHu=b&p`"hDE`0BZ)MH3VB0b_c$DRN!9c"pm7,]T8i:A(u?AKum#Fo6O"U3Ct6h1J8&sELpJ>%&!@-JUr@T0Q+Znrf$+"g<\XpD=))o"O<Sta"Y3DCWi`0jN\@;aC.Uq%mR?ZgFQs\n8p%&`@!X'F-#W($mZb(MGFgiqo+s.gD#Ps&%6Jgkfc/2^]TVLZ\pgRuM0NVW;_[INE%"U:fO5_^^3hbZf*Pd!l:5h)g.G/ds-oT^BN+-%KFp#^l]L7FgrlT4D7YO0bX2VGJa*B8>%?pd8@-+bs$X^`Ti.ZZ=%_cC?S]/-F*P\HW%iT0@fMGP[TQ-*j@,M!g)),Kr7Q92&Z4e1'.UeJMT']Puu?<J[)F9H%R>uC(M8U!Ql%$L#]KBu7>2[<7/20(R0.?Jl\^-+)f1*epiT"fub7`Pd-kH;jDJjDJ3Fir-d9_[0t.:Bei0);,:P&-8>:E()ir$*";HE.eI$*_`F<%IkD+niM"(0QL9o5akp/O!;]3l6C`bIA+B\oTLAhda2dfG_$I0sM(VPDSu!R0?NaUaA]t)hi.g0jMXfrTMDLV`@[[3=V`p\lm?9=I%+5m,9nM"EX/TB+iKdpPg/9+6nTK&?0/H-809VI0,^Vl&I,qeJYnY/Yh&JDmeL3mD:`CibqZ=h#BO(tS%<TMp'OqA=5:f_=EepE-@%9E$-ZC8`QW_fF^q(ficheM=tmQ&5SPWloo'G5.%!ic&r.8upe[pK86i`c+^=((i-q8/S1*T0O(jIpUp=K[fOmTFOI+n0/<h;`]B%%o>eA\1uJHn_*hj5\o]['V:LP3g4`nXo"DT45rNU0V$Mo[4()(N#R*(VYEtDK&`,?$]B%=\AsH8nFQFodi:@=(DbEFAGLM'R^<2Xu%ouRPk=PN2k/c^-!cjX=e_D(p_[Oe)r=jb?3Z8u2*DH9oNfc+m0i0dm/n_LeE;P5ri2%acXitEMW[jg*a]M7-Xei3['W-BfqFhRFS%b%/"q<,>G<30g,,cH_oTdSn?Z'U4Lpa_#bP#Y/D/MF!pf=;a)Blr75_!.S@^k*#qfh]J)i/l_4;^iBLCNGia4W"`=TQ,DsGWf2;$%W74i7l:0:,KYVPf`]ZLW;Z9E30Ff<n9SmV(=c%<(fWQRS@H#]bk\dd@%1jl#;j\A4CTcF+8"p;6n,V+Y,[1'hd;HFX?sHm;7$CpR%@,;qIdAYa]LW44c,;7GdlJ^O5pI`8afai*LD<H<eYNX-f:RJqMVY6-4RmNXI6ZFW18b?Ju&:qlC'cVqSp`$Frk?PhtE)f41>%Z,"%(H5Jq@%Gp1-)52u$[=5od6[3/lIgXZ%+9L+.\4Rsk=/gI5;.!4"DLT>#R(KfB@q8MMV@"0VEbE[87eetE3<L3>C$sk]uf^3b*qBX%?ugfLZ2?=:D$\/E'P^#)bUpSMFR$9md*N=u&^]V/F^H5#hp\7n\knR1e7ca$[B?p_/B8qV472b?Q+R4*VDI,5%3Z^:?)UMV;/fLg%pMsGrJoeDL&#"gD_R%"\9cJQJjHebi/u0^nZJ'8:]i,?3Bh8AZo-1.C_`!d*=I1iQn^19<C4j4DP]02C@1.&+:fhIMo6k0BX1PFS%d\Z+qEclS+X_pS4btq*a&m'6/_+]0n<k21qRY4rKkh5L+is=a;0@_M:*$N&+phC+IWMM`F/&dbD89\4#PD1HsPEU+VW1(pfI_V\&%!MIK2@<k]f.$)Q[KtrpsDq+.05YsKt@<sDg+2GfD:I%oB=__l*5F2I0Q9GaMdRW`I-K"AR6<0@k_4J0V`)h9D?M%CM=':H-(?`)$%e]St^&GQ$45Tc`[:(X&%E\=,qL@.0pU(qe".00sXTp)[Qe!V:V6[+6K=$]>LbPQ)=j=BG%[GW9EkifE$<C+ZM(3eBWa]HhDeUi"s%d"rr0=3ue($f4cK-XT0[T&"C)%@qkMh50i4^)B'.$9BTU*`59P'N+dUB^u$nm59";Wf3F-9LVLJ.Y6m9XHEh5p"?/,J05X'A/ARM%A@a%Q5G_j`6WFk"fn4+hPB;UP\<E9qg:rMeP-TPodhc<9jso.W-UERQ3k_)]P"rOrn&`CU=HP_PaN,]8$:aFQ_(r[\C$.5K,aO33%oNtSg_38*Ppc/.(f>VY*aH[IeQ+Q)lm#9^dFJ_]'OXmt;8J]RU+I#O]-lu<!fShMf>'&2So#+g([E0Q^W?@?i@pu077G'Sp4V^A\%<j_$JhHfIpOpQD<Z(%%Y&BUA/fCke4e[[lg.qA0d+H1Cl#fdD%WUPm&Oqh.MI@;`PMr4uThQn*Y4!d'l-^0<gm;B-&FH-XS"A1SH%W2[j[BW)3;%cme*eEfj(p4-7#HeBkMB5H4^e]?-,E%;3XJ7#c-<";9fUaK_s.FitUWk]m>XrH[$:.cEr6QP&T^Ac*m$X-,gVAWob%i)Lae_<]On.+P.RVoD>/6'FVF]S7th8WFn/'JThmcen^7_3D;Y2#pSG0f%6=^$:+sQ,q&>Mn^bLJLNStl3DS@Y<IJGnn"O6.Ah2$%Jc`moeMG<bcco7.b"Gd]W3p3ig&r8c<OpaNFhE+0h"`3&"V;&o66Er2:CR6u&mO+\]^bp;S@tOW5HlY]f$2n$P6@R)*j,JK,g9%j%rbrS>9PZ&@'@r*jcd2Yllg[NJI9>L+2TR"0:GEY\b-.$VLJhiffUe%Xbmt#S\B]BI!1?gc0Qj736Vq9X5&,'nV(6rsFI2#uL%6Ja%ni35j3M/;_<mu4O9'UIlp/h?UjZtEr[iefC@eQ0M3iNPV#Rp+$r+&nik'[XG>b&ZPD7-rMM0'&*d3VQMYZq@#VML1IKcTt33[rXn%b&rR`Omu[HA6).@Ll;It8OR*H2b%?Q&dBkS*YXYZ9OWuN:$b287&Ka8$mG\gp4/=B>^^bhGtMJiPp8%F2.^HF7qCOqF_F9/JhSt!%3EJ*,Elfr<8<:OH<2Pna)Hfml)J^?j^9Lp@W^E%-QFSA?&@&[mGUG:`94B%bI\qupY6?<l<McJROH,8h#"&dQmN*9XmW-nX%3,_u%a/#J'QN??8lg!n%2f)]M=Z78IAu2@2OjDTWPs#BZF&2$Kf1RU8#!iu^l\(+@Fj<29R?QT.jirQ"lf#4Cf69kNSE+#)6gN\RQ@"Ne%Q0[C.elgd2%sP1_i)R_O>Wj9.&#ZZVou;;;nS5m1f>B%1b=C("SZTW\9/T\u_l5hTjK<egOa6bn3Z_Q;a$68gXW>!">DK1f]>(Wm%W].>T6^QVDWK8D/G&L.:7IkX\WcB;K._Z0CC1$F3adE1/lNE'6WmN7TY'\FUPTZM_VG:A6c9j(l?nR)-hlQ&n;J;--i]?=SR+@4/%BR)T@MibBf'IH0.1@.PXd/4QU'Pj+SgnPU@-ph=&8kn_jWC;'(2%HUf``lEH``!C.%@F:69IgfdWEDCbMY-I:I<J-GP2DqG2]N2`%-%@2EVT`tpOhfsh%r+(5`pUEu@DUAJSjP)-0;^@g$HE*F'2VGaBg,^&Xs/"%(l4K?hGB=q1lOg)#21P)?QW4/qQYB874Nu]Ll,/6%0D:3Z<!_[dMGsjM=HP(U%(('Rf'ATNbtD/hdS_gELqaAS,0R2@+4jD_D0o&-S<t(=HmtTH]KEP8mW&fM)TVg-;E/ZR4h;>&V-eL\%.@a.UVsZ!f]?5r>YnTsi0]^_apZ+56[%.Jp&gU!RG=JskeVUk+JfPf$=iHsA"K(I[/ub@+hC6\LfNmH-0#`'*$qp%8.;ph8-#@>A%=#2W/PnN@jFHG7o;6Lu'e$OF&B74R?601RdB(VX60(BnoAe(aI18D6[DV5m;d`0BXP7<r>T@m8PSr%fTel9'm$hUC`bgUKuI6<Yd%[u./\B:MR?]d7n06$(4!,P+eMK4SLer+[dN]!H&1?2E]li(LT*O!sRWh4DWo$9.n,60aq"bg4@"Wn=F(;djl(A1(^O!YH-Y[?ArQ%G48DsTbPp.fa>?]42aE7][&.q4IhN@Mr!;ke)spE\HQC5I=*r`@Q2LUM:DA![$%Gno,EZNs62nV_QNVc=*M*9X0C?c>%1%UqtS=_%fgMjWDCS^\psPEsR]4$a351cA^ns!Z1lt'#ElCXY\MEBJ:CNkN7:oo>jc_0Mj@<@e*Q5hE44`Y^N9Vtk78-R%iFYkYTfSH#9.eH2%[T.V>^N4gg-==5ujE!5$Wp==t*TGA$R`O;p[?L'Dl7VUfF'$SrdX77KR.X,<b"(;6-`.I>I:S%!f@A;@1.>)F5"o/!N?^Of;tf(W%)_[<e"%BIAc\Auq%hpZ9JMtaF#XphOE7]VFQT0:UXYlMEVFuN^nK$pA2c[ABk`Y;TXakXi24[h[Kt@Zc=4<#VdTt[sEd'C3=MTj.%Mt:r=FCMY"W_T/8<)"aR?hqcX3[ne=fP8"0U=Q?Fl,9)&&Pg'HRZ;#+0XZ$#[Ju%t3jDjL0aVo.24^,lXF#1LSQIK"H11E7eT?aY%aK).IZY^dc9d`t7GDX4"WgZ\!G,_G56`]IiG=<TZ9deL<*N),_WMU>u5LG[Sn#E5uX/2#hP]!It'*G)[#Y_dt:?;uSS^hgK:ls]Z%759(W:a<qY<7@hEfKIc,@^U=Mmb8tel,7?$`,Ef1Vj^?h^idoC^"%3EZCH,3UhWA:YGMu>STVdOamQ=/'<@s.\6&<WC-&U;Ou]<7%`bIR&E7nDUFag/43E2=%8FO4K>"pA&+Q8a^R]>WI?'91-AL^UR%\Un'lYf)Vd7jsS;F0Q98p.ODJ7AJp:2-tSaffenS[`h4kkjXE%hj^9`?_,o>[A23nc\&or:?eOd@<$^iNm(L@quR&(?".Z"2-8>-/ap?dJl]H\=Fj5)(4b>-1RV!0Vc%3o&mR*\nP:m%anLU#=RdL>%PnU%A<hT2jo8hCS_6dHg-S:O?%m(VU<>8?tk'TSMC[P0B0(-=5m^ule0"OteVBg</S[SIW>HbRNS.Zrnd@I_MS&dI2au<$cUa]ug%k)RuWZ5;='2ij3,\Pmi-gpV<KA<)JR0f*1Ogmims;GgSm;e^>l9D@N+1RnjX(U;k'810gNW$0c].\s\YW(9b(Bth1\[Nq0UTtMob%hG"fp]dYO<?4r[U*N=QMWet36eIteBB!_mqMVt2-nqjfTp3UiQQ-b#kYs:u+)dG`g'EG![(Kj`r'EG!WUK]psS<A71WI33Aa5iZ/%KQ-@^WMQ7A.Sj5OWe;Uf7&B.>`(+&haki6Vd)+M60PQ-M2kdd2e>[s0P_a`8;I?E#iWSmSNA0DM1a/9tf2>14Xs5B)6<k^9G/q!\%%r:]Q58ujirUbW_']HUC,3LGS/nG$ub48OE)K%53YNdSqM3VuJ4595u<BdE7A<=Q9#f=.Hem&LB&Z5cYf?),PnX&TaAN9U!W9$pg%l['7U9,TQ&1,t]Tk:a`uA!WhHL:c4+/%+/Oa'b$9L(CiRNo%+(^>hu316fN3:1NDGNV,[`2s&l1%'OQY]AobN%DK499mP11:u`"/%o^+lk-\X&N'37n"gi00UFec7Hp/O;i8Za!0f\L'">h-POXK_D.-bKW@`nT*Ehi]U!q,ho->rmMq\Nf87Jtq6kl.!S\bC*irj]-?G%c1UJrFa8!fMV@CN_`$,s1(;ojQ,t4qIB&TA=&T]pBG?J6&b[Yf9WB^S3o=<^[Rjg:VJ3XKJeCOoXsg1@BQFGQc)R"g>Oj5O<cN5O%._i9i[Z!e\LhX)[e?]i)D)JJ%m6s]JD7-`b-urQ:<@Xim0U0/00BK`/c]0:t]_Cf526K*a*LjAuVS:'XVu:9Yl#X"RO1F\@]d`D9%26JBh=)nC5B>+Eo<TACjL*=YN='`C$K*ZYc!S9Ii&Kj%BjT$9Y(_Km!%p$@),H^S>9-q9jf<fO$Co1^fAh11_Er*VM>b/%bl[E@l%\2A"ldu&nfluFPpIccpS<FZIj;I2NA_:\#&\Y1MP4`'*,HV[HKa/M^p0#QG9^;?6_;Da:mUalEB7T5sgmrQ0DI_jTjFMXXo]-X88%k)=4q!E)P\ZhL[=7\1^$He@[?V.k(EF?SEq)R/Qg\^lG,b0b*b]e:[(e*OA!c4,JmIoM0fRD>Z^\cbpGd7dTi?W-Q9!u[mpPFo<j%KGWIX(uHU##4oLU8g2W;!%FI_ETZ.V7iH(ge'@MseHFd@cC^I:b`a:2'ss_bG28<PTdh1Z?]K(l76<c>nE-+KW(A].*\#<:3,dE)%W6UWdqntK49P*3/+KEc5h[N2Y9q,+%MciH^[-9&,,#\A,g\bcFWE%AP8r;]<EDCCK>M=2GSkC\R_d!@eeYQ<'<_5TjXtgYgJPJpn%">odOBe!#]e5iCpjCkRP-PdD?b=a"V=/kI[AX4+t=ib^M.Si]aQ`)B/b=5F%Q<]cpUVo*mQ]4\)(=O4bRjJ9t.e=6pnASDimMIb?%]`Qgi'cVl7F_-`a=nCHF4h!a-N0sJm+^lE'?N//Rm/3@5A"!mdPE(]8*jK;TR@thJZ=a`JWn?+,3.t>1JhXZ[/Rk6?<p:=!8K&1Y%YVLFT4ldIDliV[s@9._/==VT,$gqQl/5:\G@J2b-YP$s"IS>IN?(JR2#k!sr03):Kes/>Y9_jVQ?7DP1h'P1p@[S^0S76oYg.J4R%EiBgRF3]>YFdq1.W%+lg?DjT_oi2\-EhfC[U'oG&8ic]oMUX9)c)#s5QX8(434I,Q!L(:M=Ku5"MGslJqI\bl#C3^aGo&02=ro70%;qSY17PTUf921$iP95r%].+V_FCmDdW5m:=2cKgXXT@Lb9$L@df6n46!T[DDR]?F"G+R7'P>tT`WiZ;$]Ra>qKVf^]7'iRd<ro>'%!>Ibr=)A\F>'c(j9(c27C23fLprG3jJ8/j"'mAKqWrV1%DluSV]TeK&;</H5r!Sk^.<;^\eX!d>q34XKGg*"3["Kn+bEqc+mS!DC%0'/;,+8Na>nnErth0pfFn1:tsk>FL8(Al]9jV,%deC)Gl@lmW&;*GpkgV&'icA&q'?9bTK]"Z_`k-L`ap\MuZ0.KpaX1m1]G%e>]%o9>,n3?(T@]mbiO6TsL:5P\O^1t5U`;%"OFPBbQiIUWNYj]4U^/S5Ma)A]s8n!6QumFdBFQ!E&2oom/@n*^''R="o#Md*3pf2'-G%Nl(@;Hi<$sp!mWP.c9Qi[_D=HHi83TiMp?VP`p$qfC)VI-`6+glnL*dqT7'Z<)qY)b2&IirD^`2<ScsgYO0hO5qCdWVuAlo]5-7L%DtUa,5!I4@:]*DjHWK&.b!gKsmT=25f2#OQ52om5q=54\!e:6`Ie$&6gma8L47;dR+sl\Y5M:>@m*mH>lR.1_T6S>:p3Zc!bsA2+%[)\DT1:m$bFV!K@qIs:5')27ERfT8Xn_J/fT*Q-tdd1baf2!HF_L6g3n+DmZePBe<:KuYm<:3dO8rc'm?9e6irH)X'b>A%A5E/ZW%&$*"uhWh">N[`fMGFpaqp0Ks@p[R'hYFk`pIbO5M]63oTn)M%Q?9^UfiA#iAPptGUob._1Bf]*]e\-G&%Q/C3o`OXTPJ>XD_0]0h%$nlt.+6VeG]C,@@FDB:Lp\G3=&I&&7\)56(-(6-,+5d%9nBA"`pZ>_cp\II7Z^HIb-<'$oHi;HaSUUUPIe%J1rgd<'hs2Xj5'HJ(%7'tT@p\N"Dm<%L[rV-01]C!I8H0`.m@MDb/$)uli5F$]ZSbMu[ar\4m?GA#.OE[b_)9\TFqOK!7oN"3%C%HQ)lR-$NX&F%^<Sm$h%^LP0TfNn7JnbXU@:>Tg)#k%ALhcru;*D#k:Ie'uEdHC5YJ$0sK-1QRhH;@fC=XdYhjmXUr*9\<t[[KQWUUf(.M2Ke=krh]unc&BV%7$5>T!C+sg\\t_HOY')c1+!rmb/W%B?_5Mr0W;H=oq*VBb4A'FL]&8YbRgFJMMUl;C-oVi7=]7Wl_tFo-!Kf2[Pd%b^Mc\Q5:^=H%`KpJL9A<lrYO'j$/rA_?WX7_RPk61B_[-?-IDnpsVc1T5WU1V<h4jWbn9N)pY`eC"8tJ3*/*G!WA7O#I9pugsl`;tGqK<n6o\9#,%Y`n<Y6`X)4R2=iDF*BF"g"*c$?t\?:fD[8j>)cZZKIu@GJ%ld,p=%7\:2W7m@;9PVb0F\4ea+D"k@YdNIs)jq1LZ9<fjlOgB"uAT%2!;>)pA;%TD1;i*K(X.<IelP>hrqb&/d6&O,@:,FLF@odCt[RHGCTD?^rtk,7e'bk??PM]>BpcPN*j"i9K'BCH%G]]T"Znb,7uRF%`J?sF!t=p;g$]4\,!45@D.oKkNLdOZe?n(Z_7Wlho&jOg:65d`,qZFATub?`-*&_,Xg4g=&s5SjeM<nskla,LDtjP6<j6ted-@T'%A<i!!e%1]`^EjG,@[)]Fc)FY</N`>tf4UuW\OP1X9hc%9n+!q*pDtYWfoU2Ncb.8S:I)@21q2gn5BQ$UhN*TqSBd,u94+?+_jlVb%/8"6s`h1DpSf1U<[4*11V:X=M1XkUNi?p>7qU,J(G$VIR+8,=#Pim^GO#EA`0K?@%ZIe9EZC`fi'fuUV$*:tpJ:jm!"TkU+"^`K,%l7:4jmsFO]j^EY)ok$"),m_<K;.nTo5%SU,632.1B*4]mm:aVeI2+dQcS(gD(M2e)r5-^,nJR^c?[0+7[](>Y(6%i7Qe]FRJuXJ#%XDJo]NN4]"M]Zt[Ic7!g2oP9a3!rZ;$-Tre"Jtjn(m%1U"dY3,#k7M@$[_O+KX?/Id7qWX5a[[?5SQQY8n):S"G9F]Y\Im+NFN,_%[MK/3pn^\pH%ADdcULHD-`eqt'U&j4]1H]7[lB&WmBQF"`:=$i]GnthkJr^`O2&m&;?:K<)"P<gOQ,=NE4o=r#paM;55VE%U)6#H%IfU*fb)nKuV!hDE9lp9Bi(p(m1<hUnP<'%@KjFHin"2f(WVOo!U#+WR_6R.#j:"-k$dbtA;=)h-OUt='UnA3Fos0PV$=Jqkn8>[9%N3R\WYEUrt^e_oE'1i;I4K\P>lPfqE0[@O\Ie0.HXF+sMq%JP<?s;oeAY:u6q]`^-A]BX6#k]g!II((mR*.?a].&QqbGI;[$J@We%-_h[q2d#Z_A+imd!F>[YTg'l-(\RGa(Sl`'?@tZ5K0R%N)uPA[5=+Uee$AO3_Pa2#IpTEfSR*f5%,/&@9ViD5FR!l-6`6]`+7c=b%0KhXMAI%r'2hChfh3gS[E(8q:JR.H_0Eqk7CH6-=*t)2gQ46T$?B_u2OHtp61ZTdQ=h2)&JJXS\qD>;*!1&^"'$H#'NCg-W2!1Pp%e#Fr]\q$3Qieik$TYL-9*ZBoZC72>$3]kF8*_9d3XH*I2$YQ)Cc4BCeYc"9C<T-W:,4hUAPGDSRB4o7Y]J&]M$I*!?3j?Y0*C_#E%l[`^&=T32nht\WsS3spGTCEHNm)'W9_KnX=X-8jLCkqnH!0=#4Y_P.%%Z&LV\MUCoI(9TO-.'c3^(uP3E'q*+Ad.>6FuVJsb"r2i%$">aYJ1M.]g&7ntZBPu15`GOf#n"^>#te.ORk?mC:]RDJ_@G3)e'h*EL#'c-1IsU*TThRXNVESbaKb#,S*,W<-]?W"7mCId^4d-]%fFs$iP)'Ll<p?g]k@tiRFZp1hgM:XKc52*:^25(^";-?;-A\_Nbp2r\hM&J$0Bsg?m\4b\">"ZQE*A;^Te^6*&BK60G@qSP&p<`g%n11i$YBSj,GfSP%-!F*Z[WLKa?NcP<Ar&[lZC\D5Y[\kYPj.+sR5Zb4qk4pBC7_j"!P[tS^<,hjfmtYl9[nN_bDB8g2!N6Kn!?Co%>%e/:DbZu?o/aSB8)B2h3J"*K[Ff>`?ddhtXYEMFdNb;#%"17"+#%WClTKdN,_]PIj<;$%Co,H<@#fQ3XPqTKZhlD?bX)j)Fg>&/%pTnS+mn51nO,tW!p:LbsDQ^>d%ik,;O4bZCBmf;Hhi[S&5]h:7'8\l8(>`Qon+0Yg4`Fp7?7@*NF4C0U`>*H=7WuSXcCIK1M4i`C%/iVeKb]KF]fPE4/I!q$oG6r13?!,@&O.8otYp?Xkan-Q$Yf79X8um`k-W\r6>)_0cPI8e"(4MqtS*7tGW#`CnXD-mU!uGT,.KZf&%kVitkY*Z&bjl53nhVla3m#P=)lED2!&_Co)L17Luh<5Jri<Jum'VA+<AWHprlU\SuGL6;Ff]PmM>h:VNnCK()*eU"=nVdTn/-)$J%c@#Lu=3l9D/MdI`SS>`8MA3@K@ggD+q.he:Mu@5oo+9TpbD8tjCA#JuN)nPu_5mi:F9KSQF1<]SdPAq-@g7*3Dq%%>F\HMWX%htb%K@]gg@U4[aVtS%dC2rW%S3:rg_$WV=ZJ;P#1^t6nbF;&)Bt-41aFH\r/SVn2b^d`u7np*:iOZUia#NeH:"C4qEG[/NM0gV:=?nF&%oUn0_h0RV)CQ$1Gj-OL=*HV(7$.gM?9tt8#rC#NB<K2L;[SN<>IoQ"k8"V-Nc\m/E7oSuZMDp*/&Mj3W(Q\%LoFl?n4lj>0>@W\`%+D/V7nE$L,b48A[(Y1bI!hQpZGfVl-DmMj4o=BF?L@u!/H=Wm/#Boo43AVXY4did9@7F+c1C*&:56WVA*&t9,JN%2KQqb@7#F<<r%"3poiJ*QVmSN1\g1?Y%(6ONJo#OO%5p3<09JOJs:nYbB@T`HUHSiA&"c[)<AM!d#<<EN&Ke[>F3.asfhm3hT!<_I:;_;8TV529&I%98VrXO0KefXTp2Qn7Z<7J/MInRO.<KSi@.(eN'cMN+(O&nI46)ZrBJ>+o6CWA#=;^ZtgEAi6NUZbT[K>a^H$B3Zd60mt)?.r!A&R%oh#K<%t>SsGtnE0@B<@6T:ar[B:qP2AY=::jgb%%.jac#[Kib#:(r"DZXM$(*DRP$Ie7!p0B*$58:IrJ=,X[?&@X^l9`eB@At<(0%e8J9bjMJM-8:(Eh_aUu5:os\8oa=j->u_<4%uFs:/gXr7VLLTC,GJOq=Egt)_5/h2,,Ndhn^pd^Pl=5:EfgNe/&Y339WL%EBHLBH%Iaua'9Q&0d_I/Oo.3JB"Kros]FCn7jlc.muOCNM)R&8tfj5Q5b@qmAoh;Zl(@lH"m+CR[((YkDDEHB:t.B+$K>j2G&6[DbNq.>O0%c6\lI>_>T[I^LB&fl%s%n>^Hbj9]46#Mh8Urq.:b>:LNCP!IgA;"&t/5@0l[+jkHfis'+=4Z6(*a>gpmBDj=*J#B2jUQ><Y/,BG'%a]^7<gRK*OYm5qh(!thPK@S39kP1F#7K#1n7VA%AEk!2Ic1*jdK3X7_0a=]F]s7)^Yc)C6>N0/Ym699^O^6*QabC5%!9L8;Gq-Ve%^Y)\ng/<"Qh6')dJG$d,AhjO\cZB+:PMOV,*cKtXbW7naAqBq\+U39"7IH[>?Cu0/qVJM7De$-WoT9q_7lIUlri2(De0b7:R6;[t%C$53',`r,.*Gu\HG[%XlZ,DX>h4MF(J_T:Rk2A'MV7YnlI^h':rXn`P5@!E14^rm%LC8%EH,TX;'^NA`S],2Boo@S)_kgu>p3<m/%i<#'9EdjDnf@n=%Qfhu7>BgLm[c7"Gb*p*#r5BYH_Yhcsq]WM^A5H-DqPl1?.^cV*c%aPlqC&sFB8/V+$hkt_-C<T61&WZ`@#<?0%l5=WL*R7Dgr<`PhaAM(42,+WTAA]>eV.lRXQ&DNYD4r"j)*a\MD,-PFQM9$P"X*'k!!!_VG&u:^1D(&OZ\$tEUZT]\O1&Jk@X[:-%]>@Ff2.N8$G3lQlhE.pCS``[;Gkt:FFO@d$AI9D7Bnr#^Kb-^^5-5aM/k=PEN^?53`RD+uj\Bji`42&0Y6aPYhs'0W^H.,9_SrI4%44)C@l[IKe=K"5&!jr2qm>mknNr"2Cf.+"0_>nr3j558qk>D_oDMHH?h^<d>B:b^J7]+012DgLUW]rW._mX1jHu_f/s1Fjnn9,rU%(^o[@QO&N-Q6ekfi"3a&N-qlu+MAR(^tpVq#Pdj]5]JQ?#dNl.bn@j$jqGRZ-3Aga.5@Km7"ti2b*9u0jo,p6+TatOhCWL;+;V+%%)9,G*94nmuq]<XnRp,\'&Njr&5(Idj<gJVO9S/O?!'ol0GA=_p"EUGt)uqZGnf[/f+;@n1$inN0AA+cXLI'h:W<bb$<AN*_pC*fj%H<=m,lS.%$Y9[$Q!74p9)T68.<=;,m3k;=JgLY5/mRgEm\hP#4[VHKd3qF)Bd*ZioKY^nBZVpjSTpXQeJFtQJd6;LME;Mm$i9lN>%dR1LlC^cr:(D+O^&dr^\Hj2]BN3+n:+3%*pHfO*pU8+rq#?@RQbhBkfV?04+I"kliaTCrN*Ue>aa.l`h\[+(DZbP.h-1C[kfWK$e%Ae=C/FCnsZEc%<;*iXeR5!;4:@<kNuS*#/j70^<j".s&WYUGF.*X8\Q&0iLZ0t"p?]<et=*L=b:r\AZKMU0<]\=uIL8%mOm7%QMe%g<U`MUJLJe;?pSIrA^>TPYgS]()*#qk<;`=7?/!j;o!et7uZ79cT,lgS)>4^;ei+gLdn7H/g"]#N5SBV&;<=37`Jt"jrAKB/:pj9%(c!jh:qjI:>^cF!pCEGi?016?HmAj,4KgZCp4cMEPPGVO1IX"*l'eRbl7Ule+?sjCM:m!u?iMgTl?5:S@nO\n#-+uX8t@FtSI'#;%;Fa<0rfD<7"tB-Uhghn=-XEukNAPfXDs=J(_iue8]JqH=L]<n1J@OD<MY2m+?cfEo"T%Ok93L9*;?@STY,*[p\1`:ThjeGVb6oGo%B,<+!4&\gP2OqrYX5#I-+9g)&U/c*!-kK(Vm&fPabIOW$?"jV23]+(@C^(JVGA#P]::_$>#EV;[gh3,66jIPE1CmEhktaT)0.8s6%IufT\2<l^;'QCe"A'BdHW4/+9H7R5D>Ycr_3XW@n_e6in4CSJE9'(Q8nh;*!!3kRu)^6@Fb+@3Ta#grR_m?]J[.d)FA2Ot_:M`^M%k?AU.pp^!XT3&t_KtVI&BsM+Orp&KDETSKBLVL.f@X.aO5aRhR,\A.iC"^Lo:T*q_3ae,U%gU<+r!/OX^&"+Rc*oZcpu[,dD/JdY%Z:rm>ie(/3dkR,p?hWpS>c`d'M`%+R^ZQEo\V>"?)9^V^P*3#0A_0,L6Ip2V,HSC$bbr=g#d<]nf=;''dq+2cjltUAHqFpq-)Q*B%Tbq5&X:iDLe5EDt2SCr+'91Ru2)B9n?X`Wa1Na?3;Zh=#qWVHg>*rk+5$n01CLO4HfqhYN1I%s8*AeM5Of!c11=)PXPb`nn#*b6L%YF-Oc>_(E4V^-2Uedup'iE9W8#E9(^r1u40C%o6'W\QdTPImg2Br]Z&Sl=$"QTqcG_>:HDn^Df3"VdPUn\Q:>F?+mZogVMFaoh7S%Ad^Ec2]AQJ@0891nkO<F)WFR-Pisl1b+N=G(o(6[RDo&V.C<4*Q'>*u?0[Q'#_QoJed"I#H'n-`im(1K,pT=/=Z<G'6lA"U.sk.N%W"`a;(KElf0;$q*b#Sp:&]PUT,lT0k$\SeX5"Li&]shub:A;0pr+Eap]6$h0Dk_bjmIb"Rh+srNl!ML'ApdcVf116kmnGW;KgO.Q%SrPanWLg\!bkDk1KKX#J@$1Z&7ssg3#O(18oQM^ma;Z(\@JUr17>88UFs8$%W\/F+Qj3%R<u8DZo,14Fn0$"T\-]3kdYJjEi,fr6%jR<jYElOSup%IbOb&.9a"?PMa3@^")=?_jE_R6K]j/(*G)U(F\HEs#!ZBNsk]V4T!Cp0+`,U-a`bQHDgVjE$&\-L7L$E#GZb`mcj%mD+j]&Q:aSV/)g@ZQdVbW7#r*i'iT'Fm@TspJCenq9`k',J#R!$@?7W2EMb[>Z'C_bGGT)\Xsr\QL*t*1ERA:%kU%?U"'_jc[+gW%A[!e(bbs>I4=VLmB+o*rXZMo+P'8Zg__sH[,cRtYOob+/%Nj@Bk5os4(gt#t6gX@NfInnVrp.epX,)u2C1p4.fGCNFC":7fDs\D=%U>Y,c^Iokm["b,YI%J6Y\VT;:PY8Vnb/JYB_43$#T\stn.If^W:Nis%Io"uk"/F&+@r2?rXiG.s3\tpR#'BnnGabI&.gK21dj2nl%E7Y.pWT>6\1t9=jen\S?-!^Mec31ki.Bj;.EkM'hibUJ30;h'3"bJE`h()h<o>P14p28dCC%(QE')l$<gY(`uq0P-3`(;%d6;,8'%W+>#Oq%TD3&1U&b3qYao]\R.G1&)@gk&fa%gcB;K$^1k5XJ]A@4!4%/<QFgp^rVr[6h3A/+d]l329N(E0uoT=g>9.B2X7$hW*HQZ%:V\ZZ[FaUUO+n!$R&eVr?p@@V$3W/mMZs@49cZD%^33YE\TgWt:S/J:p.)VM<fSs6=\OWm7n<>%64=^CTs?J\k<Q-HS-6%[Vu8\7%o4Mj\A^D:TLeKl!%tp%ibT7S9rh0k^@aAimb.N)K8n3TUNh7_c_r<TDBo'$d-5Qc$bUB"A0?G1<`pJiUfZ?2@dAK7MD5_![.cq:Z%XB5[^!*[T,U!;-^1DWk)2=bc.Xq/og%W3ePH&(O>je"R0fb7%8lS8cXQ.IWf'/i<tT#,Uu;"Hr<``i;iZ4NR,Fua*%feTD%%-S=-%Jn@1ZPW.`4/XtmgB`b>DRBpp)gZ>N,ZUJ>W(QRmUZuhn9-+%>Fd^$@P0MY[hkqg%RaobGHX1Rm#l+,`CGE3g!(7`"R:?nbd+NH6+%Z")@`NMNW.LTfFU0ba]J8hC&d<S9!kQua-q9*WF7nm7?$i(;HS$Eu3bL[Yiqs7q`]a*E&Ub/n4^&'.ZF)*BX=QCsJt"Er?LD&hZn%=m1rK1%*F6S3qDJSGpJj0?bg)*55g4#Fi!b7lg+b82E&afbAfdd>+dM]8ET=LudqQqXVXss&<D-I$sdL44MYYU\^"_rV;0aYI6Y?%^"%E*Z[KOcg#Ej_=F?Shn!IO0l`0H'!R[]/YUbY*Ii&sB%]m0gPmfonh$3f=*u#VFG37Isk?sl5$r1J_qD\_M9Wlf!n(8q[>bL\+%-X;q\6">?2f&O&AQ.gPk?04TC`ZtN;LG.!9Y$F!M7G\i\Ut.^sK_1s`-G]qR"K2"JR0;=R$"u?];F(F0raN2g6l<pY4;*;Xnf,s&%:6sd``/9=s[Wnb*R$a,CgU<cWF<ljPCFmIr!.`?G%>)KWEZcV.>kZR]=De8(q1q)AjHj']oXnF[(`IG?H\T@J8,tni<Q]nQDl9WQ%"pI8)(4lO,a)fQ\T_%PNgsVMo6/<0NR4C9UN/c#I>$!WlJA[X7!,S'Z15H<FhC;rM>e]9N:cfUS/lu?]@+INV(IAZL^6G2u\I8pl%Zk\?LDdb,b$Edp&;^=Y6pelj2E[m,#/^\sW3FY;Heq1Q)$hL(F<q>&#?=2>[*KS==!-*9X.qNE9ZV0hUg8/8nn<b&FS9[eG(]rBg%R6g1e*kQ,'(ESe$Es3Vk9C\D75,coNLc,/$_LTE4T6q1[[??TGOh3pkB>2$`%t'@a$RHctY#OHf;2sq(k=]C&jg\S@;h7R!O@&Op%mh24/ln4%L?k([+FH;!r>dM'+1e6Jf:+dK'Gn58=EnPr-Dg[KK.>.(%0&sH\6dt=Q%W>Go4_D;Qfc<ogTUQ;@;t4D\(e*$7cC[mC%KR3bSatZ%1*;hr#(Hio;CWb[G]#jloHT@.L3i_Z^;'^"K-mV$ucZ,10]<BVlM\Bjd"EJaLId0JP$^NOqegWR/On*q2Qud6p-e-5R%SBG5JH(TV;m6)3_59J.>X.bWiSP3_dE`V0Gpf1*MWF-q1p=0OgegEU@)"5+Dp<`>!CSV@9J9h<OnctqMJXjL\>oG8U#\srld&b?!%B4Aop!]?<>DX=`3o;E+*_76?74`q'7E<@2In5Z[NeJ&Q.^se-*CnmM+Jp&E09!g0G?`@2$Zq[n?lW6,0R='4+10^"'mWilU79n-4%^!&)D;(T==;+Nan2JUTO/]/NOm.@3LTgK&207.5Snr:^hop8VpM#,%`m-)J[`uE^1oqLi)+pA)?(8MolpGlpKk/OD;6_"g)jMZ*T%5NMX5=W_8m1Y0k6WG!hfQ)`lVk<62Qq!Kr)(Q\#k.T$6=3^JbY6`%R4Sb,iU^Q1S^oo)$=Q5a]7^TI(MoXFYCMEf.m,TU*JqYEAu%9jVY[7d/WDTgG`C0Vbj+dItU#pF:@=.p]m\aQ$UG%XSAcs5;pD`=@6kAF`*KHPJX/Ptk(O3pq.^5>g7#c4"nF#FY7<]/uuJS&(<N%oQ]*,#/3BDqD2KFLOW+o3_W?LMh6H;h`s_niB]Wpo78PYpp<03fs[CCB!K`:kNh@u5F`/TIr=tDnT$Elf_+@6%b2p^3qL.VfH8T6%nSu9G&,1S>_sgO4;Jm<!qQQQB0q_n_!/pp``fo6`3fX[M!79F0G>AHO0EVRur7Cl\I[KCqQiApbW$_j=&fDtAO:Ur<d"!21"T1P-%Nqu(qT-UXKL`.!k10`a[gnYQsI;6+Dm-W</DFoU=6O,UM#.,e1YJ1&IL(\/BLuJCANe[K.5P5knYNXm@W."gFe'MN:;"#`Z5u.as%@0@27"n>D[^X@f;\B+7fopeEu*]/BOrI0^D![n6o6SK.6`Ln2mD+-M;CZSm5:sI'X25I_7p"`]8RK0uJ8><'?+!OPp"TolpW!Ata%"*c4bi'@ta//[l':d9\DJPa]8,VY?MAR/5's"sFD)(k2Z^dF3n%jc5BIk^?CNIl_SLBrVg0Fp.1;a=Z@%!h>MLr:u&&0LtfM_tfe%:c&^j&Ju*H0u#oKC4shm*92PhBGmZkmZhH1YR3'85[o7pck*'_$3o.Rh%O03m2cl1q!]Eb,B4>$Ph(ad'G9u!JWN*L#7/-B\6`^_%KhXDKJksiL'lgFq<f=2EL0;="FAEc1ls@KfoD/>N'Z143-e9^0o6Yju&4dcrkf:eqfL0"(&Pfj5=n$2FVBYGnBHt?Fd4bsHS_^na%WZmFUioYQ]Y(W+H@+I.BJbtfdJ9q>7&KjG)59:)b`0GqYObR#c-86/hMs:IS,8$Ua^c['q!;6/9,b,q'-=@U@:fl\%."H&s8AY0+%Y7S1Ai:Ra)/-)%l'Hd]HW_"CK':=ZE`Ogm+isdOJS3[$:^R/3oK,%186@Q.n:d9MfW<H]D9p6."O4T&p7Fd!oObQHS-8-)gMlMI]%&mrg5iB2t(&59R18H=CT9C@],g3"Y!HI4DSg>o(SB(>9qV9S[$?-+X/dB%1'1mrq@FH;#=(PbN_oKcaOP$gS.OnaK&`3E_.5/!U\%?n,Z@h$X:YLG5>b!.74%XAKP-lN$&T@0+-h7u41!lPB5."\b++W/,dHdKTeofT1bRJ7lY^RT>"eEN+arZuZ9+"G_@**(X8JT?rM?%&I-0-0R>D]"2Y>!8_R6e/Sq.u$8e0%b/dXnMac8hMoV\d>UlKQr<'2g&.d\_5^-Rc,fPR5"?_5X8qtD0bul5h-.518j4`W]P9Hl`%HmRA-%^hs(?7M]cn"3G3>YinXbYf/"g?(\b.<qtZn:1b2I96aW:/<PX'_`DsNO6o^-BY9d>1?sl2A39,EBb:#mL'1"5\Pj*d3_&<%cO\S@'PCf#1sU_#CJYnZW(DGnEmQ-lPu3J6:FL=fVs6lr>u19EqE^<.W/P!2Bt-YtBTek-W("CS.jA>iZr^0Pdc<%ZTZJ<U7P8GB%$Q"egH-dls'iBn`:FL=fVs6lr.>qkVo:X&P%$3ZW*cO@&,Q&]mdYSn)!?Vde2/%T*^p4U%EE]5*MqD"K%!tKhr&BF^7poXkrN:[3%KN9U**bZ,*#Z='QM`&&cEPStaKdr1fr\&'MRVk-'A(_H=%VGi,+5`,FSb`<Q]dR01Vh?gZ;HIJ`NX3Q,.?M?bK7HBij&_+=Q[bel%RSO>5XndLT]fp977j>o+6S7UKl\#WLV%O:,!KTT7RO_X)dKaKHR>Q)cm[^^*,WR^R<li[(*KgXB5%(OAQM,1#B?Zn$%B`CPH.2>\%JZDJ&9+2l<\``lp(Ku,pc56[T7ltBD8@_8F;c[*VofHa_C95!MnXttCVN+iY"Mpdf;)Z/]+cCe).RCr>;];W[L#@N8&"']Jr(T&l%"kEQG\XoE[#UQC=;Cf?Nr'i<MhGFWUYO#Bjeg\?k#fDT69p5(tJX-6P8'8dW$'PU74^e8qLu,X451?`ID6NE.=nU>B5X3:=@$iPE%]XL3k3HuY_l`6`)-7+mSi[EobgiUu5FP"V#F3#(I=h?5r>O0`$@nbQnm7PPQfp,lc)2C@jei1>>?ZV/coCu*l/67<bnlrYQoG&Z8%h4hp'es-h=DcJ3\cDV9Rkqd^`rFQDJ,/(C:,R`"Q)HPM2.0gCEHGEe_S5IS=OA\aJK:WUJ+RLN"=L4+<#EkC*Y[m&s(?bI!;-tqH%M\D11.,'nHdBBVC@.KmI(S]URr`M'2r'6kXgp=H@GB#5HAsJ4@6Gc_jL5W@_@h<UC`>PN7[sh_*+dtQ8/erP,#[[jdVDd<,JNb<g%B?g8SRR&#Uf+]cC<p'#.At)(&^)Z#)<D[ms2bmb$iL):dT0X][PNBJN>>#,0TAF_Dk:L=fFnr(DMuj3IY$KpD/s;g;W"(="M3,fm%#qjEt&QY$;DfQeN^sWMlKK)82;KgoTi3Mp#k%qARF\-,.jcjN9#LOAUf"'@`M<l6i\93)4d`D$QkZJ0dk>5J&?_W")XSe<k/pWs4%0h>"E^rDn8Kj<;B7/+o$A1u%-S5!kf\1VW?fh8F6E5`cd+Cr[l`:gK`3]-]^rcaoKP<Y`#-W>:uH_"$E;prs@q%):/r\$2JQkS7V%rLe[e3MUh5$?D227eObeZcg)LRK%hb.Qs7DbsEn-%%Y+9KA7PBp`4QJlD[CXEKi/!d4CIV/TL%ekj##*/CV^)-YCQW"O@C\<(e)2%Z+?s3Hsga9qL;]+S@\2YH]ZZX+'Ik_UoFBp/,t`ujVOGL,Fu^L4M]Q43I$du%aA),,KmWW=_?'?+DGEXRB,aU%'la2"N_kn%ifu4%>3d+/]eUb+jJ6!iKu%;7"J-pK3q/W6iJ1P]D^&H>UYd+Hs&ha.E3BKW5%&62mfKBq;-boE+nA^E2gauk"6Mi6d_*E0*_?'V2=$H5%.'$HK*muPS;<)c?iL<-u/>R$;arks3IC&D!DjgVVU)1Wf(G'sLg0WZ:l.e^M;dF_bm?<1chTGtK=7SP!?0YnN9i^SeAmK&[MnN^Q%4QWPWp>FL,XBAp.%Z."gS(H&i#b-#4*BIIdkiRrQ$rL.QYO$o)hEPEIZ\Vpu5[:hl!Gd%1QOF-FFm:nT91.@PaFHN"!*dJUh<Su8%+PCi)+#);1S".6lbmU/e[8!h[+>-d0kBs?`L*9i0@aU`#1*GBKLs%E5aB:GW+M'Jb21BQ/UTVi$WshO=?2?^*[Me1jCHjT8!nto?%JCG@q01riJE^J^;aFIA<D_`HSFfG)YIhpE>,Ns.h*jE*)GL`c-'mEk#]LXn^+TI!5o#\^lX0c:!+5F-J__a.l/_'5'`6,&l2Y/O'%ic?17XBAp-[N%)#%t2'(A3b7-^/^%K()dLWBOjA3+HI`E-&k+f&C(5=!E*1:lBXB@SDPUX,1RtAdZ]gnJ:u*EVDPa:Q$`MJTQl\#%-pCf%GlK=`(Oi%'5MEHPf6;?i,g5&&e8_T:#:k8LBd?@lL^_==OnclQgZOk_q[D?r#ELkpBq0BrT[,jVZ^0mI6[E21bCiGCM!F?F%W<4gOreCo<7InG//=q8R@/dKg?6hgarm@=F]tR,X"HqPD6g^2Enq#CLLtonOIbCOEX0d%tRg(=UI;YIZcRM^js%"=-,=m;YK@F&<%eF?PLZ98UH%jLZ=SMF]gpF0,!hW@+]bKnlus24SoB:=E+-,.QTq#%ojlP&6tflY#M4Hm7@4NKka4UODHK;?nR4NKkBEm$oi3ln_C%c%?^sT=&<L6MtU?`'BsH4GZGs-4a"&Y0<3B$)(_e6%&\"T(W,j^4530&=!`<.QVB%+$Br`H&r7ZgF!5eX&Ys^Z;-Z[>]'da>]81t%`9#'2TqDIp$u1l>9)V6=Gr+kK,?r0hD18<k;[@Etqjg%lH^-DtZA'TqOdD^[d"<lCOkQ`WIn/sl<(kX31\--K)I6em`Mn$]bJW$i%f.iJYdt_am1pLrdEr-#ZoY6&lUtatm<'2"GUmWTJ_)t8!NY5+O$rYt_i&&ZL6X3Z+Kh0pD`hX\=oT'[A=-pt?B<H[&84eJR>q7e7%D,un/,U`*d`#7#RCoKiFW%KSC5TuX?];f`608bE\h5LpYD^&]h=m[UUf1<ZIEc>d^l>^8S0P?k*'sE6<R&M&(=Y2k6oI1MHqTY^.%n>7>M*_C@1<?.0E#.apu_ohP>,l/3$7I#JH+2!S74C5l,k!,&cO!.=I_hJi32BaI`otai!b@+"j$KOG@hq;Z<Y4<1lRL$uI]ql:3%PQkuE`pA'V;-bStcht8*/oO=E'K-8;D*hWf8nDir8^DlGf`J]N)8biZKdROk.7t9<=Qg*nlT(g&jOEDIYCq0F7]^OKOXTXG\kqgd%q<ti2JlT3[2!8;P0k-:us.X@cN1EAWk8<__QHlE>;.L8CMG$ggYnWi;Tr%VK8#PH&k=LiR[nRZpgbWT49ccljg6C,9Iui9/!o,I%%b!,,-`Caj/4N5cpbd[s71pp*P=h[HC8%-1Ancpt?oR$prGJu(,(O"L&r[l#4"#s?E[JK&1l_B[k74JE\QgJ&2#Mi'ZJCE&7:SopG%@jl,Z6(!g:Iq\LoP/nR-?eW(k-\Q:g#e=Ss!/)*_PG].93JhEE`$UCM_5Bsn*`B[,TQ9f+oCQ3NHheSc4%0WcQOBK/S'"U0G9ueH%dg+:/b^UCg]+TBsg.M]cXUc^,NKMS5ao9BB>#M,+LthV>P$."[-]06%&u$RE2#=b'ZCQ%*@'p6`IhknEpnSk)8:uGNlcHLa>5s,\%]fpl*R/<O57CN#%Le:->$Bo*,H18c"&G_U0-O10JI),Z%=pTQ"aL53O60+/\Dgbj@XKTf$$4q='j72R7p5oCOZ9VnV+cUr4a8j[B%TMQ*o6+[Go<,#u#`TL$Z+kMe=[E5[mb/"1'+#*^t8fE@Af4/fG0QSj.,Nq,K%7hM+P=3nU=$sFmTNG"5ambU@ef0@(QdEWjU4(d<%@GO(f[[Fk@;Rp@bK$JBJBm6ke6MZ'*?R2F_(N,a7BB+N[U<U6,+tdr*^H=Z@gF(I_E(-WsWZ3BP9=YX0E7A,pGL-2;%?6$eCNHn"%?*T8:mmQ&#:=uL\'4%P5Vk9$YqFVeNL\DL'bG.Z"`cl,\XLi'C1Pq!Z;k@<.;#ISTW]fkmjGNZK8)q.'e*.*)I122`&ii0RImMr*%].Kcglu&45kI/GX"((2aYOE6E8L<piE*Z-SR#+A"6Bo4r<8j!=5LCunj7)^;\&lOQ*LTj1fXXd"g>+MKe.C.hEk=*[[t@6;:ZP.p%Z*\UeWrU&jK`B6SQH'_p>:!t3d`?]J]LKqK!DhnWm(R/cQMGG2AKJtt,$ldJGE"1^H"?LS%]r]Q0hHUcJ;5A'GD+ML,ee\QiU2H2%$$WR@*qSeUHX#&JgqA3u)\U>8Ab_]HQ+X/.OUt8;A;m=;Vq8WI0B(uW\HsWbG?#Vto(Km)ZTNF,!Gd%1Qc?1_W;[Z%hM0+"12oP$%/c[R&hFN@/A/0&uO!>5F5/:*T0<7oT=m?6n=^V!q[TI-?-[Ssb.&3N.ohA(Td;8,`Oh@Y[mB/OcBE#5nY5Y+b%N\=8J@3))X+,O6%e]gb%Mu6R'Uq?'mT)$^D1iG](*mF;-2<uc"l'YGl!n,Wqa?<Hpd;,QU]pPNL8D]"d]'J5ARK"h4(Bp81/G]J"pA1pak:Wd(lIr:P%T,`6mN(d0FauiIFOEUM#P%LDp3EC7\AX=`NP(1[N=Ig"#&akd#K([9="A9o9-Fq@j<s+prBAUZ?&37%FnjoK-OSl;s)TeT8HGT?t%:(O/44KUd<,O:[fnl&BVT:V0bPn>#okpt:1M+6biCX%?I*U;qR4K2^k,Y;09Lk`BLB9d!0cKbVu$[OrIQ`%6(IUn:5)tJLe/ai^5%oc&b%:DtXlFK_a.@E\Gi?rc/G,#N3&]2bICkSJC6<Y8@L_RQCt1-O2`&fD\VZ'0^/MaT[2$&';W284`=2MJ`\;!W5[pu+klCmk<(%SuWETkWEQdB"[]cQ9##Y=c/_9qi4>p%Y=GN7@csP&LN>rh8MgfSdXcVAiP90fC,g0jkQS+OT1U9;%Jd%=lW]Hl]+>%o[0GmWoTD)%oGbXhg/9=HM*=hap10uQ["<-O.U1#sgfs>E/fENWNt(\*3"p(fo!`'lWZ=Ja6`2alAQme"f?e`!Q)%Yij_U3H]!a#HWLGo/\Aer_%EB-o%F'aeH$$8uVn(acn'Y`UUKIj"gA=)IK,5InZ?P-9)'Y1%TGKID\?BV4Ek:U<RoV"gm@YT`;$V)M7UhfjhE/Z7e%mh7B1H^%.%JM$I<ia7nN(.GMbSj^L-lPN2`ZQ>OU6B*5A[]H7]BeGej+<hUY/eY$nl#0#HhXsgeQO[0HHEo2!e2MarpQ"unB&sh%29GUlO."Ir%*eLOUUoqLlZ^,@LqH0B^7k.I^j`YsO&KqUbFXp*>&-.q!de-dhN>j(pj"?r@4Q&<Mh1t`2;AXoum/Z#X=X6?'\m3se6$+[ao>nah%ko[,ff2j8R3<Y>9'O(@oojXLO`:t%%p>aRW5>GT:bC&K8f'Kjk,IVLC3fs3GjP?Uk]HqF4K=r?\B:J]9W+h/(SA]K9MRGcP^,/tD%D$%USAZ:@kgG7>3Ip48&X&#K8-'BST/-SgC^)SC$8Ric2jN;8<4QuJ>F7r2\=isi.mpfA7[f.9MdkbS,g:7oN!-"\9V:U*VXPus&%$JJ5>_WJrd&f7p(rThh=?Cf5/6g6T)ks;chQtr<m5bh/bV.2R@hkRmqDORr(X4d];!QO?O00/c*2pb<Y.Wq^<5",_81j['K;GRok%=6t1ZDgSDBGS&p<k.a>Q+f=rc!7KK>cq2gUN:\8#6\eQ/=iXO_4n3pYoZHf##0)035EW#p_Ca.4l#_k\^U&,HDE5teI<o;^"6R?e%,[4-e91fqi\j#Tr>Fl=#1HpL/8$s[=!H1jGOn8KA/hKk1/V:d%6_0c5LM(8.A@eN-HfdPNW3+n`K7T;I<2IVP\=h6@[Cnaacsb)2%(,49YPb]C"kJ9Mf*J,`S?gkQ%,UK]*jJ5\DQ4njY#>'ofM]c-j$is%gc.hgg/XjK8Xk(BmMr'g$6#K$I;*-lS6e5u<3aG6nY"l?\%:)aYW$bL64-5@go=9K#\5n`8llLuLt`OAL$0_`65AL/V;X*WXPQd[KXOut,1dmSs$U#bm4/[%Pm.$m!Rg4\ZW>U1$0`Y!0!qgk#D%-$5>4mZ5i$:CkZt^mo7R%]GoB=L@LDTG'=7Utie:84l&e5)aTtb[<Y&#r;?<"[(\7MaYpheTEKFIBcV1>Wir@)P_NXb]Mgb4nIQ>%'e.\4\ngsER0^UL.PtS*1r?W$G$1_0f6>A5*B$L,lY@0`g:b>fklPUHk!+df$E?6=dWaQVXR5[<*ZIbmj8O6dnqpaPC+TR3PZ[Kq%KX?<;#@Y]-_+(,Z3H:-kOSInp!g7om#@J<4b\6Y\Q@F'(o#SZ1=)D*H^8S5A-SO^n5N[W(5I07?>t)/FiI#Zb,tB-ha5@DZTN]G!%Gr(8ZQc:6T=#+jCg0Pj)GF9d$6FD)d+JBcn]ca>qo<Ci6KbhY8Af4N<FJ7oj6GrRc"88,rlE++Ui1Jr-kLoB;PPI:2f#l_sX!aAF%LsAl;f17D36u#-1$PuEaE]M??Oh]>-/?ljT83lo8n7jj*M/R71m'CJo>OK6pUttN"AqX4bia2X<+t+&N-2f856IuS`_2?ZO>tYY!%:_CfaM8^\YMXon\:@p")hLsFWdsDcaF)?$B*M>ItI>4Cmj5.h/W07f+>j;A$T<_eGdAD`pn.@Ad9'fNHa:LkP/[>E7'RIr<_SP,[%dn0g]2$FjmpFukR9R"gRNHQd^jQuId0qKV!KkQ\BJ'sTnUJcu#YrREJEAbK3oG<,:7.TGX>9n51R*[[$&??Vqa5D#E[bQ?J&cNTm%19#I5OE0SW=0]T5[Cs:Io,)!QES5L!Ul!AL7"L"<Kqf)7,EaZt-HV"cF#cf!kY<ag49;o$EQ+LCgjeWlAf5.XShP"Go>m+-l(q9s%?-fPtKdroRO+MM+)E_Yr8rYY!73[H@H)2q<HtMtq/mO8+@B,k;Fd5tn\YC]%5?qWg$&lV)G$[<WHI&X.!N"O$0oU([jX*TRhc9j@%UW#!KZqa6aXp&[joNML&M;N8bUJ:$H9O>E`)U=0FE`X_&SCOF0#e6s&;.BNE=ie#Q=#mHsG`X2f+d5#BYJ&B=fP(bs41aUXNM_@^%WC%M6bXOH6_"o\@.#UhjWnCG9lY@KNUe6OaI1:TKD?"H,49cV#giNKIU'^f8L7.Wd8,nX3^3#^eZCnJjCb*cO$Q'T0oR_.SZ4")-%\c44T2pS3p%U7NXqCWfrU<9bb(!or^,jO[XE$bZ=0%\&!@?EMQi<#<lm\^Dke/%:`Bts,L8_<:X#HV(#_"ofi\cVP<BRg!'L:;>k%e_[!@$Glmme)4ZY(ddJ=mV<5.Q."-qWOsY&AjOlPW688AF`mS`q5Yf;O^nLmr(3ZH:=*-:,`GLS+Ep'f5GV;'SH`t>f>jV48iSVE%e4/Z*F<9UipZ]N-&%Jsn+iURCdl4M4`%\lN,+X&VOH%g\-a0PekgKIt\62O4*KT1+k>=F+9`%lqY%#u!&SGrK?E$1^2:=t6\PWn*%IDB,-jcr;;[1,S"A*m`QGq1d^=WKP7TYH*p\2=kXWdjiOhBNQ7KkW`=N;Y#E(?[fK@]a0g?V*O-b2.QXibj,257pn97Tr$[TuMp,%9<W4'!hOgO+\uFRO]WN7.qW(D>4`,8!@FJ-l!#>DUM]8HC61D6l3_@p\SItg.YP1m%j`)'Eu,K+Nn-%`Q5-g=I>an:?0!$R1[K("%q51M_d37N*R<PF/8FN.^2Cd`gL_33Gdm!(.HYQ?`57eD%XLF\q=EJlSX1kZ43%0PL=>WU'I<a0WEaB3migK7L'Z\QSUO_gGqfG8)%pY<1&>UY`O8*As16dNiuX)kETEVccGIbKr-ODarpX=,%S6!IX"rB.gD6$D&?E"q=elac4T_s0MJh5;bL^ZWm+E=-@uVZ!?9eqm)g%,!qlsP=kW$*Z@fZc;5IVhaJVV5b-8@3?u3)eCh!7Q!tb'9TY9$>k7[8IC^d$4lH<D6ohD:0NlYDVHN!-aX(''?TiR0GcN8(3968k%#?DBYb9#3J5"1[9_>L]C<f*76lae(!3=QG2)g19'pY:7VLibar4ShpL"iTQj@ioedP.6U!j:rSsO]P7Ll!M!nEZ\4Q'RXqE`k\_)%k6n?Xn!1i%;%G($^n$Z^*J$&Q+Lho)2i'T[e0To6CXs:MKZdKsPa3B'I:Y7s=LN/1UD-e8.QY;N>`jR5,)MliesTYDk7bKpd1l@g%GWUaPf<D[ggbB*r?VE/K9Jmp2B_`U7LKR\l[XG@u6$BH\lTY&!d*@7S)?k6p&CuWFJ!Bp3jVn??=5A,>[(*<*.lY6+c:0,-`&j6p%g1q^;fiEp'bCj[2+)jIeoU2CBA"L(FP6Wd0>(@.AM+0!VH%p<iq(%/?T.\X%AIb"L+AK5Df?Akr@h/WX"D"GbcIoLN@JOiHQ1aLW%Se:>=el.+XFfAW`T=2DKV1mL`dedOoUW%5JLdi4OYZqrBGEWqdSP5U.erPPkF^d\u1ZE4/^-\X%+AE`RYhU,($.Rb+a:!"^O`eLJ%4a/e&BR^q$]X'.`=rT'#j\p=DiAPs"6>,rE&7UQ3IBI?;7\ZKV@6'`V(t3KB.t/FiC.<9:=V"hc_#:`uW7pP&&G@n'W%Tmhbtpq[%,s'5j,XttAeT/AlT'M$&K6(3AObjWP^T;nr!4<R&U=88F]29)HHbfT!*Mm0-bftd[FP7/kCB;:p2QG6.:".!'*[?NFQ3T'CIppl1%f"/T[48\Fa^[m!QDab)Ur%W+XhncUj*rG@5b%t4e^A@5MP:$UA>FU-g89%Ph,ep8W@Bij7a$\]E&DNmQD'N]H`sLAY6h>h#raY]V%GLub`#MbC0;j>HaGT-:JiAufNN^@e^3NeGHl>u'$&GJ:XUcfPY0U]$<fa#*YqfE-dh(6DS\iG&LJJ8;`<2dec#a14;KmmDmKo$VH%[7;T11'lk(J*2ldAMX7h"J%;D=Giq*1QQ_O)kH_iDYrjjXn%!()nft`S>e-%'MHd`j^ZpP@GXS`%1Q^D9Jl+^C/@Oo#jF%7A3)[7%!c35O=ML=7#B?q0&.L2OqA;agE-?@c:RPN+dD@Y1k<_CsUm0f3H_\;7gQjo?^#1W-8@$G?(f]c;O=gQ5WCWX36=@UW.tr&.hAG!s%B7>Nd0$sI'#6;>QGbL,=;3QiT69oS`\8(<t31krbd`jiCR>4JmD0dFC)t$4L/I[@?#dVb+N&iaKG4:`OB+m7Y2igV@]Fe8I[?7l*%r'pPC7!^:@_K,'3lO'oa\c;Y?H,"#5c?c58JG_mSLSbW;gJ#s.=2aUI0-ni&qI48FmQWLtE?Xlq)4(H?B77c"0Cb_$=#QdFjQ>R\%PBr@XI)a1W+=R(ESfNkYRfj[-_Hs.dea<>:pEKrgM=BWWB<[-E(q!U47\#Q98Fb?nDmjIN4)&h,!FB7mMn;m4eM$UspEKt=c]G:$%"6[!G:hA1A,BJE98dk<7d[uhn6?'SeWFkdkl\Itq^Nq!e7oqe'4`eoNo`(r?$l!`PAe2R''?g<YNtK?,7D:?Va!<MuR[&f@2A^RT%ds"$cgeUB7O+^+nGhc@A8]UBVZ8*$Ub(Lc93_Y3hh2t""7J@/*$3,8El&Dl`\7=K9)7!?Ji-73dcmp1_bsp:qY-\,?j2)c"\grVY%TAK@sLAQPQ/h,-$0(+SFl_h8U?XLt)(Lu3?a3V9WYW7s^Z;E&]r>:C\aPbXZME%&b]Tpc<M9mg"`LCbWH_VY'p4,4D]bMh=RaK4%%aFrcmat9Er+jclK#Igl`#Do>PCF2Iqmq<GL]YgVLk$&A++#/gGgQ8]ff:Lf4l+p'5T>>(\UKBsnV_Dh1oOWTT:]Mi$)%^m'F_;(f%c)p]`O,1h&S,imDPRggK<2>Qe'TkgQQo_[-6t]?W)I*Tm\et8INAnM#aONH=!V\sQJM`<n;k0o<FhtYd4dK!5[:+d"0&Y(`QbA"/%Y0KHH\Gsj1,IQ]so&Z2Dgfk<]h`8#(!k,agOS1f.kMErC$MuF`8oO3>3_SdpL6ZKM4:#sf`S_*.;23h'@]ilfl-.$EA)*<!-iJ8S%l6%ic]TIGLi3CF/``ekGVJ\LS],lUEr^i4T]+a!&\N?d\0;e`r$Ip?2ZrD0sIok]Lci%JhL%!r"59jg(o,`,f_ZSKPqTu7!U-O<<%.,LGdn.[q0gOu.b'ZFA3<t_DN>k`ZmrF]E%/!3=3/jQaUc2-Fd^3WA,;g,HK?TEhDoW;@Ql;#qmn!g9D,Zg*i"l[&bHgX+^k^VK@%g!sO1!Gd%1=1*+9eO=WJ1p^*dY$2tTrU=gXFIg%o%8*+KEV5t@>,5BAb8/=)p@f)"ZTb7X2UV**`gS]Ukj=bc)MHh1#d1j;%>m+C%Q_Wk@n=KIEUks[F!j@%>njWRi=)\'CXR5[dRekn&FR9KQM#13Ljlh#2pji7f\hPl70=tg$4CHG1j:LK@1O_X@A.^--\PPL_=1C8[%,q=Q.:&j>=HKOgLqp-I4d=Bn-4Q$6UH[StlF-kEOF6s^L:Cs[A5)*bq\VW+7MKTuePrk_O&pXW=!nDYKQKrLd0jnjmGpTd=o-=ob%P12.g0PR(>L)[M2$<eNj2o5;/$fM0;He.oeY%m,HWgiFf9Dk?7n.d#3\XUm^)[kWBe6CM$o5OTLG?B2*PsOu`6FcT`&%J+er-E-@%JoK]64_oCm=1*+9eP1>VFgP'YSsqr"FlK3>47d!*W=qFJkkgZmj_^bN3m,StZ(b8;VXR(9&VLBm5@Db4MEKorkbf8!#4G#<8u4L)%On+V3((!P9\q#m-Ps>eA:'CfG\#u%S?9rh=rWDRQMhq'WRB?keBGm<!&VLBo5@A?2Y>15o1XXc%YA_X8'`-ase\*rmn^W&cXWSW#%k6GF=7N%E2l83.)AE>[AU^O;/%%`CWJ@i7XBpP=D%':?2BLIO>_5/fJ<qY8R&%$f$Re95]7@KX(**6p!Lj0shU(Bhs+7;9Dc9iu"%=:Yai?Xi"'@;^ui[u#).nnT\OJtu"rBC?qO**i5ec^fKeWJ?>0i:BbTHjo/$dZ"_?4S%c;0ium,5r4YM-7>'b.I%c+,[l_/%KOi-%V74,WFks)]pRalr<=Y#kk8NUSJ@2r%Rs('u.,tYVCL/SAmlGc5Mk#Cgh5p1DZnF.VLW0Mt?>+M]!hI3>R\<9QnK98;g)R7P&K;H/%@($DJ?X*rj20e*]CXtGZ),6cbN_=[*JpNtMHX\K$(_d"Z:mm0G3dO01+P8Q9EFoN/k2nKmBe`XH^.:j<X7sNSIJF$)$<KCKY)SGe%rBTUs*$g]nY;+.LY;Ebl^.@==$qbkhg$<WudfL/f>mX_FO9gTlcm]1dhT;G<'b8qRs&h/[LD8tW!E$FC\B^Sa=*h[9?=3TLFbb6g%YN(<r.61kW5qF:kPG!#.:.*9"aiMMb'LA5$Y[It3NPm7NhaY*1\QF\Lp(E)NH)Yb\n]8Q,.d]7&\gZCM-ki.gqLm`j1!S<:a=Zo`%MR&2QTF@!A^n"BmD0*o!B+`NJZ`dtj<,T6sQYVK$"4m2B&e?2W,Yg=Q@iu)1:3"c5[<gJP-BM#lQgf&cPF@Y<UEUYYFs)A:`h@]3%Gs-4M-tpq3gMCA"];@lJ:Q,Mj`NCujoPTc]D%b\D>Z+*.S0UG)R41Y=M]Ak@0WiCq2!l@ILL:aKCg?LC03s^+#Mf>u5+j24/Br0K%A;FiaK9HF*?,t3t^-1cqk@]P*8i*Q[\94d]c(gCFSd3O_bg;M9?#LH$$+`rc@aU-L!,A]46(-orr?03]dA8H'gYCB:j`'UtrrIQD%1,H!D@-?.7_4Wn`)Hg2k?M]:fjeVpXg]NaNHl!9en%F'eFS&!Wp=r@b9jp<6*\pY-RLeWZ"L2NTYE-,W8\+onfai:A#^hXiKm>rc%C>jHW0U"+oD4_&0gF3Dha44n@aNFpB^n'ch'r56'"4b51>qI5Y0-`uSd4o>@HRJ@i_K/NpY\&=U.HZb2egKKPg5SYGJrt>LZ:Z0K%+/+Y+*\XrCH/!.tFG;tYRc'@Rp'S[sEBW7ZZ\VXlRDGB>`j8O/+C#._ce;]t*48bsN3jWrrtr$kW2A*Y1)%Cs(c&jhp]TRHnK2`M%=kDe.j:R(2T^5gf^;buG82nk\)5_l_b,mEBKPgt!J@+UTbK:s<aP83MO%]7uqp-It?5nYB>go)^YdW/-eN7tXh6bd?903=9nHfZm%pU#QmD-j#,>iVS#YVp@:Q,q<Yf>*qCnh)NRnpV["2g)?pB#a3n9pR+C/jZuWb+?#S4sm&I6gmJ%2\aG)1gXsW'$->/Mchst9&^P<%a"MhUh6[bq,**jO#A)68Zk9dNI+M[`=W&J$R6(T2nI-LY2g+VJKRmnIf)sUdqJLWB/utK8g1tE#+?U-4Vc#M$#^LQ$S$if=Sd5j`%jaaft0]SFXE#k0+CY%+P]Q`Uk;'t,qKUiNgUfGHs)nf.093-I8WL[nMPGD_T.B/+<Xa"P)>Ro5Sqp-I4&P72+14-gj?Jd%oCWPcZ%ju$]K/s>XDR.f<bf!Tc88pAN`Hbc*C8Z<!H"t>ftHF:J-C#@<ba@+g]Q1QaY?A6gUma@Esc_,Pn+'aS3bLp(TbrXXVFOOH@rTk2L%doF!4VVJoXb/f/Q/XBpo&6C':(js/d/Sigf\.T\3Q8Cc7IH0ZMAs8t1Znp0s?5VLV>FhA6QFdIM?Pj%*UpUH?m0-frc<XI0]lf\;%46tgHQ+#IB&)r:cn4eO^^tWrSDP-_7DK!BI87!/>Vm!JhDF4!]`GnJd(Ok'.[MO294EjraeCS#$3sFU5Po9fJ,k.12G*Lr_l4SCn%a&HB(@2l#(R:;7Z](L%;$3`OILcP=kID0]I%sT0(e9;<^hFYirc-t^^1D#GSQmq-X73\qHY9k>9jYR`Ed7'1%_,/+7,k3!a<kOaV%9maLBV$Ge`d=uTgc)Yrj4Fpik1Cr]4.jsBspU=e;jjcr[)`ho=HCR>[ohr]S^D'Lm+H\bnUS)3nVif?7LZDFWPWTo$g6AHu`'Ri9%M,Om*?g.T82Tdh>Yf;"9IE<UP$,Ug]p:RfK65eVs4]4r"/YY_s+k(_HjDn9rd:3a<,nh>Af-!X.XEg?35;$@cN5Ocj\J+QeBB]G@%2TkMVl@iHG@HPIjcqZTFI^?<fOX+\$"n,AQh2t:lpK@Y.VUn9@RWRq+7)9tEnQ$#WSLIq&J==Y)H,*])A_bKJ2*O*ML(6qKO&fq:%22QDq3S0hSo0*qgo18*ndj!+':*d*0)0R+a7j@fXpR2`;)#>*]!fZ)_V,/=Lhc(Hohe7gl5.AmGPZ";^eD6&5jc_gbc:0mJJ+DeC%Zh_'<`b+L&"s(nu,Vu9l'u=Y!#>((=%p?@pNV[p.H!M@`0$N2WXe.@c<C9r@S19.?a\42)>3a;2$Ln816.&j_Sf.NM+;:<"]+YL_%mf&e:$`r4skVk!3S]6ZT77_!5K=phC<ujiq+rmUNgLpnc(^ruSX!"dg@)t6n%5^]EN)<j>]TP5XiIUn;\?jT.eWMP_/Qqu*7FULb%RVQd-Jr7(VFF2-6N5'9S]u%_S52mdNFUY,P94bR'RuYl5%5cjXE,m,e#Mb$36WoIm=t*sIokrij$!g'H'c,Np4r,P4n@k,JTkr?o%83m%s`L9hA&I)st[CT8=Qkfi]b%8E:2<h5G9eJj4J33YP%+OL'(HQUa!usQMTK6.%Gn\9`l@,SM,l'`/ApXpHOpeKXi3&P,b?+15%.Q?9$pU<E5ASh(Q=^W#,RlXgY#I7GsDC0(Q&5,U"8QZbn(5Z:GHA>+,PkbR@/+X)eP<cdDE$<dqpYTDAK)U#Ak\\l9$H"b_]?8s4%Xs,CRbh=Z3@r_'RFRZ,okGfgDrh5&3UkD`Ua.SNKY)G!`?";71hW-^di'D<^Ad3HfoaB'qWn,WOkpB8A%Ts[R4UiU%&6sBtc^P*d%nh<N!R8-X=LieuZVT)/JaE_!Vl<='pOh@YR9Km!nkPhfD?ITtk#1burD(kBVaCY_D=q50NrDh6REZ+c[gjdnoGu8\I)l`^b2[_2&%`ICQDg9NU[j=!:AA\4A"dB*IIMr[U[@<*7&#MaeEd>O_dhoO[[]^5l/1s]H.=7u5O:\t:RZ@iGVHbkGVD-dp@pgt.'i,)YS/!6O>%Y5)@UjAeW?EgjltG>eg_W&jP[9n'n4?JqZEbn/I6+O1PpX0TY(1l#<'VNlC'G3GF\r.)7f-*B(ZqRXhl,'d+1R%2`HbM?.70?Qn7%A#CF<2A^Vg4Ejq6e^jmdm1b5s)Y10haG5m:;jiGR.H/tgEDrEu.Z_nT_Ce-anALnW$`r5gb@HQ2cHWBHWP*dqR`&l/q0DRQY<+j;%Eg>c:1PaS)LWO*;+)q8YbLje'dLt0mmK^Dl"^\2D$t3FW*XnaW.P44EF81:_cal)S8kWEa`?4S]JbnfY:)Lo-bkfW=.YF=&UA<-(%)gE0b61Un[,l,[CT)6hXH=J:,Zd0`_2A^To'6dm@'\H_j4!ijlLGp`+0CUdUeVaJshsg4B]M3>(8n>`m9-'*_nYQ@B\a88WmNtta%AL:Zi-%"MB!\^"_OO[?\))?\S-=$96!I*"\G\&4,Lgn]bE[G[)if8%t<l,u)AL2`dE6m@Yl>I"@>r1mjn?s/.:W7AkeQ$lXd*bZL%G`6()ohc?J)M)Fph-I@KrXQ%FdO/NN=5N]baTEn3n7I6(9Qm3aY/ct>U,(kTj>9f4^gf55\bZpCaZEkHAIKZ"s&hanN._F24Q('0%n=k.9@9qEM+nV*j_IF#sE;s&WkEV2!i/%]O[D4u?P;uVd9.?8\_+LWM0N&c^Fg-6"Mr^Fon6!R5gj^*e)dae9nAGFcjoVa#KH[G/%!o%I)V^+CeYfnstYqXp-s'aZ=)K`=G852&tXt_?.lpQ!tMEPl00SU>,W+iWh_V9%_@f/"X?/k2J.*M.mPJ"790)p7DrFZbVa@p-2%J%b#^0CTnI^'j6B1VX=r?"Urb&0Glk=Vp6qAg4i0`L]!rCu<#1Rb2q)dFq#tH6VC^6gSnD]?A?iGa4ZcRDUWJT1/@k7_%BpQF4-5%Rt\A1l"2+43nbqbT.-S;;-qQ3=dqs3S_sHM5ZCYZ;UCir\/87,n='c_liIiIhCL@/#Q<hQJXqEniD`^PEVbb=3**N6H_#^VnuBRK%AI9Mus&ha..\*dP9^I&Z$bTH`(rEl8hAAS/=5i3qKb(]nXGc\I_C<+0lTK/%R(n3r:^g#3YkkBacb>>e&&%HL?s(9$87%Q@q+Tb=%qp-I4;rX$IhY!JL]tg]6\I7`#_"O5N.1)>$]Q6"53qnR(b*-e\M*5e+:>F(`?%LgjqOQ]<-fHn<>OJ@,IcF!6(So^T[MO0WVfuS*%+RWP!mlUoS6/6K>mDKr>U:;>bT!rD]DP-a-^i%"E87)*):4p(<DQ;YShF)?LMEPm!JN),#(Y2<3m5;:M&fuZRX7iZ:]h_4ARPr]8%T"<TlPSkgndp"n24HSP'D\cHhYtT1+.G/(.4R4q$`ek,8p$nZ3[/VL0EKH-F7n`7LK9bqn__(?7^Pj2Ga\!6XS9Vj(?Jm-VD$]DF%/iNq4/h>m9L(CfoX@r.3.oAEJiW3s5.%Ltqg!.<EXNs#7'Q-ZCVD-6H/7BDAYHecnA,(TOcQ[[H,<Tr)!H3%1<uYQRl__>g>1tD3%T/!u]W-\Q-!Nt9Y3#*7"f^h"LM(=\hE\E+N(<*<]-^QE4^thEDYKV[C^#&@h(O42[hIUiQWnq=ddS.1+lTKI@Q$?je>jh9V\*6N?%54]fThLoI%]JC3RpNk0A7-\\_S>n5O^ZB;cn=k3rZF[$=]q0BS_IX2Z%EmbX_1CP_jMX)::i0N&SLiPTd#<po=%kjWGH+i@f#]%'%rO:*Z<u7O^o0*pldL=k,/9+Z%eG^KblMB=3Pk?8L7#:n<WTY#k(ETY7B;mZHJ?(AG7oGLq?iAbTP!7GB0,]+T'\6h*+)kkfo?5X!%m3_PW<+aD4m4h832?!7SMHOJ`3m[cBhkuhMg"*lQ(G:R'RgZ@QFCrQ2:":\(;R'&Io7f51`b*Qp[qKMo;u>(YO&0_(l74)?"2F"\%D][R'JG6=aR3k'6FFK5^_Ni+j[)j4Xhd7HcIQIl4\=,)k'KVsF=p[Jc8JLFDUaScsb=i=s`$kqXlal9)54c7lg*1T+o8se&d2:S>%e9-t^E\+8+=Qcj,GlAO/8U?05dKg[Wd<.0jQ2);uBcUP;o!K=B)SKi3QQgpp?2LFIbb-L?FFA`37;Jf,L*YJfpEfa;.o`h;blX^F%LGW/#l/A'aLSV@`Ao>gor'2E`UT`"Z[!]lp,a[A^mT[doOts;;$3]S$ad;cIU$i;9EcUn\I%MV?F(_+4C--PMO#$^Go'<@'2G.jf%e8\(oYH#kZV'Z0,!D8X!MKC2/M1B+DkOd/#)rpS\A>3WE7\_K#GG?c"ZKJBMY#01m=d"sE=lPWlO6Gqn>O`^n=&`kVqH2Sk_K75]%QHkl05eYHLW'S;q/./r/N2[3X/>'a#DRsOJhXR>=4GO202\/*3M1,m&jWYHn_"?H_/b@l!)J[X57Q``J%m%)^OCfrOm)pt^=$10>%qH2T=261UkVrq.,dU!C-ML$&6(OV`C"$)Jhh$t-g+MhJr`+$Y_@fIZdJk3#?SD;B%Hj=N3S5!H>oc:C]M<@)kqK;0s>.T1n@p>E:%U^Z\K"!!l<S/Dc-hl4M,bOc9IW]\SkO[@BN_5oL^DdL@2bUrSH!OQENKahdf.p-';.nEZuDDe$WSMiFJs6mU]"\*eLlOMOAk@85U%H8?IF>-#er5Z24WQ"qqOCRL]HaE5r^&N:u?pEuJon8'r+8Q3:Sf^*#LZ))!XnBm7FU00\5TE\c#B@_(bfnL';m#Z*lE([tPo!c87%@/86YDG[8idn)sn:EauZp=7J5dJ9DVN@k*&-V@=dMcs;0i:%;^6'P)fA^j'Nb5BD3Q$rU<=F9d3s#]u4^U-[@M,ndQlZh:Q9HA<c%Fja=E,mfVSnpiY,Cc]2)'3_AUd#L(XOZ,1P;Wn/XO`r/>,f0+XE_Y_D"*kE6-IZb'CDu:rKho#Hf*HdC,Ygr+2S/"QNRB^c=r0uH%b<n1D>a"T$+qJq)_"M?`]1doT<&Hm](Q^!;,.eah&j#1?VBn7G3f&]IIeTP_;6QR>_C*#Cot/'EhH5\WUKd/&'P%2Mca8Hic_XSE%D<5Kq5<b0"S*K`EZE"qVlqMA[OlX14S;TeDF7oH@r\,U]50gi`6-tq1C:JP:Xp<aid944XYW4bOs649e$U[s`DjYV</TB&5=Q!p2%bpb_IL?3)j)>PBi0LR03o*#hlLaH;E\h!RR7Ja\g_9;IunRSFu)U^W;b+Ko\P_V=dh)nHa"7BuIHqU24Z+S%1c[)_/o_0c02E=Pg%XGJ#5@u4XD5Q>f%-:B1V+akEa?KXd`:03`!AMUs%a:K7RE(>c7mA1'k?!`LC?ljs?_r4GT<>n2J8m"1$ku2UT60q_rb7fmS1-oKI%s-,OH&lJH);h.)*$arri36-=\02(KM$'QhGEonVVdZQ&5"Fu:U#nLipdQ?DcV\FMbf9SMQ*7Du\.&Ln4frqOk;Bg,s45694,.C!!%Q,E82,`I=5_P,[C'NnLtfd(X7G^N7p1&VC9Wn3t'T*)c:Y"d>s<A"Z??h>N@UB2*oW(.5.f3*1NKg"m7J\'X-2R5A-Q4\\D%S;?W%G3bGCK&db\&-O`-G\p9HbOO;-f1,"kM^coW8t#Xo!^Z3C#Es^o.?Y6%H@WY2%<.H]]E`^C;)g[]$`#a@l>khVgtAX-;kmGk!%=]9%'#XMtrgrk&h&CVjqF*'K45'JSdLGaXF95C7\,H]D$Plhgbm6rf=ZEhk\'*ZRVW2gG.^niTMf(/^B$^F"(aD$U!Yj-Wou#Zn;h8Pa%q@fKVku:D^hT#[J-Doafcbn;"B3A7[#,VDfd/l79OI0_eM11;"5??"nJ]W$A_WB?:dUcD9E:3'"8<0&'WBS*G.4'nn,mTKKHGH!R%lC7(iAB'N5$5c/]eqGa"FePk^]bJR2Guk+$>[G[Hqp-H9D0:`&<>n/9eL(Z):h\20?D*f*h2th$fT.I,Ihu/-hoV*#q.kE.r%WkR%-1OR$]=aRqpRcGDXu%asG]`,?29Tc5.^9B)1@!KhaAGF%j<+tlM+!Z*mM$Ig4/LkU\[K_3#0iY68#P5!Z*osB;`T%Vh%\IA5s'eY%J\\jkK'7gf'19cQe_Jtq$g"+1@j4CYd-,/i\>8%\RTn>o:P,9s*_PTDp:(_]?rrV7*>A#b5.CA5KA]bgA+tMj4nG:3o;:m%V_5H[%c/i6rkR8n;N@416"n6['5>0Z*OVEA#qZ!6I^3]k="7AD>^:Yn@oI8!ID\bl=KS*'B[p-91M-;tahDqVfGd\YK=<t)-*kMdmm^`?K%U,PN%:9D(gD(kCQFRHHG.B^@5Fpc*=#j&==WOLBCQq=/,kl-%m=Go*kMcPPOkR9Xkg1!]pFmHUN\HLm=S.BkN_"e0%aG,qq_rNo,%+CLaOe8o?@[0`#qV(X?aPB%;J8L!IbC6`?@SWpcc&fsU=JG[Y:WoL^_f2JliY\]XO4PKB-DgR$l\*]^r\T4Xh`t28tQ7JdOA"[Z&%@gN$*ifo*$(I$dVZS'Oga<_.Rp3aY[$`rsC&CB9GlU9+g?WlBhFd3$ZYUZsIZ8+s'13X)B!t?>ks&hbAHfG`l97-)PgC(Z/Ssug!%l>*T$I=`:WHt[Jk9WbBn#:WAmUpcPu'"J/(;P&6lVNnY()<u!28MB.&.ol>@+W6G2CU4KX[tZi[1cu'6!I%HKO#?$Z[f[9kb9[F\%mbG*+QUc@dn[^]36KseqOG%u'WQ;L23D@Uc>Y1H+nDM1hgeA`--#s=/V*"Fa/K8^,b'2riPLZ5b,''S$>ju^Ugf2)@46$p*:NPrL%gC(Z/SXZEmWb\f5ST8\#_idRfP/gltOgY<DoFG\q&tY>l^9eG8`OY/k+9JY`EtqHmXd^)XBqY=BV1hoaCs)$<o$0S3^u:m^cQ\P$%\LQ6S`0a`oPCuSOmWmOpUj,\&.8nW#5)-.ZriV#JJOWp"ILMWO8XtBOJ\sYFT65(T6nUd8FQ]5S$Uh+MS-3"cn&,"GR:b<\[In3S%BqDB,%#TtaSUtg3_`dad7J+_n\<Q0J\%TSXijm7tVS;bMg*m=E3kX4G;M?Gal]\jKW_tREeWn3%$((5<o/?Q'/!0jP9+eI%&mf@1%(p-5i^P/!peEp:\N+9BUiL[Xfe6c>bQhK5+[MO294Ejp[oi:"APq)'03>,C+T-1!=+RZe0Nl3FuiR4<EhNfC+1D4njHSal0MH<8V%]("[M]*Zuj\&K^!QgWZ#[MO2=4#^$mPh0573sFSoLK`=(8:7X!Sr4Ngs3>Boh.N>+`+fpq"Q<4K%sYFrn^Xc(;:93cD%Pt+Fn;RG%'Ll>mN46<i7IhoQ0g5=$!V`3ToHkgAd[^nngC(Y^\IDtQA*&Hlhdn(1#9Z4grj+6&RuE"nHTpB4!d+SnHNAK=fr`T%)aO0I=5I9o%.j\Vd]Lkah%mYNXrFZ_U8P(nlkE`Tj^oQb2$gX\*p6s\a#nK9X\DIBL`l33:EH8)*/T9*5>_rjmG'3^6P#i6nks:+9\=77.78C_!%4a4!Pj^$p%L8_9&E^SpVEY?iR&0GjMXi-^!KN!/6H(.jop6kC7lR&\pafD5UF<SRSF&N7WM)RFpkE`Tj^oQ2"Ms@1Pp0-/rL`BY"%Z-&8m&#sQ>KHMi5Wf>/O$\(RtX!g?,hqA@&lJ1uCJNU7(\X-KqHE=29Qcl6Z/.qIP-J?8IPJ".43VWU6QM\uPH4t5f.F1.qH\)2*%@MlD^7R@NO^WK10i517rmQ^$o]SSTCPinXI(0EQPZ%Z(bT]>P?/!oe.Jc9^HkRJG$$&de;]I=(%3o"fV=[Xp%7.TTf4`>[u=1rYg%eP1>V[BrjD/p)?I;"p'd!Nf\h,a(rGmWk:N`0JDo\C]B+7IhcQOb4#_m^\fPrIp5%52Ed4D(kCQGj_lKLAVLK^WK./i517rm\V6!%_F>fCo%`gp*Jp8J\7=<pX:0u17`#<>pY8K9rZWeRSB>orgKrf<n_@\u;dXl7m?E8/*pQsZEu^HE?!/rnN1bZq&PNZ1V\GQ*QgZ2_%96i_Zbl[K<(O55_f@8#g&re5EH%]Ao9ad!s#n>0\GtK$0Bo>OYG=]?nr(#i.+;*]%_T0#pE(46C>h;HSgtCohdR/rl]VC8TR%f!6%SPuB$G^9+!1OeRu9RkJ%o(h-/LmSBpUXCf!q"RM^%quGUQEJP&^Ssa\U=\g]RNohDNUF>mUPu:rPK%f(lG"Ii?_]1l?,9%Z-D\l'%eBJ=WTj-D)IWY]a(:6\6\$&MS;Z3C(CT_e#DXrT8V)nBth:[6;7h<=Z^n#m/q0[q8]A%GAGS&FGbW;*+&=2s@F@[)/3#o,j^Tt.d%16lY=YT"9uW8_>8=pI,r]]J@n%X[>&K*HQp\'H5Zfi)6^d,FB!5fu`^l75Q^;X/#Ja;tSGKW"6;j/)OEOQT;cQE1JRIINf&a"BU7%r`eq'374SO"q$eI\3X?Z87+k9Qq@1d?;$J,]r#F1MP!M(jtAI/Z>Sf>\.Ni._cYcZ'U_^E%*T(i?D&3"<pp'5[[FjNKWLrH;dJ!%%3^(q=?\5#f%j\D,)CH8jJUEi/=Yfh?lK<o9[$8!^ks^bISgORN@tlQlDqE\_>rH9;S8F"a!0n=hVUiER+R''Z$U%L4,R4e-0JSjG%U%=q51]`[bPD]YP&*3E,^atWc%iiT_f>jR`Qs6(%\GLgRDjd.-AJH_L&cIY9e55?/PGPnR17dVQ@@B5Mb6LV=1,8X['^^aQ#T]1u%oTNAV?7<[P_II1DnJ]^:!L$aE#<pN54a*E+3[$;_;[)<*IUu9/bU,Ks)XVL%'gHF9j7OEQ"DRPXIi71%5,>XKrj1P</*Floh"JB`%i)5_JdVg[2.ur8.7C<I2a=?=e31:W%/*A4iJD-UlcQ\OkOR,djI5R.-$,Ug.p:TbrQIVsmVOk*2\e93iQ1YQ59#40L7j4tGbc`9U%8L,+8giG]M(E)#Ri!q4-A.Z9siOZ@BhCL@0#9S@3Rq<8?+e+C2(f8s[`sElF=<OY;D?Eh$"c&:8Fe<\pieaAmeC\K1?G+E0\ZkLn%qp/*g[*=_+2Iq6s+s0Q`%$YuI[T3kNR9(;:LE6t`[brkn.)sA"a0eRDb9`P4QtgYmh*#tj8Md#jCIrC2,*F/ua0(aY2_8BRg<o%I%;ODJm"QbScH5^kZqXR)NQF(RocW1P"ghPsr(V53FpZ]Q,HgV,Z&0C%u<sf1iiakX`*U+F,\(<7Dro^'rnm&\mIZDT+NB/JiRO#)L%QfLKGHgX+^-o')I#47eRe(TN*&@5I?dp`iN6/Od*`_ccUGG$6PN\Mq.dZc2j0;pO_ZK6P*>Y17r?NVK=Ualhs9=-nLh84cOdKF=+%pr1aLct,_7fh`Ok&.]+i[%LEaJTUA0LO"*f%m@9^2s)!R'd7"Y;5546U8^pog/O0J'Q$NFo;qgn4icZbdE1:oaggc4$?F<CO5?<B%M8H[H/be-HP22G1VAiajA$]B]6,k9H7RA9mopG&7,2ano!<]0n?r8oXks`;cS[f&QY='uNmfS2HhBqI"J)hOgX$i:'<"Cf+*[]#(%f!JUN9*l?:1RVRDhCEd`<5'al9tmjkT!uDK97a#bXBR6$+#N^`,.fbU6O2Ff$HH>SCO`.PV&hr>N#0\T04,tP?ef_KRfsF,9([*=%KIms:CD1eLFZlN#(>-4\i%:*n[6N?Rd4P*b7J%q1l\j$UH.r_>\D)41h0eq.bhn+DZ>Z@>mQ]ac]SVUB_T,m3/5J<<2MNm+,S]Rl%ZEW(B(C>WF=d#-q.>-V[?mPWX\`NgsLu+Bqpu:%ThY%#SC?I4MS+>8_Br<)$?B*O&B,4I3'3"o9%6P.d>M$NK?u<b,#[[R\bPPBa%$)'V7+?/mB1]*t&7uiomi@NJQol*-@J?qcHaE(=$2<,6\Mh:h^ceGU*rjsriptqJ])8P9lXFP]`V\P=Hf#M2%:rt6`<V.@bd<pHA%S_FcD%%Y.:(5W%48A^6s2ADKW8j+qS[(5#Vm..a]gj^id,X<:f$,%Q<h)!*%GS#L>IJ"So<61[*Z,!U+&r+?/08PcDH9$.;%neZ^%/LLCX^RO+*FTj#8-qD&%71u?MWQ6pFOUdQ*W:;9AMf<$OQX@8cr`f3%OpLR<-Kd')6s@9GKk//Y1X]WN\b%?Ck@mBE+JDZ2:@ji4%^`no!S:Zc0>9c!@X$G6:pfXNF]2=o)\EA=*9B[X9\KmJ.4N01S1TK5WW[q26Creo.lRWm;:8%nZ#ZE>gAH_a@Qq/^o;#+5202ZXn%aG0R(\^BuEm^:S"cD0,337#rV%WbiAigP=/%D\D;$1U*S5)#$DM0dN:A'H,kmCX`s<"+6*\+":B\GVdYpEQIg-,cBGZc7"s8Q04e%e'qILa$>*ZR*8\t!3Jd!'<_L*k^$H1&"t>m9pf]&7JZK`aAJ#\[a)i./)N'GEWTfe%nti^a6>3`af[?]2MJo!V+sGh6cLc3OY[u-%@Ga*^!EW;INPH'rm<R$#:<G:gRbWI<T>"_/QMYrHRIQaAc*Q_8+:0p:^fL3+addY:*U>L*g6l*o#Rm;Ii00TS/mCF_ourB@E]f$M%XJ[Z]n<d,a/m'.tM.E-.(+:bY<iSq",tjd_cAIU9cJTaY+G;Rl2i(^jE2iCkD\b=H>u6-hoSc)MOgHgW%'AbmaLqNF&K2qdp$9h`%<JtBA6b9#W)kD\QEc@`C4nkR;,Tj&Of;jt@\(&imf\Z5.(KeH#^$Y"e?3Lb?U7tg:iMP$uSGL.8^oo"Y3Oh?MT)6jF1fkl^*.2Jf%4n%:C.YWNGMM>LeTlG^`;Lgaf_Nq$hVBIFIj<AWB,Wr%'!V`3TFM0Rb8U*r%"5`_Q08dd]em3]@[BrjF*a:&J,e$pj,eY7.[e-UY%g)5M!n?'+)AF75[#nNDJ^mbK_IYN*rCo%U,)cgBR#,#P5\`;$$s&3#(aZD$30np4Ks"'m'<l.iUn:8!]^oQb2$gX\*mQuD;-TpP\%!V`4/EF.<)&"n0_Rg$snAc-2E--Td0ald<N\W")Wku\*[2dmRLYO"[M(rQ[7IhpE^45k`)%sZh:]W.R8Y\jeaYGn(UE#HSHmq5C3%<%B2cmJ9D+;Z;p74J5:@p6s*-b6;f"O\6<N8?q:$!\*"UbfMG'W5BaX_u^0T,Ws^=;S;SloR/07B2Ym$6-1)7,6][22rIkFk&ANA%B@0\p&E2JC8tM9O]>WXE'78U0!h"0o)MJdoPk2qW<7T6c+j_-1^OmMD'#0Sh"lZbAHgX,aem+&:P47Fe/T2CQO"JL\PH8GIj\GjR%b[$rOW\<2/HaRC,VmqQ<.0l1kgbSmI1m^;a&qUWdCcIoB]BG`rN,D7'YFV4.n//u.b$Ybb)[mFhI>B(CM!<9ek`EI(4!2=>3:hYZ%$`(E1L_N2fNO;Ha>W$OgV!DQg9o%%;H0%CmQP&"os&hat1/pHX>'OQA]+;'eR0UCl"dX)"^jK0S.//cGXL_a7kjms+d!="MqN\uJ%$'-*S_#7nOS1B^p&fr1cJ@?:bdQ.NQ+OhC278u6SfKo(`o,)q"'p_.+&\:mR*]s.Iqp-I4j$U>VB--QN(O/e?L9Rffm")$W9#>'H%bN]M-<uZj>N54@+b7MghT/jU%Fnm8qEs>W36iTW.a<_-/QIte@Ja"+P#\-#@=Karm6oF,1^ls4:b<05/XG8qOghNM!lZ\O<$W,96%ABGj5f?H1>?bPY%Z\[JVRU#MA%sZh:]S8*-_R]n:mQuC>CMGJS\EEjt0$]qgPH2R`!H/b+^*?2W8JLe'15JQcrJ2S4jTSX(L9N4l%=0\Xb15L;F5E"`OEEnZG6&IgDH\!!`@gMD#^`I0(V^,LO0og0&nuR2:^%VI,Xs`#%+>]FT))$'Q_$)61S6=XQelc@*27g"cELL85%3Ubp9TY]q<.4*.3=6e#P,3`f88lY'OEnL:ZTgoq^4nRa2jtVT$\8.j"I!&/*4fB2jB;]:Wk!9Pup85/AP0d\J-,b%eK'QAXeJ**<%C$YpL*EW47&G>/55sdN,fpV>8]r7a;][o=@hnO8;^*un)=MsLmC^Lbo\U".q/TRC@%r?R-Rg$eb78Q*j9E0kBdqY]f*N@mZ:^$X@%<;BV/>5<\BlO.E93jZ2g%e?GFoN7OegpKqLXm*@?Uhc@SB'3H2C4"M_:OD$M=sPqJ(m4,Sm^biD<\&0uP0]c,g'%r-V.enNUbLmu%l#VO<=[T$pP>5Z:O)\7m2ijMT^g.nEKoc?Eo'rNlo&%YQMOf[TR9YY=Z*YOLD>f\oiTBE2eEU/Jb`gIXrPf+U5FIq<-a$FSGrOtb%id9fcDR"W%*3W$pOgKL\C;?Vj`lo_VBCsbT/,4WR$^@B[=XaesgA$#2ci]>Tk[l$::aD2*rHTTJoIW_C2n)OJ\?q_.;$8EgL/9SC%[&:K5hnkXf#Z+:dV7CeM1HsaA!i\+*+@U;LZuuJl.(iS!2:n3)@A*^cLum(3ARPEB?#Y`dQ%#X8]CajL4*H>p0Y0.T<iefhqXN)W%oab'_`>9qBeMBDII4T>4iMtD5m`d4.jpJIbV6J<?q&CXo_!A"]\:0G\EM2E&*J=%qOQa`^e[4V3Sl!1"JC;cCGCT+dHS5=#mVF`G%[rhG$!+T>`MjdD.bXr^l23dT%_Li:>n3.UY7p$Xl:8<l&.&(0ajemSm5T=00_Lchh0Iq&r1*%B.PP*%U6q0]hYj;9?fQ&9X9#>`H%pY6;GQ"_b<=t2iljt;7-/BuYp9="Ki/KuMi:8.!dSi''I`:N8?oHXbDW'8bQ_:qP^qejuF3>S6i+&0N"D(.!r%Sg=N(04SF05]XI%gjHp7=J5;"dqPSXlM230l7rrXk]g'b7&hErDml%eT=Y_Vf(S3sbXGEshc+l"dEXd-rR`jtHe;/u+C#^uci)KEW=O;?K_kG!mN8SV%i/@"a*>A&eAFNBAZo>YCNOld*+OHg18X]2Lm>Rdfs(@RieZ9tmZ3#D9G0uVnOhsjk4JN20creb>i*9-_*TppP</9]BceSOU4Sh.P%acHcu'=+@iaP[ZK!6-$)1ETmSZF#9Ul8KEoqYGKXF/pgJ;[U6UDRoc_d9%']):^h8?1;$lP%i5)6h1&_BG<b[Co,>gmpFST9ipCl%a86,idFY)]Y,8?0Zi#C",=$MXd>9P_bM2VP6:u8t5WP\8Ho`f-8-Mm>&6DCoYQ;_:",Z\2Hnn!].'H<bM?f")R"16>HgB_<\!-C3%%h\#H+#dQfCs2bclq)!TN+h2g9@a7SGXFgVg'!t-43b9g/ZRoCQR'3hK?T:fP(j^5G4*hEkh:)B]ZV`PPQZAU]r];ilbp=:Z0-Nd%0O]n#>ftBren::`TKRK#4I>]4W)HlR^%s)t$?"j/;@ZsW,Rs.eR%P%D4,>n%PokA@5LUC5YB2[@7HFGI-aI_4Ps+SGJb4dp^m+ZH%Z'"0aI0s>Yr%TTL6.Se8)P/=(*Z/.[**aOZR-TG`XiZ:/rWb)@U93Y19#p&mp6gK4deEi](+:"\:dn7=4^#&i9J@da]H$6=XZX9c%nu>)k\3-3CpRanH-M?])1k*6p?Jm-!BF*o>MS0DrSWt$EVeaWWB3h#d<l.jPr.$^6lsCpM8.f[,VCBW\IG5`PbBOuY/R]MBY>W-Q%j`Tt$s"'m',snbDis36a"^Y3T?!'#h[b'#(8U0%-'G>>aAZMm"mU'W[;D"re,k$AF6<*fW/IDfA1W1*k$HnX"Ynof]UihR<"e\4E%8L>Us=np*KOiY\R^];QJ?B7"05NLV`L-$@!dL[/C.l4nEoFWKsTm&M/I=<<TKEo(n*ciTOI30Xj!-7<:)\m`i#NEWAW=HM6(P^DW%*g.ImH$l)EF10a=G>afq9emS)Tbgns93QF)clT"OUNSYRH&OOu'3AhP:+r=3Oe;8W:e[daYDb8ZdWM!N/p&[f+']>NI_]5.NCD:]%Obft6[e3<KI[SM+28a9kg4`9WH#["$*8,";.O:N/U-&3E3mc%`bd=c<-DXm<S/_,$ed(!<d?I[=[bbboc`t$=9$:A+5a1dka1#_P%"F8Fu-K,7(Up$!2fin,Uo7Z?/KFbT!cRID3'$Zlbd=uDd8C12A2H92oAR7H5bM!fqj>a[YT*UC59#s,-`b5cAnttG_%3Ar:V9Q'2%@IHZKGj>BSD%s11EYbAYiRiih&DTY8\56OoA29ub@pZ^?'a5]-EBS?(X,[Q5bV]`$12(YbfOW!c:4DH(&Ua<?dt;9+bh4=A]224D%Q)UZ^VGe17K*9Yb-TqqV]HlqsoX"EeYH,XlbVe-#=e@@r'h_oNlY3na[-sF_/=Inm5BBtST:ng79&TWN+U^?^]6.^:&Hq0nTPbGA%Gps#\^+1]>;['\_cqCrB]-j,Y-D3T]Ib`3gK61*<\T&8HqA#Dji<a4"Br#Yd`uHO3c^uJ7&3AQsk4=La"J[YNUtk)T8b<.P=mOm,%\^33BquQQLdT&=S_DS[<UEOu\eO>X@">^3>g&Q,c4qWP@>=c%b"atr*('u.;*WeLscDOWQY.jkJ#<)j2NUVD4SW2e#RT6GQ9#I7H%CA"Wsbuc]tkkQ@2n&4Tq+(e;.7\1,(r"`W!?4CU>!U;!OnDVFO`_G.qcXYmRldVQSAPrl;@eU4,;OJGlrZ*Z/UkE-=7Rk1"3Of(D%T)3F<8W1_(L=N'k+<hO:d@@k\_nHM/Nf*g#TA!1E7&N%Z&OoAY,"["WfLc[f1[?GC=/8GWj1\YK`4"k.>GkAKRY83XQS*b5#T)tW%Q(CaYX_T/.T=@oFYI#OVk![&QU4'19,%SI6"Vm\J#k"-GrIFdk,[(86dc!bhl>%2m=^[)6j9hh^2BeS8I=fLbJ@^i`<)T$s/d[f]%BpF:Y2P!+1\E5mAR3)c(Q9]\rj*n(H;@#`8FQ&muLW#H`KDB'/b5i=@1!Ii=<pG7O-!u8%R=Z$'`48Y[@,#bCe\KUq4dmgg1l9S(%S!ZKF"/b+"'tUCTD-bcOZhtQb*R@L0hk>k5Wfo*6;rEt>$aB$/ZVMq";=,TRQ.89fVKr@Qeh@I?Ga(!>,6MU)kBWYK!MA.Wf&mor%q2UX[X,2ZR0c;7^NOg7eT)3FddOf,1hOl`=22GMGcPMl"nihX?oJ*/r>sHJ[DP*>A#".Vf2DUna*kRBD%O68iIRIaNR#DQU@hh'u%T(8)2mpC`U]TR4Oq*"I.r$4YMUfH67ILltb4_In^JhW:JS^c16Hug'BPuZnG+,(;T&F"4Qe0Ru.HWg,`$m'/5fcZ,=pT)<\bN\Xr%mbE)X*r`$QaVN$+Qg6-9Bt4P<k^&VuQ1\N;j#?2b9##,MU*p]gd8?B8f1Jd%q_]_iadBSrqho5Hh#m)[jT4rkAh`j'*SE6JfVj3s%pS@to>mT+0.1mH=&<BTSbXI[8dEe@6Eg*I()[uP,%BY*`cah'+q@%]aCrJ:.m/ct!+^0>3&<>6%N^,_E`\@@lL1'fr]Ts4i*@7:G%pm&C/77V^8L5?KhR?jY!gp:G&eCW3(+C=6eV[p3&QlkNKddab#:jK%@bihs8K%T^O(S>@o12+TUNI,4"'+o_KN<tJdlm%3c'd*JV%bQ`oFT.\L!kC+7nWLSL62bLB3YjtXd1+*!jcZ]1$e2h`,TJ6'rT&UbM-\Hm#1:5>d\u)r!i;Qpr1/aL_S>.m(f;RnsJ-0@-dQ`=9%E_iuiID!_NaefcTO95bc3'Hnfb%"\/kKYOrl"b8kkQ\6-Fj3C$_#4Ol;nu>AU:$Lp7OL:fR(aVmE,"6eQ":fr3->tb:,sX'2dXM8%n8[$m5$e49)Rd`H<$FHM!lj5g4S"%"!>Tj!:k/^ZeRK<s8h%D,:rTIJM0'?WrH\r:Q%9j<1!/%'o1XR;8Jo[PMiXbSgaLr8g>`5.%T1)`>QRH*C`@'WskiH#RkHc&`ZndXq%XdSG]JGb0CNd]"mVESF0^-*3;iG@6WRCkm#u-D<\8GH@3dFaOj!(V^M>3:+e2<k/5jHLQ%coNaW#q&I']T_oDCGs-6mVHu9Xe[g-:,MPJN6]QJ%N:P?\TH50PED"$X1r(9X-e2WpHW[cqMYW84R/,Z=oh_kj11To0nRc1'jNO,%*cO>Cm`7-I=,`<&#>qDY<B"pnPW2\FHGW.>!<:bd+\g;bD8%MK2tB;'3,M4'_']O,"T?hBnBALA(F\!Y5E^%sM-X$(1EAlHhP`S,%Am>`617Y_30`0PU=;4Zp3k6Q[9c/eA!V+*=V9RKb8M_Z_f]M==+C0E&+)q636nq4QGDbP+faj%@AW\)i7H,p)dWa]Z]RMH7&XcqP%K`ja>)u6Dda=\CAZUHY1C/eqSO0\+EenI"ZO+:/KR_42_ltSO?8\R;^Ne'-WhN3GlOnJnFLEM,M"1#A,0i]D<Z4Q*m'5gh2EC_HS%)T+;;"J_%a4k"-e>oC[ai4]DQ42O*O.VZpm!4I24lKV@IJGX6s8MSGapI77qjJA)dQR*jeDMq3'c%M'(*lpX1F3>EJ8g"`ZR8ep.%kl:[?kbYb7VD9?@T4/O:,NoBffdO&1!dU5#9>f)U0*cd*j8_>\%30hf2f"Mf__\GZb7D,_9VR#s08?3EdKbd.WGLNO*XdY>h]e:d%4tfE](KVF5#M]j19"8,5J1bC.*.TZ^?b1]?L>0:hRCA\R2Bo7H(Bm=>BBkD25d+BC4iK[%?'9>gY9_DQ\o?Dq4$$G^Zq93h.6Skq%[p:8bpg$C31;)nR/T(_\e;:3dQ.46Y:4iR'7pDt0jCGXSC-q.?V_:EK@t'+0LX^+8hXGKKbFi2Da^ZCeba!=G2o8,H\^o66lVQo4%1"$:94CB83AE?GCgnuek]&eBoZJ+jRGq>Bn)OHHX7A+h*Ik)LoLJA+pjs(jirQ%YjCbg+GjE!kE80VBZZ4WaB*f])4F;bjHGt:j`%8"bOUJ),P0I/D]>5=27LQ$kCtj-]jIW6cn/*oo9D3`7Uun97o&e?2k;3k+r$Eeac%i[Uq\7VSD4oq9I47Y"EpaPaFj_%#AH=>4G'%.M+nl6f(W-oV=+pS7iJE:7Q*NHep<8;,Xbhl>mpi6E`cZY9i,k0K]Z3_?4eWJJ81]:Ydm\K^u@7.>(!m\3YoU<^,I@1Pg!JlAAB(%8KSeA,i1-B`nO`@Tg&b-oaG;)T=_<GAV69"rIfNOP3tZOOn^3\l6Q7Wqp2c32^4;.>b1g7n7I6'Y^!@FY:9_A1CLuf.Af,d=#QSR%]<L]K=.q]%i;r'O\Glu3gVn/(inX[<97&%tWLfT`mL!d6WL]4AGRf=-'X#nZ,KXh[HR2B.kV5R29O/V)810\5ntoOg)j*c+Xp+6=%ZTu>W9'@Ze?I=NIOT7,T,=F*J$:k$+Y&G2(kHTSeZ9]],//YLY_pg7+F7/&Q,l<,hcQE;7<tO#['I<N]'Y-:%4lC00&C`,sX>G77%p\ME.X&)r\$LOa5Pm";Y6GJXB-/ijX*cV,s(["9KP([V%Hep<8[M$fKluRnn&WKK[<+:kGPn2[`et(kOFJgBHmbn995D/0CEEnZO%[m99-hMH-Mk9d:B!o%L*V^+A7C`eN1]N%TrT[8AXI8$Z1F%j4`=<[Q#re.<Qi<.q?+Kn%TqEfo)8<uKfH,tSF#UaaWop\f;8Da.U%Y"l85\Gm$_16Aar9XqaC'CH&'GM_H`YH$b<XIB:'$iR2un@5\5\GqMGo?L,+(:`JN!e\_ePg?d;;R8PC>q]h"JTRF]dh:6&jJAF:%\?HLRrsYWGrkuDP>*nqXFAk=]@GM[N?;p_HiTdc'$+9).leJjm4Mil'E2@rF:,e>5[^<8/&?\3RHe'a/k"mjo(e2j&(8Q,gEqjm`%1NLU7OgpUf1D6i#U^t!8%&-fm_UTt&!H3%12na9teQmH+-2u=\\GD9SRK&3ro?'D0=sQ;ibl[LGP7sjdG,8?qr?IXsfb<13$dVR"%8_ltp=U8++d0JHV#14q/iTfFtJ@E))S)1[^l`Rqp3nc"hO7V(^_TnijSNA,WT7><3Z=KCH@'Nb;F75@1dTnYkVk"$S9+nB2mWl.S%/3f13!.dgh2i'L*$YU_VC\PY4h;3Ai.<gdF&!EYU67H4L0r7E(M;(RGSC\#$Ig/ah?fhG9#.ID`iKM3l"l=Kn$Z*C"1"3m'5"+b0%]<E2BOL.MNJL<$?i[XR>M,P$>kB5,LB3^rGO\6=i"n$ZB5WNX+mT3nr@=;^E7XN:Y=+6hGjY!Sqa]7Iu6+D<o4nkR7FLsIa6+gEp%F_C/22pHE/eQmUjos@X/*nRe/=he(ZBX?2T,KV+(<G<G@99X'Y$+EdG"Tt0.45*$J1RR1=bU_;FS$)?1/"0&idih'ml`EIFSaJg-%`_YXLd(-J[<&CmHinUHP0mpcBqiluu`J6-KQ&;ei+_`fB!3&=4NJL!DJ?mToWGELtBlYlIke*dgKO^-t:hla3HYVtP4BITX#Mc`7%-E/A`a$S*l?3*]lU%9sK(4%R;$[Q#6)V*7M26DKsq'c7O@6$jcp$@A;UH)/l3I"Je#43.MA`><7EOET/^n$I^Dr[,Yk^BO94F-=:%n@11C;C3.G,(B4J0c,;_3o#9&I@UV0]eL"kEJ\g6og;gHIpLGfj5/9pTik"\VUJfkjrSKn7\u"77<mq4>P*BC+s'5(Oc!Q5#7;p4%[TYD<4o`bGi%X@)Kg@OEU9K!*Kk*+,^q3;O0Rpn:B+WHD@3hF*kK6Gr[0o%^co#MY-F>ML@.MTpp:*bc1sD-;UpJq4b)5pr409FP%gC*I64g=Y]GKt%n?1H,]0]@?n*sd/VYL*`XO7Bb&D>dikhl`"DASK-fX`TmHF@;`X0Q:eO&#t#mSW-t+$nZ4)$Md\s&(]pHX=?_E%LUL`Nja/d_/f!h\L6lO_]M%d4e-"DGE6#Cl%7`!W"?`X1%tYCcAU_Wc&r"-]OhZdKVaSFReAkuc#Od?nA$!:.inUI;'KtC"7`UkP%\O01LXS[5!`JEE%T&L&8049`W+[%DU1jI'F8o>M:)gM?W$I7J*Y./6/p<4%@,`T^ZFl)1"ob(@A*n&Q+)OQ>P=-I\VoYC?,*F+".%h+lCT;Fhnf(GUVE&u_<RZ+>DqSa2GSSR1gKW^qKPSW/Xe*Am"UNn*bi6rH=X9CESh:[LJ&M6:qoB@#mKcoWaUg)6=5,80.)V8u$[%;*)%5.Usi(VH4*JFRM\)"^_eMCSR)>$11UZ=.?BDa,Ea[1aDA+)jPH7\34aG8?[$4Pp+#QoF++U6Cpl&e!8Ci&W&WT7Y;jh4d")E%:k)[4qSaU_,XT#b5F)l.\:N,S_\no`GH^[\'mr1&IVcA:F9-T)I?!`],>FdQ4=/@uU^ojso/b(;\BV5H\,=8ps,;/bHr;<g9j6+=%d#00OThVg3]F=N%dfnJ!gjeWlnm[h]:L1gnh\Ys"Yj%!(HQ0>LTZ:$Y23O(T]JpmEV]&Y&[C]>NOZ<+"6>_);QinK,1u@^I4Cr:E%[)Si\AY;E3MVoidF]6]>k@F>u:dKT2:D]EZ1=t-paVI^iK6:r@+)9Ob5=+$g4Gg?nYVI5T_Ep2@G&@'fPF&R[fRK5Feme+oN&Hfm%=<4kq!5IZfY-VI=*%DCCrtje`Xu`$Wg]?@OK.[.j79_Jcq+Jbegj<WU&,X;^+1AAVG8PPJ<d8qSOKO$B<`\uQ<8,'P/D0$4YjEoM%H,*])?1548DTt.d!r+?sKa;?f+QL9mJ:tDF*9I@I$bhA6`5g#Y[;r0iku>3.7/"iS"q?TAV5Yo7+j.'DIsqVXk`Ll53R]a`(t+Z.%9%!u+jnNTI9tH;HN]0K%H6.j3_@U0!Y`j@TF?e=(c;NJDd$]$rE88\]0/Lb!lSORupS=-!T5%'&ZPS&%C)\45B;=M1,c/09bir'M%j6:KXO"P@2<kP17Z#q5\a[7$\@(bqX1^iKkbgNlH@T`aKBW"_KPhSof45&j4ACd:JFHm=ui/Xr\e8P\+QUp98aK<RA;Bmfm.aW-:%SO08>8tmj7L4X<%DPX&K1i2?7`48_](><iMG#$b\bO(X*NSW@nPpj![)a(K74U4Cg"=.]QZ$lprV(ot=p!pSHpfrY^Dje&oD?nj[%rI2Q\\"&T5H,[b4fm&<Ya$!#6]^N]qdPmVO(A`6Xr\+bmU]Ge'_<mdt4G>>`::HHdVrR?_"V`u`"@O.]1qaiNTqOVn:`i]:]_'Oe%\6sja*PEWpRH`fhLrdb85j6o_'DW7F9:&p0ghVdQ.s!e9f<2W([h$"K((or==1breKMEl`dE.BVOnpEY">(/<=F$1cNds4Oe-k([%k`Gb*D_7A5A!)ejHrAtW^oT/a)Z6.PI$rAFpRd9$QUV0!m24/_HDWV*'As,"I?>)uUWLh[\cY01i!Ei!j<27<$Q:%6m7<h/j[.>9%@)W?+!d,e1pY:7V8FVUf[]?!0L"td_7G8VMk_'#IZtjX#l<ms88YOZ_9pGscHT;j`Nl;\g)quKTDUaArp>"%a9I_[-_eVXL$mJb$%^_`6gnihX\ddE[RW@9``#SP9tFPUo3O,Xc)VCfW[]Cgg3T2Q:ReA`mIRZZ^>TXaQaK[LcI)N+=AM+c&4-Ds4XnnAY\"Q:8Wp4,(0%b[40\86C)ng4b4PSU'0*N:`7$Tf\n)T*VrC4]G<6O_RjDOsA^4!U==]2ho(CM<i)Ci;PfoesIGf4U%$;lXSUu8Zl5LDI'jsa<pjV%qpN&29H5Y?\JCQSGE>?mb-FlMH]SfoVce@=3ciT+3[MB!IV]_]N`YIeb7tWVOEn&`=?5KhIh!*;FOO0Mnh<AS6*od4iKpCM8E(FS%b-3IDep*IMCQdHTmQZV#`f:9\PeG&-U9TWb_JFe^iF=e2i,7G:Z-Fp:W[)%nO#SPj6#@.B*uk1A\J1/GoTG%f0dcj?5M[NGNA!se%Vsf!km\jChY4GIFDeZnsFO_p[=L1G<$j2SAF04.gH85Ua1!X&d@Z+;^eJMFn$P\63`ojMpDC!M5]'9=jgjb(/=@AP]6%Y>C.ruR2%T>.hrblYL2Y5[[&-3h-<B^V]FD0:XN!iM/u/1-46UX#q,3NWq-j"uX/^=WPU5D*XW_P^'NcnT\>+Hl'A5N$B2:fi5QW_mM^0#aHP%XDYKD!D%2;_?7sB#)g+kLGIo;bi\n\U'`Mf.5KGj(.WT52ig(+HKbHK/TB_7f0\pZjuF;IPlY5<79\3]J-0pE[l-e64nEV%BR@Pn%B+Vb&k2FaZ%sXQO]KRCH$g[Khi@abh%m=/Bj;r:?h=&UhLE8)(\S'1X<Z$MC6n=4Cs29>K/.pBJd^G+U\I7[to'VcuCVJU,mQZ?f%eLM0&k1oPd(O/k?(K'!gf2b?;`8DQK-Ncc'`D"T9qL9R;8KNB.T<stdlD)Ak/S2b%dMVd*U.S,SOEqA.(gMB.c^P+#eNIs"DE"q9%&CjmsbQ#_+Y3sFfjcs/FdZVhe0*VS3^bb?Y&kLn1"qN?Ao)@H:.!HKQV3>k0c@A[p/rdDQD(Vqg8sj(cpFMH\]9(ah'GlA8N*6,7%AUUCoMSOiMpWS-,D7S*)ADeA6^Lb[\jI\0_L@MApV)sZ#$/#J;@)Q6,+XVj&.W)'t4F$>rpRa`n]e1?\3;)Bn[CNrNY.73jVKO%p%Au?V2B^j=GYY%(CSeT?$9tP?U`?LpY-8G=fr])juQFCEADF?Fs[1'SC[.TZOLVS+k:-tl>bcHNX*RnA"F"-k-%Fn+3X@320qN(!\%85>_diG:'*g]SKZ6)QtXGJc&7Em_uK%SC$E0FYjY`$kd)'&7Q;9Z)k2,mL!ih"%n4_i<l_\8K0pP?^QE'SH]!m[7;%pNC%OEptO&%/T5]]=,h8;eP5j'd*GHQGQ;/TNt`Is9A\_/2D4f\nh&@^;DsIiGDnD+AK<mJo)WbF8?O^(NKa3]bCl+r8;\*.Pnpp!_RbrDZk"ck%\EEiILfS/.;SBUs@*T(G4Nd6rDf^It.sf>i<_@Z"k:S;p*XiQ.%Gs34EY\G1`$L9*)N4HBqp2c32^4S6>hX8FRg"u=i\T2JHF/J8%O8djHKc5IsRO,$sa]7P"8U-oe"7AC+kae:6WR!/7F+H:#Etd,1JaG>&;\C.!GdgR-6L82[.U8qE2SFncO\6=i.--u/j[Is\DCB_:%NBAOSNY)[I@PscoUXr>;4ES&IE[=ksbRL*A`^F@(k1m;OQ?Uk>G:D?)f3R*K%>67JZKH,9&T8(Gp?BgbDp+-M)i,HM]c2bha\)`p%6AKpU(/DX#)OD^sH?79a>i8'8ggtV,>RrZu;\1R#)"cWu\t1@5.7a$,XnEX+;!:@a^4c=L0bgL2Pk>r^DPMf@0km%4lh(S$j]V%t%COqUl5GQV\HA#:d428AbWN97C1!0o/,a%>>X-J.pegsiJiPNtSB)1VD.@mO#GBj(BlC)MdJG\eBR;1&>3G@K-n*u"3PBDgqokSU0%+L4Xe52^i?0TeLL4D"m)#+n!q4IZD#o`&:`[4!S$4MuoJ:g0f7k/(*_9\FG[<JRg(IcBF<OuNX(_1iK1CS+Rs[,)$$%G$04)j*c)%*p*3J2[cF)N)G+N2iMX&Aq="f^o&#Y5?e=&[]R;@_J"!f81BV<`2So[\#g'(Mbugm8TbEX!t?>ks",GOBh"Z;IPa6S535Lc9oX]'%Z-Ntc&\J@^,LFG4d+Oe2g,Ppj#SFH!.'"9laXF\tA"@kelJ#tDTW^M"<,e)ok-EmsQDLK0UHH_gTG1[gYO&V.>MdC%R:j(!m7cRp%C#g>9N!jKiAs.V>fu\OF`I!fW89b6UCKtT>dR98_+e_,tm'0_>:-lDJf:G&CV+<i8^^9!U:Mg\dIPI=NI-D`3.SiC05N%]rhdY#[%<L:2(cNCN>gntP8K`8r=e__8ZG-?e]8^eQWA9GLbClYd11aT(/WodU!e.+-_kX=8U\+?.MQS%"aAqB1s2b+(O$J3_=P<-IP)blr_%a]C(b8-4jSGTMuJ<<<^+=&04DMUf"'VT^WqR1aS](Q#5r]_'@Y2QtMPc.7?ZSW+C*Yf+cMdFONR)j)*Y[!`h)_>6Bl]kNqn\?0U0%!m`#:@"%C26#$=Jhd0.S4K$8)9N\2A]/#HK;BX@!fT8;mr>(WS!C\,0+d,=D';s*P+[=iud(7;[2`Gh_Fj8M:$gu_^NqC1(H6gc7%/;hesi`le`,AWUcm&9X9q:/i@5OA_%qWf:[2:['nB`_W8C#F7n>c)dN64$"k3'Xscg1-#IDsPoa24Q2b3cfehOCXBoS2r]lK-iUt%3I8.HiS$\m6(Z4?7Vlmg$iT+#E[,,,).,0a]5Xp`hg`IJgLMKV!'"KZUq^t=?,t4_BQ3+Y!j._Tat"0RS)%^hgiSV8;2*DI1E(bQ%gJ@m"4L<7LB4<N#Hfg:P6r%Y06ZnA75;U(!(bn1:(8Wq/dha_Q;?/<Okcul1jmp(`K(lT:i";inX5a'NFIiKr7Y>&]Lg_T<U2\80%KG#Z#ij6mP$GmP,.(BZlb?8C!g9,m/Y-`:-ZVjE(H)/&58=(SaY1I%MAq?M0]ci/%SnhEMRA9[.rPO_#4+MWM3Tu4Y;\aV$%8Qp2%me;J"9,2br3JW+#Hb7(;EUtZ]V*oVEqR7sHlC.)=(YnK(`VEDdSmBY#?gqZY*QKHQldsFo>'`Va=2TA+[$?VVbJ8kn;^Ha4NLp.X%me;J"9-nn-H*;_6Hb7'^odms`("cYf4!ijrr/<o0XY\d92uEVi^&KWQ:KdRXIB9+liqU8ln,F_T8]!=erQJIR/E'LfUJ&jn\/e9n%EcD,J@AH7?q6rVr)mY_Ces:nC;oMsoCX\7mUDVOfbqo*@6Y)In3]L0=.hCJa#M4q.1[j]4WHHe.U>1a"^7Rhn<\H&N>uB/m+F("$%?V$]=nD*rVi-oT^bsLJ(KPO-UR5YKVD$]>V7GOZ'h.Kcm+d4XVItCYN<`U`m>NS[P\8M;6qn4.VmYsjP*Zt84G]+Dn<]l;A<pb%\%dS<*<Y'qdlOZ%a&!7]i9lH(f+V)(.pV<unTQQSCCp0[<$JP>lWU+JJqD.rR6QbG;$hPIX9fWpe%>9K&5(]VSS?>2TW&MEPKb^-b2%[pQ^;BlS#l@=O7[>^-1krSCeH:GIOG[JgQj/5Uh."UGu&^)^&Xkt7^POrOH^lt!MeI#K4RQi>5-h@P*m+agHcRJ1lUMpba][;)kN%LA"1_]5IUWSMik!=2/JnE_4.0>b?:[@Yf_Mokp*feJj\G`+u7n>^-4lIHRATZOnhQqTO;u^d[k-A[SPA7H>Pm7!;l71\Y/dn]a]$%I-W$G>nF8ik/Fr<A[R\KZP(r6p!;E;55K;<>`s%df4Wsp"YQ6V&_<tsc?e1n$.%ELBc?bTQ^Nn;Q^4Oq3`#h2luhgUWXW93VGO.M%_#g>;%#AJX_IRadq\_D#&Oa>\oI3!eZI#LCV-fEY&4N>aFg`1rYZX3`@N#b%Q`)&7DH#c0=(gZ3Z<X)HnDtnQq*.H^XE=EU[[!9i%r5_TQad#JQ0EH,#1@M&/*]N?-N^Yeb;CJ&i5%1ikLNLdl_k96;dQ?lFH;<j7E7[RUa;%(dPaRG;"%Fp-oeL,\oM,M-c]G`2OHqAu%Bn\?K!C@h0r*pd6UI`24UfAWn\;hoYX"\dTZ@WY8Y0N#QK!)lHY)P1GK,17JiG,/&l5C,+bU=B;=GJMFM+,0FIiO2sT,1XhXC#iO%"-FF,Qc8PR4hYhg''D_IJ^%P@f1$]:?`ARlY2-MA/fI':ZHJdfm+ZFZ$92T[nool5$/^tH7\RP_O6D!0c(;H(0=YemSM76;7O"*&%Ab!oDkJ8[W*:s"_R&i>XXYrtqk.4fTC3A:-l$2dd+p"YoUbjJBiH/"h`2B=f8c64kf/7CD0=Yem6ZGF"K8Sl#7,a<";+/8p/6uM[%X8u3Z`II_pqHI)0.khH,AcilSBs9>_2&L0H't;\UV"S>f:h[B>OlnUlY%d<:k%qA%(Y6CL!a/T:UWM^Wd(-,+QTc/'S@S_]AkXDG%7iTsLK+7J31Gg*d0Ip^poR20t@R?V:.QHo[mPm/inL2`-DkfTQ2-J;QVcd,:Rg&t,Hc9[f><;-Z]"k`JT."Uei8E:pU/8!GD4r^B%9ti,3PYfF\NC\[gkl)7]ERrFZ+%bbcelio_TKQ>5bI+lecna,S.:&M:I32_m#a?P9CeC,,W\Uad!=MmL:"lb0]M^``k]2<9bgAUb%ioNI"Rjbc!K$,0Wft/JEQ<,Lm%+P'ZY5>VU@3C5Ub[Tou1aXNjcq:VGF7P9a9!q8f<f2O..@ZGOl'#uoV[-O&g5.ambRD/4mF&h>%fsF&I0erf*pVq<er,!lO[KG#A)MLIJd]A]_^s1)noMWWLUM:]SE.B%4T,&IJ]R+`\BLh2eF31[X#rXi,V?2F/0gO0=&emJ3g&e%l%WkE@%hNJp2JJAmNL+FX6b\>J.PU?iLB<<\<F-EcEH=W%S-G=<Yh#YbbG?_<I_9@d.Ej4TD]I>+a2Xj(@7;UE&n:H08"[h0O]'UF/%I,t79TD2VOR++V*-qJ9Qd\9c-44QnRN*U-0luI4H%o0T/EM76D[a`RDQBdiqYRW:eZml/^3>[AR4ms.l*ncZ9Z%UD;Ulh^A(eR#C%Z$-CRpK;&B/WqMf+kC20=4WZiH(af5-949tGt"D;K:B#G=-:Z#Ym)qRrW$>UpVM,Rf7<$?F8!]E1_RJ1&_A,D-opfpR^FE^[OIq[%3c5*=##MAA]KprqWdDjS)+A-)YTdi9&PTYKlm"0\ZBX3?\id5Bo-YrN?4ArAOkd=3#3f7#g6>8E^_\#(rK:"X^ldncbtFW8/A#eu%HoNSGY6Nc>f_Na]&3j@FPF*O][I6$Vma;nAf$En2_^-8+b$j=_%'0,gZCp`Q\D5jj.7`M<iFHM8Y+2:qOqq`&)Eq<PV=h=K]1,O;%H/Fp'd`p2Ld5Ae8j6)G?6c<XHdfr5A%QdBo;Bs/.Aa'e\6Ah-%PFlp1b.1$/QcMmqSssG$A+93-aJ<R:CHh>J+(`g?45bc<)p'(o%28miT^8R7FFjn3,80HrdJ#jPC%8/K85UuCl]j@(Ad.E_d>C7lBM&r:k#44qN3,8J)(TcL[^8jpNIb8DgZFh.]Neo8H$MRD?H!s5*%m."YW1Z#'!D>fl^^=[WVX[R7@Ep.$_(]Pa:$;b%K6P1\o"O8UqI'<]kr0*J"Q(+VM40qghOI]LD1f4Zh[<11sdNMrqb_<pE7rN;3%T:+_5^KflC$W_j*FebV>+Z=`uHFfIpc4#9<7LWELLN\8;kTAV\5-D0=BBDunXI;R*'rHdQpJLMHEmg=91C/nFJWl<.jV!NuAmX%$%H_K'n*A3T`_;5LWeMU2"bl%Il'"TEo2DU](;XtL4^;AbQ4kgj4gDOOiFI_5SoKqNlUrs'+1;DEd`'WMT:L(s,aSIi"pYREioa=t>%W%jg(lrJ[(<`/.WG7^]3M6'+GY=s3c$fUQ`Fj6%41Ol]QJ)oU2)!-_,.&W#*K(u\5o0a`4Ae5VIEFRqb=[>%KAL_RD)mAku%;B'7%UsI7,8cFiPQ'%DA%cgpWIC<RIUoebDCg*p;;AuOZU)V]T[(l4E;G>T`o2ZWYG6VZ%%?NdEArAL&VBC/'r%a/Ed^dOter5SqEpSZ+%AGkPG13Qf(B?AX>S/>GKA63IQn8?X?%6H:oPi<d'*AecPRIeO-O[oAV4I?i\!"rmaTVZVJqW]<_.*.7ON1!5mRbsSEqe,%e3p_oo%.lh4pWXtS%$NA0<r)IFd#Y`q2j\q2UnqskP3&g(rL]'%#`u"X5*HJK?f43t>);];+?R=t-`K&07Yi1XEAIB,eN&fRSTB0M8E)8M5%#/6;mqRU"3Y)!&i<$(><m\Xc1oU.]_r2W4N3[HPC2,<;YAh#*aob@r,]2HE--2iU(QiuQmY#=8S]BPb#I:iK>.7,t_&fR\nZ4/qs%qh!MFEmBu&&_Ru_Rd($_P.DA$'#nFXA3qM^]k2E=]XVQBT:%pSME`j.=F"VRSol'UG\kK6i$j=iGX1qIBRZjIbhiETQ%"eZY"Nu`%M*<_F$@@"<Od0HjH$oNI`hFjFS]\k14"%H4I.,;18$CW(,PoX^IPQQ:@<5t\_agoa<J#R0NE.=.aobZjqUp/EQCH,J;'GuO"L4"?%Q@(P4C@%MLPa?F5^bol28_)!%f"l9<Ikl&U"g.'%i!trFl1Eq1$DEl7V_'GV/fD1=G90n&H(B!E84d%'@pE_/_bG,('<#/*:ieHh%P*)kH"M!8CIks!?a=PH)$?(8s,04X6\0bu5RBoCUV!o38S:t@m<t868)4(?<kR^YN/!Z]W_LEWsj],fY'PYT3MF\XWG*=r@jI^_d%W>:5P1NMAqf2V,^F)@)UTUV"iaR]8I!D!pt6.1Eb0rs@]^H0]:5dubE8&`G0F]'MKECY/1.I1J5BE8>NSX=E(HCWNF5j"N5I:CG*%!WT2CF=Ica2k1^)XH0#>9nnpA\Uu9<KI1(bHKpjpV\BTV;Q'?ho??ngaEGkbd#+tTeL/rB6:"pY:/R$R0%hqeYJ[N\a\`S7f??K3%afOH<%[.qn,0]n?$B'@R2i&GCn=jO.6(;ffo8u%;,YqEN\T3kRJVPXp/F>#Z,Oi;%8];7Ve&d7P[`D6&><a*.>H?,ZAUA0Xe"U2!%5<2_hTSi//bBk6thq7*:o@n.tB81g<$Q!VZI,7P'=WW>-I?pnL2:71.G[4/<JFb`JI?WmDGq$$B^Fl(H/TTB9+E9K>fA,jh^6-`3%k-raB([OS$E%n!Y5`qj.G"=^YQaSkr\troukncJ\(_jq.VPT]>aUm*2+pGmraR="e13Jakrk2NX%=:8oB8`S*D5;BPPT-&OJ^r<.%m\i`5\$=q![Xmna_i")'e%M&"AYO=n$A`:3oLL^[>81Np45+LOP^AIo;9qbplnNNlJIdq@,&[jX8bgu[80^T,7GbV_aW/DeJ>WI_%RjD\-$hQ>B=&S+@Ch2s+iS:3Sq`6IH<tB/AEHtoo@s2D-o$E3'<p`3(II+[%E)d@7\n$HAFV&>Sq;YV2M.dh8Asi`--Oh:hlcfjJ%k*2I*h^a[["(8uZ$f2D",@IgXg#gM)\%G1L9DMj!M.WnZ9(l!q#uLnfMK5iUZ<erL12qMo8*7Q`81`K(PZ%p#V/aVmG>1l7;+9Ff%7#CKKAO?7U$_sfE<@]bc*$?Ai:Ju1QnVdHYrB`7"_!m_@7"16;DOG4BpZ!/gH=hW0.QK;pK.\P"8H;XTJa$/[2TSS]n;_]GobOXo%%&8He6!fYS)?^b2i].G3C%j?'\ZeTdO4ar[:l;o+!5=jK,]0bE`E"au5>]G`.ZcrXHj,4fTN_Jtb4D'!=KjI10[D^tL%QI#1omq'%mKZnHKZu=Eg\ch3#Vno?r/i.?P-OG;8!O!@_u]d'KdR3iZ=S5Y(`_Ycb=_7U'QHjN4S$3&&e]e:BHo1ZSJPoEoKhbAKG"iE!]ud0%%#(1-L[<!2;Db8#f:C1Eh\WKjj-g@$B)We#aIEgQf4(t';1"Ep!JJtXn<\os,^(k6EuEJ/=1bYX?%MnT1bKC),VrFU&@h.C-.geg%1\4,ukZhk,g'e]uP[moGKJ''B<AgnHAMn]OS8B05l""fB4XQpWMO18g8fu1'7)#RCO$55j_#&+\.@UNE]hDRq2(Kg(&rO)8o30d*%'YMC6YT>pI;+eT"3;;Y0@fMkl`f",9>h7Zmi13tg]\(IFIed*F8:U,B/Q\&>Q44#nGhodCP>(R/Z*$BD8)>14&[Z?#en$)e[eL&R%AliX2RItHC7CoLm$)ITi@_5&uCS(9fb]\lZ[E5.F/g[)dTA7T(kCo7q4j^NRFc!eHj"aH;&GOi(bSQ73"torDaI;3JSJp2%e.k,s%MXmY/<:)DD7DGQqR.9X]i!>bO'-PIADb(ea]-W\8s,5WHqDNWWIBOnh\E=KUbPaQ/hCWXPQJY#4"7EXs5Gg8B6NPNWn+E].951oK%j!/?*B1:Xhd'ZV7de\Y,ZTdpXn[uk28diVIP_Nrni0jDSd_)c@7g,t9l6GKJi`7r.(=K4`NXFGcK'!sU8H(SNpJ"9prpI/\OMtui%fc2&%U#1f[X1eDSqK_A)R/fh(lYILY*_[2F^PY0Z:S\-O]->?d<D?36F'NRY'd@=G*"59bK-;hF0DE,<k*cGJ(YkWQ\JWK9s7(aE%<$Y2:nn5#9L'St6,Uq0^6RW\4S_-h$?(Hh-jCT@%/_D"Z<t#:)Lsb(-pci]75][Cgq[;i<_[cH(pg%oBo8g$Z[>7LUbmZZ&SN#I&%:98s&SQ\f6P3&>3LZ:9"%r&ka:$_nMa6b^+kHTF+iouFHEpM=Qp+iI(=0XAHTJA_&@RN^>dK6_@:>_hWB'^O`haTq\G-V]/KmpuX%GebEL';O6eRCs*R@g<Fi#SQMd&_geE_Jr0IOc'9ZJkn'IPIrXSLOD5.8or7[4#=WGmnEtl=f5(N4^Wb!eB&p?/HOmW34"`7%!r=[%'N4N^l&(!qBUeW3k^B!gf[9us^"uK[W\I8mDp'@\$Y`;66N0N%0A$QR3GOk7H1EGkQW^G&:'>ZG%9a^f0Z?SoPn)7DXpOkkPWI_`%A<KjI;YoOE7<W;BA0mW'_t>jO19O=)F>2p@/n%DR"M2GqkGK2"3X=k..Ua'@4a@G"?Cd$mAH>#$^I's:8ue&7[<IhKK_C8uPI-[X%B+-d9d,sjdRTuXS\kLV^"`+1pJ%C/,k[6UqG.B"<2$tk\&(^J\J#IVCFjTU#PfgSn$suL$`;KA:lL^5XQ&%L+:4fVkRSbk@HkW2Y%kTbSnqoN?j'k'QGZRcPK8/hho'"FB#Co0%@c=.pV*r@QF4ZQbB.<tdX<[_e3OXZ-I]tT,-CQs5412/K:XKo^I8UF;"`imL/,:a1l%FQA/,e/'ADfKR0V2:n4f1NRE=-3Y=4VQ.a7[hXY"<R>`]l)VWK`#T7j,Jpj>,4YjtJApDRfU?T3c<kO'UY)stcaSEa=#VgL16RTt%Q_#e"5*cWdS,<DHi]=h%`E9mlYVk$kR_Rd`NODD5U3$_1$oW"o%6Z&1m:(1>DJlAGFou.'G]2#;d.a40Dg[7ICT\7'J&,D0V4gGL%Orfa[hsY#NKO#"2@?)obSU<Gp]]jok%t)+U(DsUCR]u?!gpPP/ND<+%ZTNcLK435@kRdgJMi+7;JRR#U?js"uNgt$l^-9E<2:hhl%^YmC,a$n6S"n#k._C!%[icSSD9ZM!W;/1DJ'Yj=B5VL3]Hj!knY43WIk-CP/juGm:<j9U?$Gt@]\Y<)d1<WaBAcZ=m6Dkt3Hc*rI%1"_q1o#?gdD'V$[4Z<SaXU&b:4+QVA][kRIJ.7+3R$%-5WrI;td%mZT:6N6:]t#InS=)T>*&X2J)'lp$)MBW28RG;9J=P`F'Nri_%$Qejd]EkE(s4+?['L7/dDeZ@_&P(]e?.g@,B0MGqq`"9c(HgK@29X/Z#EJZWAhMl.#)XfTWA>:tD>/e"<hNK\W/Z]Z;&lZ6?'/$1%T_AA/r3b[U'QN3Y(*hk&je>:uF?[S]J$"]U[8A@2V0$O+^F&E6k6_&&qYn4gY;OoKL,3np\961#`uG1+NYhUN%"/=6Us\n&2W//k%8jb@f0kLPQiib5kKS)(%D,O5r`+k91o";t[$[CMNIn4I&K.bj`*-lCt>EDG:hsf6dCNdL]3K>II'C8\`"%+a%)hG+G>=f&54fW"_%<Wk<C>\bqu=VdjaNsKRHL!+sXc6d[;M%o'2,`l?h#]'VUqF&n)6"%;KYXtNo^_cM='R,h'#].`hH%0GO*p%Y*=AHS`ih-I+%>m,+%r<"1LNtm5*E(ddP;Bmb8-@\EkCG%I>1\2t8/2Z$\X]e567:9n2kIE=Jet,@k`k^(VUT[Gp2!\'cn\p$j+A.^-Di=XlCPHurf,Y's%bCI3bfo\/f'tQ9e>AfCPhY84(@!'^=?1,!(j,LgncP%]?Z3l.^h^A?0k!GFso"L_AdgYf3[>FEX+N'2,oDi[a5>V>H:^Q=+68/+L%k<tSVO01%eq]9VDf1ZoQ<m7q`[K<Zbg;F!D$>$1b;H2ja-[c))CTa8f1NW8G:*3jU=LR;l?iu0,cmhR5n8/rt!,RR1q$+Xc>WoW1%k3VVLRhl(5e\8d1fG6.!)['Ad[D&0!j+dNsA1\@/Mk@H9QS%(N2[HkSC+VG%J'qeUGg#Cgn@0u;!]e^\[mI;NIeu&tN99E]3&>32%f#CkRYZ+1VY7PMClspZDR6`Qmo'81,1DhsZD>FgTZeg##k,NA`1OfJ]5JgL>@%/]SH<"CkcOp:4=9_D@r=(?Q\V`r(bjQhgnHgb`%KaiLlr0s_`mhF&6Z_W-f"L]VEoF6ARq+=2=bb&G%J*5f,!4I)0Do#e-B*>ucY;K[@k)&i=_*?AI$i6=6),%fXZ=;?!I;MRBIR7CW%^&l@hDmgKJ23QXY\ScNn?[HA8hp?.3G5`HQ>'![[Ss_gSn;m='"aY$2,[$elQFE/uJ6gE"^NX;hAA\=jX]dF!Q7&j>[qp=MqZaab%>X`.8k)ToDa4oXcL%b]3qAJ/YTO0#0o"g@1T7Gm]QfJtTg@?)o5d)bXg>ARTRP4VgA571(<>Mf(Y?>R*":lCFX0@.]>7)'.\s_t#%`BQ/.;A?*-$qSoKQn.g_;C&P5Y:U@a2s@[3EcTILT/=M/8VdOrD+S7hctc94j;[_pEt(Ap1Ok:-r^\=ectc98C3?E28Ze'!Ztf`c%RJHgB"QchILh$>?!IsU9h<E"1ABj[O$.[9:IO/PAkd>J(asdFR-WV[@-E`Agf$J8pJGpu2NM?pQ9UQuL"?]38bZ`2RRq,N\%+jVj%I\Dm^8AhL`0pDfP2+o=;9(JfeXLUgA*-pEl8SSsWA-So&_0N58l\$6\n!5?g.X,,%7Y+5T5DtJ2;eV2O<$#5,`ZjZ$_C5MH.sklW%Y;^$dnVFu)5`VpK*eR`Rl$B>Y0K*:JUPVNU%t;nq8.37<dS:C!*:5QRH_pPd0'55<-dK?CX\._-UK(55eZi$UShNDFMALTD=,^$B%*<G;qe1@L]g/J=q]V#EHS7A%S$sI=L12qqV8(K4%U^",[;F[&!Kr0QuX%lSeaclPSEoD?M-kGK"o9d3f%,R0o4B^nch"@nSq*8TT%pIb%VHe<I/cE)65HhX?h;HeBN(Kl7R*cA+]7VClXH<3:Q&%dkCR5N/Dh/4?3"r=VneCK/FQ/tb:\'6+nQ/Ya:E,uIj3]"NPRcU]^%ADfHlB@a]V]f"%YV+"UZ<O,O-ScG_Y2#"Z-UnPSf;R_I),@V_?o-6(<Z9@&tJ`46K^_[ubgj9&>!(:!rF@E#<XIO)\s.pZLGQ9[c%_);M%>e<sf]WZ+t9dC_lMkRXA2sH/QcHOreTThJ.Sk*M9:V7NC7N\U<Y&_4eILH-IU18CDkT*Qs\qkRlPjFj!Mh5XSGD7[FcbK-g%!"*-c"cj75@=$`(^Yl8So$@_=M0;HPh9WhD&7#W<8*S]uB?NhI"`:Am@f8./=)`e6*Z:%CN9R:-1l*HmB7:c^,9;+>F44J)hMeRP%(=Z]1B;<&A;pH=?W4%AOA\b?<hEO1Y8_ePF)/MM.+S2HHUJ-(W+ScWb\5J`%4%`cLT`0PT2EIggd.sR;XV3s<FtkXr8*Hs)kUB&I%HqO#_Jh-IlAJ#m[oRQ6/DhVC6HQ7$Glb+/Cf>sd5DeWCH/.::/oY)Zi!!p66-SVb>4NQ:])i:(2oP3F*ET!\&%"(#.&ETI<IME2^%Jo6"EIM8sJFKDGEiUOdq9:,*qABm)i;HpF'8^R"r$s)de?lP+kKmo"^.02sbAqNHt,sGQD\`iZ!KZ(sDI+B$''V>7+-I4HdYL*/K%P?XJ.kN0on)i^ZHMm`IT'9+)$:spX8N[6:U!sP&d$4h7`0U,JMOkDH3c1,Wd$JLC=kQbB1ltl,C?1,Okq7Y3El)c.@/"aYNCOV@h%2^IJ0m"YVg]R5L%-gggL=`X!V(teo]FaM166:,mNG>^(T?uq<63\u8'B&`J=;;aZuL@T7cf*R6\W[1rp2/5R0fA_6ALrAKX3oKTd%jeE=fc5?f-bs9T9SaMocK'H''\4/-BRGUJ$?%Mp/5h@[H@5@>&WKQ)U'Vq?dmZa=KP"_#L1nktBQ3'cW7R<A)rD:h09?-a[L@[\'%RWjgq,jURQG,/%u=%Q'jO<5_*SJ55UmoGqb8673YB)S+-eoa\t\ta?lQRVIS(C^#&aljCCb"`=(MU=mqLTFu)C8E#e)23Z>qX^Xa%[2q!3Y[.8Qj5NRcEK,]61M;o(('P8[5bi+ZW/j5I+7Og1J7Ha`Ym7kc!_m?b?R!0#E[).IO-tFD(#)4TP4:m=`%8U$Yg=?:\`Q5L%RGW0#A]NJSY"uG`_20\Z(o<\][#<?]Le+2_K?qt$'l``o9;21S9e^8[`r%Q&Bi_E-k*cX"jF&[,%1>pD2mi^(<a1'DNN-2:',=]l%#$CO2GRlQn59'd^pH\2CA4b@W=9k,*df^f7]1%c>G%Ua;$KBi-97>dlPlanhDBp.j$(#a>p"uSQ]6(`6lNfb6Cj,m"8Vd1_X_g+$%P"MHElqQHoUrO?71M;pA!](UNJQT%,lb*HC'ke(o'OXdiFiaa$-A8=)9WsPP&;=8-bu1j-L\@t>Pd@4MQ__Y84#86X,-5Xg^rZHq%TKs8]MM)?7Xj3cO^^pcsEWj/R-YGU[R(,G(1V#mC(rMUpSlmj#Rhpd"P9*6\bl"oj=?a0RVHhL!2Dd&8k0(!!=?jo_;'uHo)F-9O%02-\d9#4%u'"OITR,o&K/*YFo/6kHQ9t?TZ'Zle%o$fU<2ta[m/ff4%3@#L:BO_)\BVW=>),<"'IV8Vs2@u:>V5#M1OVTg'?_QG_%lao;_VLQlk3VV`Y&grF$+9p_b5(g[r7f'8QB`F(JjA/@bG6Z&kR6/KS$s&XFcqT+D&=n\Cq(.XG$Qs7D"g-3$!@MklPYBL.bOh[>%50:?*T9FM/ITmAaruS+(dB[WWOA#br6JaK*7FEgh3os$Ugsg6kZu%32!6\\P`o;*1D*!D-_imaP),T1Mb[[:52b;QiV).]jU?O6[%.[)+kQ]%P#p@pe"*=usiFUB@G+7h;Z#*2^6Jo"hE9K_?K!G\[kTKS_<.@j,`;=j5'21=`5r,FPZ#*:j,a'>`O&L<$5V<YGnI-!t&%"M/loF'2-WbKNr*81,#8I3+d1>go%bbT?r4`8;.UR`:RD>JPcqj(N:!H1MmpfZ#BW:TTES\LL,NMN1OJc0K5XjtE9nhe)n1mKNb"%Un6p(C+J!N#pe7+ECRnni=_H#=_D/RSfBm-=0[UnoM?,:14rZkgq,q?+*M2oS$E5#YK9SFRC`%Xdc;-ohmSBg;QL0jl`ZB]/cf)F%b1JC%n;Cl?.AER?7*;S#R_oe$a+,NFYD_BY^N=)ep],?F$G_[&/tA%K*IXKSdcffqO?*_H1V$YhRiH9-$Us`3G2EFZ1,QO1,jgd7%cHnH)kfEX-8JjA$'K"JL?7:8g:U#d(>Wu\]AtFm,EP<;:m+nD^brILkO#!,7,S9$]%O9<:;jk'S(mg)2H+gs<7\W`7W=s16;Q^-U%B:\nU>Y,71U<kDFUpmsWe?8$u8)E%@7'E[+dKl+HMG\7e,!b)Z3S4P'YK?PG;OTYW;18[N]ij5a_,@Xj6!lD$GN,l%`b82&0%6nh%d="nuYCS(XO%Se].Wk7*`3).WOs[;ZqFeRXOdlV&Xj>4\M^V2k'7]LNqJ/$/O<SP@Q(J9q<jq>PITUegjuK\qhSr$\Sm'_X"WHpa%/<9i*0^\q#.85/\r,GI/Q3b:J!1f>\Eg&h3S_D6@<6T_[4t5u3noigpZ*(o*BBHZ`#SI@QRBtFYc&.a&PsCM/qbW)sn'*6*\"t0W%fG2i]^tWZ@9;+-\(h1:</N\QJW^CDdBIT7rR>n1#-o@9.manDK<0>"Zh9+unNasc+NX,#,iT?RJFCtMCTRrk"5hM/pP!+?[Vhm;7%$3t5[Q1NG/@<ATEn`>PTCLkn?7$3kT$Q?AN6EhX'qMg@h#/s$eX"%A,K?h\ZUB/9:115p+Ut/-]YlbF;(ob2("-(5O_<J1!^.c._%,fCh:VsB]D]kl`*XYr%8;BVkO<)0W"F%m-*1IkeGD'>\^^2dep\BJ2h3u)ks0ipl6U%*L2rA;g2F1"6D-a(i_BBJrCL9XUeT9JEF%BJ!LH5`rnG!E[ikFhoJXcFU9%>'E0L4Sm6CGpkq\I]_i)_2c`hF.+]&]#QpYaeJ$_-S'HsW:jsb0$+_ASQE&(nO"1a4R!dmiOQ>B%9"f@Mb.LV3pZQrQ3\b9.[+!=C6s\LpG?\_sbo&<f]j7`iMu$`9s$16Kp/2##<+Zo3PS]*@?\dg5(7>Ksh5&4%4#6i\_!@LK*kQ$0%`pZ?"K+ot8\mpd,1)>`hfU.W1-mB46(_L/)mC?g_X`#u`X"=J"/c';EJbP@CWW6RbT'`ZU:#[qd^*M*Wo52%D6k9jZ*;KMO&dZ9R%+hLnCUN*MaSKndVQBi!([F66<5he,CPJJZIB`25ncgTWIJbPARUb?I^rOEma)aB25"75qEdl3\#/Rq=to>+aIPV"/0r*/"HO%E:%%%_HL18g]o^U^Gq.)@WBa8dEM#UC""i/Bc@X22=TG/s"ouNTZ,.9%_Fj=e9`Ar.t-4)Jj)/S/>SP>Z(!7+$fG5N)ZBo(q^,C2fLQZ%YpLU+BT+r"@jo/$F3n36;9mCn8P7H^,6rVua#?V9bKgV`hD2&kT+"uJ40j=$f6X*H>H5&6AO=mTT:f,ISGLQl68tW.h'Z+)l"B+q%dDR8?)IrO$'QhsJQ8<S?8L]Am2jI""9/M7l-SlXP%H)BN^pgriCR-?]+V,KM-S=#kM\ac0<p<4?m0T'kY:Yr)5>a+UJmTdgL61sP%bp3\N(nUUt0PK[:`HT42GLsd!1NW7<LGYI?64nmuaQ"nsCSCH*em"^bLaWE`jf1#k^&kKk\k[to"bf9fMX@tU0(UZ;&-oCMA@0%>%oQ]#$k1X@t"f'RJTp+o+U"NM$LL=E0N/Z^GkBBp5rWVb'Jb&SYn/0;7Ppq?%V5>-&O:_Ns11prG%#G.Q(-,h^k@r"c1_Nt76#:;c%.K,a'2WDG.1.6#\k6V17bb%U)WZ$,WV'uuJp.@1S1X*?tg&la4G`D8n6HU7jF#:)G?+PW<'Uc-FEF)gn#'mk@B1\mFAH`sih9,M+%gKhYXOgULq/Etl1@2+42Vk3][)P*l9m%!lU"L&IO,a>k@1Tt^/:"kK^jIatc$r5(s"]pq/k0?0>ot[mk?Lb(%Qn4:?e2Be!Un@4M%U#7dR)n0CFcJY@l,k7gMURessl7^3Hh,UsXG)<bWmX;Z5Pp:?e1DoCpYHmrIO6.1;7-("[em@cLVp,tL+'ChOUN&?q\#mX(,@Nr:%:p3!erXtT&?jt2cYpu3:&6',fR%5*BVM*1C%R^&[iu(m#pgs(uPjD,_Fk>Q@1NW8WXu[eM$"OYbM@q*:jAb@Y/#9XmT]k;*\(/h.%RXQ)J'aDY@c^,mrfk=:W<m>j?fUF[<S-7Vq`G6'S@./pJYPK1m.rGa/Y#&1GpmF"_@q$u3?W7om7X7W-8dA>J%S"W6@<RATVJ%Y,%5:`@@0kR*cU:QtO\n`S;R5r=3VC+6jHUYDeAB%cF>=/ma@ND'L>RL5HRcQ8d;:i5YH)"=;D0[`sH"?lSL`uibj:p<[$`8`c3Ps0_%Zsj0Y%rKKSGjLbPQrsca?dO`skD-dSbh+mf5t6(C1-4u<M]fT#!:ma]CXCspqH)JRO\iOLP(6>&Sle2X/R;C[XrgK9PcV<%NL`(=%5^rJ[e>JGC:Oui'.i3r.b!-cl7FN[G([<2#*(@G=NW<D"FB<*OTf8E\9j'M5Iq1gp5?0i0SNq?W7HRlRM?gL+/SD=e=jRc;O7h>m%j<i#<oQ`,-]`-iC-p.ZaFsV-Ge)`uh\SIfl?OX9)ip&F#FsZ]!2IE`hR5YML[[m6&%!7AJpR-S&-\CHn&*.K@!Y)!L7P'MtOA)7@%MZ->"he"DS\r3XL,Z:W"'SX`Jq@!"5FjdTo/>kua'A9P.8DqFGlqZ*sl:UgZhTl88JRGqgTU99u[@tMp2/5LYQ1d#6!]0Kg&&?:;%.QN5i:-j,pO>J&lEaDUWY1c01jZqJJ)"@&Xg3l;nE]$U^=gL5n2&Oo\d-F^N=dP&4<GM(lmWAUeZ]]]%ZKeSY>"@HD9(E;$`7<FY%B"_F*)\uoqdK6PUM#&'88U!o*3]"P&X7?S0`79!NB$Km[$%6PjkquXY''W/Z%`"MZ\rDqTMGN.Vh)1&Ubktd]^0k*SH=Do)GDf\T%bT`iO=.L)3:B[gtA2s]id4#1@e:H"CaaD'"FX9hggi`N*E//-u-V(Sk\7FNTR#e=OSiu('MOOpI<uQdfo$;IJ,m7sTTtjM1+Id6d%VICen"2pofXlL?=6uR3^Sa;b'CZ-1sG%RmOV@7,e8SIKIfg$FS<C4>V)L\fWnLJ\oMDU?&6h06`(B\=hS?&1V`Uj-7#QV(%4L.gi%3g7eonSZcdf8n//,R>?>eeae6-P_JA5Jp5$(F&h!Qm`<(;jJ]@O;#%0K`f0p/,^@Y7L:X'TrT&V"#I=9%"r`c(4'7:f;Q&$Df%3Z%<:#5d58#qX"ng:EbQA"I/qO$fd472SqJf8GrUu_2,^AK+gL9R-#:e>qZm5$d-)#Bo8/4UEH.0"jVog+qi&HnE+H\Nnb\7)OH^G3T%\Ae;orPVmPC7m%(`QSI3mhT345=al&1"&MB.TImNU(!M_;ObKB0t<=?4=XbKQoL<Xg/K2H4OcK[EEjbS)O#-Bf@R_DY8r><gm`k7%9h@E&^RklQAh?-S%fEd;(`c%b,Du]$friPGn['9UK0m>3d;Xc=7R9K283jHL;Jl\fg-?QjFT0(d8XGWhABlN[<EQ-DS<!oQD[\um%U8`a%WXM^*2sHB68Um0c(%KhGdpkC_&C&Y?nu8^5aNas;lXP*V*9!>SG%T#8l/)grTtk%D9A(!:neT^%R#tpFoTf,bD_hP2Y@<#3%M:nVt(fY/;0Wgg.bo&+?T-OLBo&?$\f-IXXo>_#BQ?8ii'%e%7.)kJRN"!M6N$7+6Z%+=uoROW,OiUW2#.hm?bca9hh)1#TaST<B%Zu;XolQ.'LZTJr]LkDb5TubH_Q49)(d1L/8'.tmOhZ=DAPdE7<H_lj1OK+t+'dYi0!P.Nb+'J&u-WL^oWj)/SbDuNM,FeTG!FHoK%WQ5L_jh+DL-/`eSO3F4UUs08G&XYgtV/])BVh@gH=WUR[)6fi,pZq5TpWFmG1GHKu32;XjYK:/Zi\/8E&!C'h_g[@MQ]Sam]UjC[%i,W1cbjSONMhXWsIS@^+hAg6/ChEk4&c5HYr-OB\:!tnG':Gg#G#baN!+)LA)Fb8:F67LNO3FkrJIsLs@O`SNm@kpdC4j3N9gp@5%!fi78=[O/\<n<`Wmt7ql^[VQ0>F6*;WDC]5AU-#W!kB8d$e*s<,Nd:q+1D7>44&*/j,cG.,ksEqJ>b"+b,uJ-"GWa-fMWYaZloIO%=#LcM64qh*\MNi(V+G'U=!0>sp.6qa$=:Aq=,ou?P\8c"'rH868(aHQIf^+o0j[8nj,@=2\F,gFG%U^n=)+-15XUE.TEu_B!Zb1_%[([MBr-!AVR2<s_IjkH4[>B+@CitMshMrenS@c7-UV#ZuSXD]W#OS"2A/KCjK("Vpd\X%"Q:lR=M$AQsE6RkO4&96FprpQW[4e6J%%(*Hqf9+meeRq-BbT?pb@uh`L\!YSj2aC,n$Oj6_C1]j'kc/#b+\tnpT+o"6]#M:OR;X(uKuRW@?'$+?er(cbq7\L@$_0R'a>ZA7%V,(j"@,-k3)Ef]pWB(4PacClAhY;pq7UaaE!)-&T-.H46,A5T>jV=4?cidbPV=o(Bf4=>)U[8bGa,Q?%H'!GF7KN\*H+cn9mpoR(%:p=X[s7EhdJjMK(ApKWZO4G^QMfU[H."T2BL`&qTi%o1U4Vj2VO/oE4I7N/g9(M4deV2OoB"_F*nne%9de`V1(A5_$L22\)RJFO&%Ptr8,(R3.329XH-+(V=J%67d0Unr<)@T4oR'q<7oQ/Z"C__pNEbktd]^-&R0TPfd[GDf\TbT`iO=.L)3;Zs7$)aiPc2D6TR)RnuI%>aJ.Y@aQ[sAq;QPpm-,5Xl[ZW-uF.l)EHAY;ehMt7k$7fJ50i0B'LL9JCZ2gOJ.VfL(NTT-qkh^Z>'G#VU.>B*o1/%-\hI*mb4Rj%>K':K;$HG%+\HcC%+HV)8id\??%j:f`GbhHkfAJeK"#"YThpW7Kf1'>+V3(^Fll")3U7H*QO$!kF/,<ll7]ZRd7HJfBa$2eaIiXN%MW@D21RTio!ZEU<Yi66NK?J?/g?#+ZOHsc/0]Ai5\4Aq&VP@)E2gE@HT[Oo6]&r?"H#&I'EA0Cb)Z53',6sd\1hcJ>%$JIFR*7\6%eDoP#8reR:7>Do-WJ,r8n\@,Fe<o+YgnSYHh3n)PddU/20*"TO\?sAd^lngkJIt@0ka3WV0epbC(-Vh3UHO06>H0"<J2rJqr1LF?%q`a23'mF98-CIsj3[8I9cK>9FU79r+eQQYV/Fgk7Fh.GW&2A4ceijfm@lgJFR2LOHAuU=K>DnBAaWNmt(fK_WUs%d^1;E55eiF7I%^"YecVF(hB'W0@E5%`Wk$A(lA4l?g9CNLo;QT,#iOb0,?+>OD=^LmQCPgdjLhrocrmB/`f#L4.tjqI#Xc.N34aYkpoT^KsU&IFOr%YRH9k?'B;ZeWg<*MM^fs_kDI$AR/6QcHPb-c@9nH?,l9QRcVqY)p.esS[6T4>QX!D&tYe#q=kkI//6uH=k=@m1\5siq)%0V"bq55%]j'??aOqc6AVA_\lYf/9\nemqR5pbdh$-\t@!fr7TpICA^,,)qeS[3D!@"Fl@/#@&Y$k*?:ZTcj\O8Vf3`!Id_8guNU%"$gJ8FWX%:)=96RJGmH9Dd.UCA@Yk,@nYeBM$2JJEbG4=2)WB)6/4_`0j@,7EbaN'4Y$d%bZR5G@o,IFoM[i*Uf6A*pB!c+fA@jNs@_I%^6G^%`p;$jomZ$r]TVdD&/g9-"NgP'cacX!Bg"5dNM]X?`.3nWF`Z.j)I;MGe0,4#>-S$@Gd^GE2MlQ#XXB0:5j;4E2)j:-jeZqMi&C<Z%h;CROFIk;[-gXb#BqQNg"WoE6k/,=)WtDb<9lV'cMTj9M+T5>u4TSp;<@IXUUkj;qQ.h0-MW.0Kk34^,F1cRX/gpA6r:06S+TpXC%K4UgI,ZAQ8E5MZn'h[c,-]lhg*-dst#!l5\_,=DAL^-6O)^ge[o*/GPFI=BBHR7'f,j^?7WW\'uVuU0284X2ZJMisNbQ(0FA3i*<%Pckd/_)f@U?74'QCN=$9gMmE@!%<='V(H\"1>L-CF]fTdd+4%1kUe;/8Nb>Q:maiC#p[d;EOki-Eb(6Tfq\P.#q#L%c'kH(BB&uk%=XJiG2f'$_h!uA[S"^n?9<h3eSq>pH_jpD$X4q`GWB=>iS6PX]M$MlV=8bkQnPEJ0]1:-c7t(?G0/#'^SmCV4i(GT?>UdO$<^)Yi%TcV6+!2#I"jM#Vf^Ef@UGe6Jk]>^mj>Aksm.FDY^f-pf_QT-JV'\&[(_X<;ZV9gVR!/e3a-<o@,)SH4F58`9CJp&;WM83UpNgs5l%AIsC^%8^#)Oo]A3!hbJW+#bs9,k]P1O!mr>UYp@EJhS)*i-!LS&.W@8pP(#,lQD9N:[6^OXh(0_c`FV!.gh6H[6[al\eZGXP2UFr%BOPDDl6>FNJPuUkp\Mu.hV=8QNCs6m6[WLjo&NFHZp$)@X_b^iAbsk`&ep%)GpB&Ki[&91#[G.LBBJrCk'^*31@TMqB@bi!^"(=N%V+"B)Q*F6l*cj7Wi0'K4$rU3VC8/9#C%>4>*bAQs:KM<hZq6DgNCsHsBAq('jisi"WX-[YUq+o%Rc*9SaL*$^3W0iF\rN9dJaIA,%"9n9OJ=n:_Ghs:iKk>:9I]kR_1W9gun4LBkdh__+KbNe>nj#(u2L)PY_Y[Jh'Jg<3+J\LBbe\XaHD,<#^h*"qbjY5)/2Sss\D2c_%CFtT;gIeG@T^cajKsT;]%rql*U"HE1<f36FSMG0;]Hd#pV-35D9*R#(iQ->S]XOV\$Ye-k7tp:DJ^<Dj9i5Y,9-cr9ii-B'(VE<Z%&h#B.nK[3k>js(C^"*<eG*0h0BM*,'$BTH35q\/]]NtWKm+mg"cLLmA$]5=)r60K!]XO2P$Y`I;DaAl[">4b>ik:6X4rAn2!Z=5/%hSfZApKbG_778ZF2acN/G":[Va8:9^>V^9o$:i\%jh93g,,I_.*L3m."s.R3CU-5XR'I;^G3]'.Dj95TTSj3knV5%0!fsC$B$Kn@%H(7Gr](WKcUqP.Z&G$>,-,&uj>-A(d_?*ddb*i(=dX3hS*`q=EHFphVSlp`Rkc.)$+,tiP)s,<A?>dnEA)M>BNgs7B6&JL/S&=$K%K!*1Sfink^j"5-nU6X`%.<%/>S=/7bc'Ofj\<,CiXEVj7CRLNJ<]tTR`D-GYN1CHq"\]3LIA1k$VeHB4Q';<)Ae1Tm%"ZH!34!4B%l0=D.A?5+RIGg6i>aS[ZR1c)[6jph$6f9_C8*9P<1ZO`n/Bf)P)<``?#[Et<OnEU;#u:cLfd&k>AeEJ8Q]7p0KG&<d(.l7IS.]eo%\eFOZ]dI_2chDYBfcN4aLW@s09a*X[mc=4a>IQ=4E[mL0hDb"..,IjFIXd]X4#4QPRSQu"Kk>gH]j'@QCVF>dC8msXG)F(Fl'e\U%8ea;;?51]$Hkl]FW8"`ni`><;!J[7DT:Zo4QN0-S_N?X4RoeT"!HBdM@3O#GjRJ3)U-K+?)Zel7/Pr$#IjpanACI$+^-KCL'+C<D%*=:R810=;@OgfMdP;Zh?s$CMgH*0Kk<q+Zc2W+9'3!j6KcgnBErRC?D+n?*I"9l-BEa`5Ac^(<gL(XQSjIorm;R(MASS*G_Z`urF%[&1Ik``5-KjK1$!$3pd3n\bbQIPe9`!2OlEn'NK`O,n6lc1:_M`*-P:;db&\m$FenkjhAtgscY.0TiAW\\Y+TUZh=`73/teTr8BV%8=_I?_;;"q'L!,=Wh[k`Dkk^@X=B:_*2=Bl.rqGJ6"dO3EhtOt61meo5G(4k=Mg<.c:o!0'IhIlYX^,3pL=sGq_HD+hG&<TadK[t%=iM2QS7]/*03qR2-=AQ!Cf6Y`4(o[:kffLW!C5*I3'mDh4T<`Z)g$3N#aG2k`<al<>Dd;5qMZ<(qY-)L1r'WLJ1N8D>*9<;=-3-F%UXeT$[U$jBs3196p.`T'e3`PJ_bTD[@a0$h.>+FmcRY&j1V>16>YWJbQ9)M<;Ul1p[-^G"$k$<7V7[25>>#_eVj+!+ZK!Q%n&1X5%0h+U3$qN4tfA@hb$lpm<Jl:7CV_e*;2KL3!b&G<2Yq26EQkY8/O)c!/S=/8(_nW#l=&?WOF#t9R[n&oHCg3"hUj]#&hiP(&3ois=%rj*G1!=?>gnJ%U23iH;O>[-q;EeR.6hKT.6AQ8J<][nOs";mQnNhSb9rc7h>#KA;h\qqSo2UA-9KpLPs"Y1>DD\5C7kY:P[B!nG'%]H9^dkV@1pHb9&SC&Ve52%,-0l[(83R5oUN39;p'kM5qfM(V;^];;!p*U#as7=h2-`PT>U#HkU9%/s)M<Li/5aGnBX?ZK\'4DE+6%ma3E$'6El'6Vg:\9Fu8NA"$I!f9`'V?_:J@NK#o<`_E.(!0BL:8"eQ:+@u(e#90s^A"fP?1M'!1JTC1N%3*=Cp+6.trs'B^=%19"%\MbneCNp/=l'#U(h(5BMf-!!NRSO&=DuIcRd6ZS8/k"i1`c'%A9iO*Yrma@JNAG_Gl:M+DTUA%!A0HCn@Sg%EH#,5fBS'j#?M$=V%@0@_R>qH^?L$UrF^3Jn\S1Rq%<Xu^\bl7QLr\T6Po;H[1W\8AYR\t+:rIh6mUMPom$E?K-Gf[2ISWk]I<PSTNW@iC3jOFmLd$P-`%m%tlW`(kAe"eL7W>1IPd]0FU'm>)gdEg\0@7fYr]M:!158ZXB9!!S(%Sp&3=?)t<Q+O3IA1L>cQf?>3A?2>XZ8ZXap.;2MPY8#8F%qS[VfNZ+Wh?!F,b;82$^j#UbS@,f7rjk0Xd6$bYHR5\Jt:n0LUbI`d7q3g31XYAOO!h`PPTE4c-9NbM2-tG:M%PcX'B6&1*8lEsY%[7?cN<#6573l]#,=$u[*EVlL%UAG"`'C0:VV-;lSi,4bSK7\V3'%(^&F!q_"j]^sgd@I!]kP'1;0^qQV,a\V4k4T+_!>[&t-iiPM%YaA3>FKT=#B@\V0jq-mU_)Y[J'[''.:Urnl6&MY.jS;F;l$[HZMG_[Cn!3$6Tn[>`adMgFH*8]JQ\^qgJjmo@au"jR(?Nd<?E_JK%3Xs[dPr%b'?O@0WBT`4f,"8i;e>T%iaa/U%PRF^<D]*C?^/ShU=#%jcq7Y4(HD>NjH9&=g/aoNJ(*RNOeO^W?7Gum0_u8Z(KIB$&%'WLf)\?4br#&l6DAd^4'GXBD+CR,cV_c)l-=k_MU^FGipPdWRiPSD_QNKrFs/b&/t`;KV2Of'!BIIlj$/armSB@bi!^%KTR8?8n>%Mu'J3n87a7r*HSL-YqWYjE"qXnfeWZqSLHD)]P7"'Ek3Aa:GHhRuXNY`@#HZ.S;]W^K6k"f"a/dkKJ7]]XOV\$Ye-k7tp:DJSU=;%M%34=R1-TO)Ga9V^Ho`k*p$t.Y"i-K!&CQkBNubNKT0Wq/C3SgL8(W`[(V_o+Vo,B(eW+reS4uk3Mm^G5>mlXUJOWZLXi'1a_M>j%FX]i;pP+>BkS`A&J8WnM$s]QTcE+LuX5q'"Rh<Gupp8,!&P!re`Z.;4r)k?EVJqF.\&f<THZN-B1bKYj@`L9?QD`([as*&:Bn2'o%?aqnG^.\FJ3:scodR*GdZr7%?/KT/o/'7+G\3@YTE',l3/a]ZI(?mA2lDTN0?f/1WKuFj<Vl?c]nfW*`.bY:K7k.o^k/s<h?A`M`%e!W):dt()c%33g#"+."*!P2n4m)[X/+:Kd:(T<\Z.V^s6^/pI.5VL)646jn4\%!6/a=<f@%`p3^:I$SNp#:I5IW',G#Gd^GRV[+Y%c178#RJ;s`dLH_`a9mQ'/q"qW9)@a'V%(B[UmL%d&O/(d2`)V<?A`OfesZ2SGqUJM9'NIUcH=cg"5bG4b]i<<pKdTZ*HKC.41!dG%Ji2P6.B=b,HiO"JDTMM7J)n<.g.u!:Y,Pf!cC;edHUJY>]\?*q)1Ur1)6O5E,O^U,psR(?)@:TJ]WhKUP!qYgnl[D*p$`CA;tudV%7`Tu##e:.kSQYEIpX1[PN#)A6<l.TD\G"Po1M[3t+fN?7WRsP>C!WPr3WmOF?;B*;YVU'\VoVot]Jbjf\E3R@#8<DS6O!.tDM5A.%I'`pg4eA%u/'Y!d!S9H<1[FH!?CBtF85&Z&&bX3=!S;u!RJFO&Pu$iNY(9tnegul=g3hit;NDcc6A94pXY@H!N6NluL>p\ZJEof)%bktd]^0(P6b]ma5>M`T3]S3`XWhVn(MSQX?,oBeD[+<n*$eUe]:t_90/i3-s=csS>(nR#N$eX)#4c#_TDiucG9S)LEou)-b\G$Zt%,+ms7F-6#`6f?_YM>8b[oYhBO#/$L0mkR7g+^":NM]l1O4rFFRC\X=n0(nc=lcV/8m`^!h]U+daV=`>;B4^FoJSUICMH=>q>V5?P%]0%i6,r47+gHc5=l7j"LM9@GNV(<NsYXA]+3G%-+*072/]`1ZD/2QR474Vo@[C26>A),>T9#4%YL$9f/0pDH[pb6DOT)gJm8PNP;%jcI9[F]\+ET#8mumsjGmF%(/$#j\G\;qIOTK&;^^ZadqQ)r9;;_H]1Bnp$=tnr7D4epb6VWe,oWD>%K]N/:9:drEah==KaQnEoba%>at(<FM#_ba^=B$Q\P=0q@J)M;FIZ*K4iadO.I;]R9GtXd8udlBq\=n;.]\BRrc^]Q('6>2VQIb;i'Z;rss?%'eZf]ZPRP7cLhs%%jF%sRR#.'d1L8)'Ka`3k")a;GD$(rid\^!D^6C&2eO,rQaDoFZK(ejgq^C8-7Cf;&>bkX_%VOh]E'61QRA4LAj-4VCPnCI>l<%JH%9ZglsSaVZN6K9<VB6fARFOhd7(Y.4cE1k!I8[0'\;Q3^dP$3tG$gm25aKl,B_^T^ZML<sk=MquqSqeL_ne%/MYKCju3M2_GaWf=j%l(H.8%Ja]oQd>g*<QbfpBU-Q6lt\MLgS\gTTj_J09UE$\3La%3-=,#)kS?cGr!mPRT,8l_&ToV"&(6YZNA_\'p<$pOo!B6oP\k66%1l/=9dPWKEbaRXi9-7D>LC(F`EYhHs*No79>rQ(Jh4",+:G1t_Sdn;KPqn=]5VGBrm:PMMUm^g-Khc-d@Ff=Mk'H\_11uf0,trht%$uPod$^J_"BsBDF6:Iji)oe?Do;P&kN!>S@P]1K.Zm%RQTY7/YO4cl(@Y;dWc:tmA'p$SHaW)2m?F8tBJ:LYc\IP(o*ZS=h]QD9Q%VWAE2osrcb..jtdpSKI+<jMlIB%6'PJGX2u[YkpDUpF7<7`G%BH=m/45US#`/XCb[2>i^ok&Sh9W1:b*EAi.REeRQGTeP4r@1AD;%_9uF7S6L)h-qEFR@Z%a&BEMWt9D[kB\Sh8+29Q@73+Q\jJFg)B_Jq?;]?smc<oU:j:&Ck'+H[0KV,[R8r_iRu\hJMmPXjlFR2oH_%#O!6<4J^>6P$j]_2!=1eCL$.eo<YqNorEE['rj2;OWPA&T^Q.WPsEL%8LMT*dZOEJ2QKRR\0;X+Lk3"l0&7uZY^7M9N0Oe(ia*s&%I!`VLc#PtRApJo/!.?)qZL2$i1BX$;O/-9XR>^f7X02Z`hX=]fP\9.Q9(OKGl^BYWB"_L,.j;D.Bh9d,UAgOgFZiWoRG[=1q38=1%NP[ibApGE#,Z9eC&4u1(%LV=\YX,NlB,g(,%E56PXm;,?bktd]5/#jaB(_`un!<]K1iFP>]'?5USKdPtH;C4#9q<-Z41;!78]OI#%e\=[4@ok_Y&qOh_n<(,E=2LdV7[H*`]Y0Kl4Q4@2HKoXMh0?UB`M_.%f,Nh>q7WKt;V^XYFaR`5?/DW$GS/B9p3;kp\*@k_1Zb&#%]t#S!Wk3\sNfU8E?:=ND)LdhPfR2W\qJXF'%V_`0OB.67e_RB`atrX96h@.cgGS?mb^-n6\"[$$Zm_uM6?^Me27?]$>3nsL8<Vrc%f(LC_\s8j:5]^9;p:06*T38K_n>_pJ$SOmu$$3RA)%*_h[^EDZq>%M8_"C6DjF&[,hnfG]P!!a@/ah_<^88/\XG_m!`WWFLatrX9%]cs(X!nX7.1M`;CYPa</>R`B*q8+:\,kT/STXcsI=t)YS"KiQ`1\5siq%OLP-68^]n!<]K0lJ5;9'W@2SK`#uI#A;7Mrn'$kt=aC%CXVa@od2#1PH5hk]A.!cnYrJ5os/^P^2pm#Qibm4j"p#go%n]T/Ykg8/X$*H$sX;"OngUVpgae<HLf.'(DA?,Gk"lP+fuI9N.K12%4#5\Rh-]ID>_A'_XLHB"/"/n!Mm>AnA>]i@'<>n(*;L4'ka_2l%+)FWrLbZ[jAfqKp*MMZ+m2s0i1%_4"4sX7,AWS]Y8hf*Ur8k(%.rQ>SfLo8X'WL?>,>RUL)N-B:\gruUr0=!+^7HK\"_K!+nJ>Gk,%p'4L1Z&(XNON7ha[7W`kH0-8(R^$jk1#D@W4VXA5Hm0o"Zcm%1(&I+37=b!Ui$ke)"Un%:cQa?;)Y"mLi'XV0O1e*BBIpD4MB5K';W#0>]b%d!T8798gua9^jY7'O0"u8Fi1:lE^;t`[&]ulQ=]Pj%&&CLX/]m5cr">m\J30:!Pp8QqY-<@@S`"EZ,@"*;Xn5]\21*"\f;$ETq6S,Wpl?SJ3QGqm1GXeK9"Ql06b[YOpr_fb/FjMm[3F9*%as\hmMK%Z`VUWbE_%L62$KiaAK;"@MR>t%sCZD:Bb["6ff/[o?K-P/t(TuJ(eb'I58Njf&E17[8Hu%=LEud^nNDV*<Wm"ZZ!N=%<%"9G<.@arfN&mUWSn<Qq`?6.>8REZ`P3:'@0d?*4AqQfNrPD.C3ongIAe+q5a=e:V1Q%;K5e]>S@E9W6"LhZ)%U6%YO/OeK<cC$)V%32DXG[(0IH$3nWUrL+e`SbB4!LGSOKV-2$:9*R"aE+HXfhV5$.<6@+ldAX\2pa&Gnb:*LZCW2Mj=TJB"<\/U<&7Xp48u1n"p6[I8%*Sk:4(i<M79o"q0M$?/Tchhl[F[!-DH21'\.L`G%18?0b->:smF33+NGG1C40]8_JFVi$,\f>nlGK$[-5;JnO</*Rj2^u^k0gS/-%8>Ygu.g),RF_%XLQ=cE1)(V94A+G.MjZPUS%e7ZVAZUonTB/M01O4R40icA<I:CQ-R'SOgXjjC@VD!&R%/u]R.S7VlFE^,LY+Bb&%nL3/lRI'sJE/MHm=WNoGO1@"f:cEMp%6hNEACk5P1M`:X0Xp\6<@5_&%'h:U9O<qf9Ce;g[n/'IQW.KcTTJ`e-%N>LV0j?I/(828%*aS=`!aKXSBBH\NaK(Tp,en8ppc,JR0rU;`g(6Y+ikuRJ2*Kf7SOL8sILfB81/m(thjEK^V"FH/WTD@Ro]^N[>hT'3o@o:7:@ncl%L2YX5,NFb4(oc0pmGjXAI:iF/YN%Ytie#jVd--5JHd>7>a_lD*<EX42c#??b?;8"6c=13qK6.:A%__+VB'IXfM``$EoJV>+!\Tsk%AH!u5/X?tLb_l3BTd=Y)1Aoi,:lbd>/_c\c?U?[VPAN+^jc<Hm\ODS(A:Sc8R6t#57%tf)D@<jFOgqSY6`-b4@L\8S@E-D]j#U_b%&`"hcbXbg.gI\("(@?hA9qrfi(c5PC%80V&1iP?\N.MWu8e^<+0fp'<O\%ppP`kKUbGI5%m)klkRBoE&)cFtG&.`'K32NT0>qV8.%@cl;J7Q6NlBTd#8>Y2B'hi1[eB@=K[/*6Y=.&Ngkj;/Q%45q)qcHqiH4u:e3L\+lE,^UG#W4FD2P6.o:A6#[hP^G1LB9W_?KT1S=%[@g;\p9unV1aZ!ereSn;ZPgL3PaeAikOm&(akn=][YV7Mn_])\1EQPl'kp!H1,\*a4%#EHcu`++90V&`8N#YI3IUi_Eq262+Qg;Z%oNc1]'C1"A@/H5I9_ObQWS0I5g.5AqH&UpgXXb6Z$://ZiDF:GLjnE[RqjP)A.`Lo96'CGj&_k@ZU5U<*c>KMY$%K*#F.?p&SsSp%OA5)$.A`/U7o<ed5kQn#$)MU9&,O0_6UId>cXtZESR'1nIh8<oDa![*m@H(<3?csK#UPXrD2ar:k3/[UFJKkh%!"b53DC61!F8Q7%g.RjV^55%qjD"YIgb.9-4rUWTmRud6$d[%8UBs(ah9@(u@O->d6(\T^>`-S,l12)W@1)ei>XiL)WJkFXAP]jqMVRG8DGNHP(A>u9%Bm7=H/),,Wc5(P#)=&0NJtj5YT9]:&4Y';:Roj1G\@TR5>3+G*9[N;so^dH!q43.i"C5[c86faG,3RdTa6bpmAp]Z`)JGgWADIp5%-rAl0))e>Q#KG<:+)!g89iA8UI5G(LrO`^%Hqik:1)4HapZe/pM]c<:nAq'[<R[9j#.YV`PchqnL^&TjS<9,/<'Ve\6G)h[3sm^>%8%a`)h>6;,<#g2@)\SQl7Rg1?Ak55_,iDSN8(QGVku7gC=eSDfC2/ln9Wg:?L>=G!q',&^Ki8+,Vsqe*2ti%7aI,nndn8U4J]j4H%32;3BW$V7d;G.Agk2uP5;:,i9A8Jh?CPY;<<Xsfb+Tc&GQU:(LO$bPdPE:aa+"L>/r_)0i=c^eqNA_PH8=7_,jhG@_'oMeJTun%+%jB84).62ge0L`T31H$@7aBpAWY/r(+s!kenPb#<Cl1/)?bTD0L_X+(!$B<9`hZ_kqUneM5fOU8:6]R<pbru7$k?FObf&dm16D95U%O!*I&T#+q8RkCI&*4KkL;qX\'[lFpYA)b<*^cRNdQl%WAdfaa@6;`/dVWa5XqklQClIT/UZJ9U;T4/A(<]i.PG;Qu#l@0[UYNp"/%!'3LH6B(cqQ>\5Ir(W?@[!u-F.?J&+ENns\m_L56]lR``**4^O8G>Z^G]."m3@O,q3U[p]/s'T^W@0SD[3WAka;r>5?m7-9mF+tI%,ilW,p=&3ASsV`g-R9mGmA9g%b*D,51mt4SRPRl&T(P0q["'8RQsElCJV(4C?c)3032L(UZhL\!T,2i`rqN`!e;g4q)2VC[I"4ma%+Af=ggQqDT;ok<47`)/R4'7[:7H*$tf9-#EjuZ*,:#iM;^2nI.]lR`90Dp"#6IW-grPTJ94EhJb^9,gqkh:<geFT.Wqe!S4'hJoO%hTbR)FfBaDE8?-klg=8s'eR[^:*]/qQI;5_4_D!j12se0KmF;B:J&1,YUM!M->U;nhk/>9\H;!iV'aW79olAY?G!TB/s@-D2#<\2%<p;q7%&fV?XOR\JOE(eT+L1Xt)@4!O5q^,n;d@''Onl]=]RrD7"C.;c`-Ju)GJ*hhd2I)@"oU0V0jTh5Onl[sPYYGADg-<84R%<l%C<G!D3VUc70%0\S7(Ljd3]edm'OS-adhN(WGi($nV]%#A'g8kZ0(5oRhD/7LePR8I7GnPOoYi6]Of_N+\Lim*SY0%8?;TRb=eA=i%^1Wr<kNA,*k+\=Rp0->fd.:9^-R7)seeLQ?Muq(f$#j$b$#a5VR5`6fB;6U,+f9eUHLjbX'gWk.5;.$InamP1\MVZ>'JRYfTM%ZO%3l_Zifbdm2O\A&d%]]XelGRL44+(Z#^ZqUDjtI.*m/!QX.$X@@;IPK)PQ/l)H-MIE7CbO;)VpVqGV<'!Q18a_T""/KmDSkqYmH(D%hRZ4,BVZ&o+]]CG4Ak%VU;'0k@$:%D1+cXa%89iMNp9W:Nh6)U"TjfV/kXnJS+2BOjk65MhaS4t\YfSaWDQ2<e2b[iQ*nZ<=t!-B%KVqB+Tu`,UFV8u7s5E475n4Q9e>gE%>jU59Ru0#9S&+2G*gto_n3g2YXA"@s[U:ek;B`<*-fY8iAjrO8LbjY60C;K./\S6r1FNqC%9Zs7Js!E-t(anIT,n[8TB4b:mq[e=fhZ7IB0ZQsUAb*F7'2Y==/<`/?NfqGQT1j/oqFF1bM>g#J7-VYiQ.cuA*aR(;Onk3#BGI)[%@$153#6eIoRKdWOngOTiFK9Fm]ZQTX#e.dE+,a\\-t/R[=^!o%#bo.((4^D\>P'5J:X#GiI6rA*[:mLDE==lA$H(F^Z+QIt$p%<3%ho>Etfn%Oqm']$?&`d)!"5g9_(6'aT91ttfiR[k>>kX$MmnksmgT=/h9H3A<q@$>u35#]lmrMt:j=XBT4ih@a8dqrL=`Vk,RXOnm%F^9I:TVB!9^5GC?5*f+O*n/\JcEQFt[MA7OX\$uu]'-Ou/6=?M8=rN:>i*ep29W$r.Q'i=EG?8X2CV6k%$q6`)RLe8Z_;X*Fdt5V%*4.NnH_iG*Kcl(CM,#M&:5%nQcH`N#bH$u"dF&nZ,M.;T&o#CC.k244GRfUtW##f=#X4fcL&&DgQ%d4(!fqDGB$Ko-1)KQ=Apdd>%hHuYm;$KfM=+*sMrt^b'HD!K;=GtZQBV,F%l]drbh[@PmZu:)4N^qC,`P#91abQi5P'tZ!USa'_f_PJ1*O/<m]kZR<Tmh-p[:e&P%6h$sU2=3IIZ_@0B#X>*MQlVT51i9$GR\6\cl+H$*66<W5b^-n6/>8l\_n-n_\QT&?TrT[(m)7$ijjatp'M]Nn4(rQp)b[E^\7FNS%$dPjR@gW-=dk"l$XfN9]/Hd^u4!ifGAgcFSAc!Y:>?ru,On3I1D]Q1*B@0XJAaK?oXs6sPjen!5os+*@@aQ6d/hu!0A!.g'+"`$o%@QC`+H1]6+=rQK7V4AoGrR,Be_<13n\rkE5n`B^f7b9@V1;?nZ&+>"u(U0DhD\r.o=^#@C]M:&Arq?>h^[U?PD'%>qS+>\>YPJ<d%,AWT8D.CY`!(`M9]sFilCJrI\H=*1^,Gg[b_u$&-'A"99]^M-HP9o]%/4\:Gjh8(G>=PZj3iZ\f#[GDd#s=W&OCg'e2RMAoruF29%Bj<E4"YE6qS#B_g=d'YAi%L5E.nk0>;,$PZTUOEbP?/EoDu#_Yo3M@WK.Zj6ZYV8Y9(LOgMi?L8"KS=_@3j(hm?k!m$0t=]@LIQ,%bE;HE-<P-$3ruYnBd*7\$.>1<bN=bs.Gf9ep%?(Q/%aQHOM(80,+V.m*>PjNo6UsLj_]A.(4ZNHlc,L075M-oP5[.K7qH2O>S?N/%/8*O;*Y4ValhU\)(H4d8Q&"3f'*X()F]5?IU%jik8tKO9Aq$p?'Zqd,p&GHh#4.P)-X\s@hC`_=mF1Te-MRR*Mj3F;T\b4@i)@el%B9DjRiKV0VK=3JKf=S?8\7FM(=jF*O*[;)EWZ7;Ec-7'mo.%/!9Z\sA8SP#GakA0Gf0MJR^K6kB;1U*,3O@Qpn#^<\;HgKY;'e;8%i&YOGpE2.dQIhli[r-CtW$jfae<-!n0e.,G/P"AC03`jF;=)7]if1nd`?mMn1s9plqo3BS']5Vd=)`OtIW&m`6j:;ljhuGV\@9Ad%aCpD;(.j"7$GIOe2(D^Hb*T'B'ssK6Zb1bOW8s'A('pBRpY$O!6TS5He_)m,]FDiH\0--Yfoc$B+o)`g\>#9Flg=7L>%X&I>>q*C%Yu:e.WPaUQF[]LC!:RC6!E$*)5gbTq"psfu!E!un/n``dc[&JfOHD/D6W-4:mD.rMC</&70t/V7]fTUHYlq,uqLlC:Zg4,%RHp@H%>0`pW9f);`ncmpMFJPeT'Qm"ddL*Qc)<FEf8CFIhjWip=bcVNL`*6H)nWG9=0pG*-]D2oH-#))+F'AIoj9iFt)2J^BU:sL.4ak9(%Rb8G8*LX6*VV:,7(/.H8X1TB6'g%&-S9\9MAU_O7XZuj8oKKT3JiY[%G;LuB/LV<a9q=r80_:19`Fkq)FcMPLlMl[S-2[,ajGE\L%ZIYZ3C<]Qsd$tpM(<9S87;>ic^=`V<$\"!q0kKlsr$r4"hr(tUG(foDhY2)&FgJ*BOY-E1V2]tHkoUf/2E0i(eXGEmEM^$a5gi0p%XdNIgglXUDCsnG+jtZ^bCAL9S6LRf;9HTt@LVBF"Br;cG.hTGnneHOfArd1DjF*M7#o#2IOT:MMZ*uEI"*e,i$Fr(p!PAC3_7-Go%E9VC^kXrq&IKJDq`T80_=?j5Y:qho*++L!\rrCq+eG@E6+&/ng0&l.@QO1`e_A(e6;Drrhc7SnjY7pMSp!LKB+Wd+rB$KnnKna=^%7bLcCkVP"^>1T9aCQp[`fhd'Q6Aih`3qC!D,TkCBW[he/B"_L,$[lfUd2O*@Q1QHr/a:GSa(tphZ;;\%+TO#sasZtdl:P6O=gPbi%:"CtG'iW`bLrgS;%[%DjFNp]uIg^+J#E0JpIrF0C48tP9B\+S,bjUNXIcG?T:)KVWjTY=.5'u=.6(q[[7o^U;M;oi[Q@':276*)8%P=[)hrcSU@J@?8C$]6S&Oo\'DF+_5]h:3U![o8a0e49Eg?"@S5q9R8,a.Q"R"JfaDnVt9e75s^9[#0:3(]N!?i_q7'HlhX2q7WPK%iGV#Uj.1,i#sVJgXjr(#KYO?NjP8f\1OkF#l-+.0c8E\9(];kLiP"cj\CQPDV1Olid5!rGDb\i.q_Rh6n'DW<l,FjBo>]ZSH%A:d%/?6)6Ql#bQWdR+jDb\jYpbVNrBX2_Xd*J)N[&+$]0t?r<(<IB[.*tpSa?@r.neHXi]&p>kRI=D6&,9AZp$-[3]lRc:0Dp"$hY::o%MD+a/dl!p!b^AG&IVQfA]m?5PDjU35`EK(EA:2^+D5ReIc7IL2@?+#g]'SphSji25"muF_&q)iHb9[7O^-/f7H*g0SdU/cVc0KHh%Ed5Hc`(EN,lPm?2+L\Ggg]/e;e_e"$[%EcD/'XF4<S+S/On3a9mtgccU,D.`bP>XO__n:hbktf9aeuM#n($aFRcTf-?b4<bB/pj!%e40Nj!0dKJ.AieTKX=X)8Sbi5ZlaSN/'4\U)qUk:RIt`KD^G"@dAj.*b1J-E?]60b,e#pX'D?R.$<hBM8$Gtia$qW;PMD;nZTMh7%kre^66bb'\;GbFlYDT?edB^W-fs=dpJOqY<dD*P::"P?t1\9d(/h:`<;'fES`s[;'!a[\tCW'Ct>LBpQOB"ljQBQ^N8+\Cb%.l@I%k:n@SMB6?9A"0+;\#Sn"oZ6n'Xf4#["Xoo:$d'00RTX'-N7f8A)C#_ZiMPcQI1$D$HMUXcPDSlUqNbn"qN:MhcV^OI:qNIoq7D2B%i4!ri)MPX.`HK((n6bZh:rpXe*n!?2p^4dt)DQ\Qrfeic"h0UVlQuMHDae!Koc^h<]NN@OY9Qqf'j(14-%#:sI`jUeqont0\AUE.%Y=^8+'n)!VKf!>9P\e:c<qn7>=%oSaL4G=lJ?BFP>HSk#BBDuF6;`ffD@`M.'n4?3'mWhfO0[<c]\p7M+"g'9Yqca$rC+NM^Qht8%=XWAJIC\\Xo-[tm]5Ga%RZs-in6>U.=Mg:<dZ"F.lik--!Nr)UHgH;5hJ_mfXr5`%k.aEo-Y<r+MJk\pDcL/DaH?/%4R()2-SCAU%=Q$ZuO(A&QNm\AX=%Ri0Z()HrGhDQs\G3Y_Ys'O+bgBi*D:\**=r6Og+phu+$'bV(d^UR\>2GB!bA10*@87P-)]K\a4?RK%7&;r]%j54D\[B0MBpCMH%lU%1+4?.,PRdc[7oNqZ\LOEd;4\FU?<2l'km\;)!jO+5Z4p:]_>p=5>n&Y?.Sq.-1WRb]>R].B,>!tg,c\>nr%GEGI20i?ui1YVm[l>\HO"*3V!(+>\.nG(XKk%q=YaBU&\B.a#kQ]O]hYE5.q:(d8%GMp^)5RJKq=+Y![St6W]TCiF@f_<pqM@?^A%>uprMA<G:@Po*S7LdI+hiluO8ofN@?a>,60r?$D&O8j]=bm)Wc8WYQIQ$<'HP01+Pb:./uOWGZ_8<+]$K_>RITrCRiW_]CG3DA]%%cMPQKB,laZ@*e6g,1lJO1NVrg1V=Uo[.?tP1<*\/4YsY)Qdp90@@^Ocb9OkqXYM_V>*)bhnVdS`j_5XPe,cYV?eoZHb=09o1=pj5%C(qD$\jp);Rd&g'JY%g-cgGg7fDOkho4O8-@R?Fd1AoKE?6ps(/a+DCb>:kdR6DX4gXr!j;0?d)Q'Ft(nQ^pe^+JKL75%6d=J9%O%i!btBc(_i8iQeO4]Gr=$9T`V6fN4N)Xj@u&g0bA@O-CtNY)HCs7NoH(FLbq"6Mu5X>iEee3L`\f$O9a%g8Y,/Q.d1&^foB$!gT$h%OP2KVK_n77/r:R%kj[h&-dCq!%$Ic]D9e]?cH5B5\n4d2R;8";6L)[.Ij_Qlr`9'=0\Au%g3:hIl1#GMB5s%8DRoJ)&ejP&[<@Rl%Ng@s%IQ:Ca8O%.`Gla!Zd'Zc],pb!M9]iS#'gfUA?\2I$6u-lLLp$R+BBF#-d0]B+NGlS>Vc5u1/l.J\5ZG\&J60L@(Z=+.O?/LB%O\-UMRq<bj;N^g8q@i<5?2=LFEuY:PH]Vs7$-e>8alZ"i6W("iY0g6lH"P=lQn]hb:buJ%;u;rFeRo,E6%1^+6e>S:O5-0T.K=5Z%.#8*U?cH:>^Y>@Tr;RFONg]Sd^QS+1Ef522VQ@C"3LbYi*hNjGWqON&jg?U,VPNNe'^NR2Z94J:4L4t:6b9Y$VC'>oXu*#3Z7][a%Y_Fi6rc4?L(3mTs]]2R$9Uihr?\$`PG?KqCZi'%ME%<,67Dt$A>7=R[ECf(7')jW^4Ylr!J^Rjli)>geekc3)VeeZFKG<8#.]$d`%Xs?/mI,Ams`'!ob,ObdQ$5?90[9G-i'Le=a,+rZb1s8:UoFRJgP.CuENm&R_9R62Oa<RCK$rkDV-qXfqj#ttd7I(?32XOElk`Vt2%6S9;g'\JUIBUE5H@bafT2X).0IV,`W;?BJXQ5l%mRdj,43bU-UF_&bfMXKj[jE@V*F8`t_T#iXM/5d:H-tK%uZkPp)Lr1X<i\4P%%>IB]5jAB1--%^8L?as^iT:*%-8Nh*2;@(Z*f-I`!_eLZ3NLUd;<?QKrr@C`N3KW*3[a]cTJNS%Nf]Z+q?G3.K8R0B^)gN*H*.of?%$p8DtigGCl;j<`rr*WC`^`3rhL".1p1eT@$9*QGYE+Zdh*fj?d2='<6r,m?pSHUiXaWNd.1CU1C*m4t0Sak^AVGlJ,8N^nrdLB+8%=Al=*4ANqZ[rs/EaA\NC?_?mP)2udEVGP9'9_Hu&CW^/JC(8O5Q/p!4QR>Ep'0V_)1Z^YGW(hr$;_EPq2:L@C^Zcfcjij5hP/D%I%2/,^7Mpa8LQ5Fm#9u,9#Z>..%JPI/=`N[8Fp_>5-'`Q3Tg<I9\0`E^8Xs6QXe,[RPGEX*2i65HO!Um"Ap>m:;r(ilV_YSf#WE<G1%OB+$A2C$LSMEp:#IU.7JRY7:n1H!NlMS?$K_Ql#bQ,pL-f-AG#3LchKW\@^]Vu!mB81q="?m6h"J"TUDf(h$pILlK&Ue"DgXEG3&%YXMSrMX^A.Mq4AsP9_Nn]gZ"aEoP=RklmAP,p91S-Y4RD:`Eq)+8PAUn`W$9b]Bs`'odYl@U8V0gR\HT,UoNQVI/`&?3-)1mgT^i%hOrPR;BW1?j2rJd=`9Y)X/&srX4"+>'L>Wh;2FE#0D'[[[7uC3,Wg^D(+$L1djd?He1(DITGG$fdp8a0ccgklP+nTmFkLe`_MsLM%hT7OL?X:H!$T@/8M+>/FUEKs-H=h[_jJ^81.,Y;'KDCV'O)cduO'[h0)Y&5fc5q,t,/IQOJZd<mY>E:Xod3K"#F.:u\W`&9Vq%E>%K98\[NQd#*DrS[+5%6@]O?n'scWS?C*CmUdBV1^!`C.U@W-F<X.YSQ:Nm)QaU;HL,$B02'O"%D*X6.PMVJ*@'7KFKd5,:pH[(po'%e;7.d+0EI=UAE+3I]VFc<%^j5Khp\oi<s3a=n8+&j#l(-*JGd?m'AM*;l[?1r%J"L^%jtG'^.@EH_jlXAWKH*[7m,oDjNC8&DsB*%N*m1*Jb#p>bnV24Ab$8l90dP0CRC=9BmS%&VR05\A`3.n:Wsnn3)LPVWBlClM+[uC]7/hbikdPd#]NAHD"i5,Gj?ZMF%#.)JBN^B%`"DR=X+CRkB6U9?9s\(=QNUQNkfA(^]R&Pg8::pgTRWU_EZu36b6.--^dr_ZW'!+haXAA);Hopd[@4r7_^D1t;g2RMQ]$9&c6hY:%ntqQab3%UO[^;!9OHCfg+".gdP,]q/iQ(/4rUTl(.,lNt9.bCZV=i/Xe)b*^RGUJ$b&dV9)Fe$b5Im&\TBS:3KP:@=lq]83*c:Ns%!tLGs*>GD9H*jI;<5Cn`ZW4XjSnm?JRCW#.[I'h%&L`!$ffV7YDL/O>eI4\TJJaL<$P6H;&4=UP8rOY4!%W^jS1bu-4qmO,Z[Pqb%!c#if8!b0AABl74Adb`fa-)gs/=L$:NTA"M#P)R^PC$ig1.07HbKJ#X-?ZX^SN@0I"BJkk.)0g1;X2)0I#m(O%1ND@.4^u&-`)DI%[HMX:Ni`7&b9MY3Ad<":F(A)71jQH7k;,Ir:25cnfSF@=(_l3CW[Yg6+u=?qV6[m_GFgW(2m-GX\DMHL8K_E6]+q)b6N]k7&M;H.%nQ[G=e!;#s;rL="@+F^@oU4I!";;r";1CC1'kl*ki%]MX4g[kKM*#`J0`jGb6W(WQ]7#N[NX5=3a]4+a^hg>>'4!?*%Srn6(dWJg%X>)8V*9B"sqHL*9HfWI)!EbP^+rVN;&FmFG#h)c1,thS6UF_2-Lt(^oP[S8GqpZ'[7I_+SK?SmB5dl&5H>7F@Dt_7WHd$a$P_)cp%9j,b'Dk"'ZZ^\+8Ut]q7r@7fE`4(rU0(!j4pA^Yq`c:S9n\gq\<X&-2!7#=bT^V5/"JllkS"r]p>SHlOMUsY7GE4A3m)]-3Btd#j%Y%)Wc]j9JV1<bF;W.#TiBo"Wgi?ZP_8*M=6gKja;'nXV;4ECJP(mPN'eX?,lZ(Wgi3jE:Bjf5G8aWgmF2DgomlReuDJE@SulT)+i%QD=&t$EQ`'N7Y#4WU_0^$"d*M7qBC^K;l3oNCsPKMgB![o(lp"dPXE[ZW_#Bp&l#/;B;E,j.R<I9gImdeiB>$<UPaiWD\!]>2H[J%Rc(Y:MncNBY$IX/ZV/*hkr[1EC9Y+a7.J3L$6Ga%MY9_D`N<$_eT<"1Q&aOeSSY@>a'Z:rm&8#`oHHFe`L`Z,*k?'Qo(Jm,/7i"3%H\.=(A",;X`1/.^4ljil*q@Kp#P^\o$7nsTBr+9Cc.o]h*M%'^Q,T%O6h*oZd9h!lP`FPPARV%0[)rB<FrJU.NXK)FKt2q+-F\EG%Tp"N692gCRZ0DpL_-RNXXF\Ns'5n0e9=!U4l[1PhH$,*G4#1H,iM+MTp;p@iP=;Ae'4<kO\I@]&!&gaWl&;&A6&joWNaV'>]\3PC%r?Bd$:IZVV=/<UMHa7jVY"/C7GARtO0(?A3?%9VsD-B0#rM))T!UQVB6d]Vf.?>^Lm3aIZ!/(ghIA<HR^u)EP()[[op9H/s?dCSJ%m)Y\[!oHU(+Lcg.-c]S=O3.Y+0,jo?ZtpaX1!cm6a@$U%Ur*6>M,j\Ve"'ubG4XT*hG&;)q3h-Y0/fXDK4c:jT"1P7R5g6HFCreg%BQP5X<k'O7ntn/:VaP>i[,7((8Iig@.&+IF)J\94=P%^k<]UHM<8gPHDF^`+PNFU\BC<7V`!H-I`oB\;E?na*892rJUiie3T0<_d%%iX1:Gf;^007S/El`,15)tR;')sQs[M(+=Hh7N=$o#1L[AX?.+9eWA+BhdmqB_[aCN=M&WnH>Qe?=Zuo1p^gK%A+TjJENH!9):G_%J/D!^F\Z=:rL<GhN(<$sEEp%i*uV0,>W/`UTSUn)RRqceQ%D'0D:jY1C4dq9!ItmV=T!)hm8Wi`!Gh.*)D7BCa;rg0_hXr;`Wha"%AAsp%8!YkMf#9"BWKTu]CUA<FhC-O^(4ek-XNtedTM%R[R.Icg$C=:R^3T$R^fGREo#.))!m!qQBl-=8@0lr:oo6BW#BQ+lQ)loc%@%O[HL8i\+BY"'CWtq@(H;;6*2%#i^RoMD`S[EGH)EMrSc#!iq=jtZ+N[Lesl4rC!P\8Ddi;/Rl>P@6H!pq;7.(>BHf23TJ%-]Id%mQZP!"bnjNr==@TCR3;/q(@=3$0]+BP)e*Y,EKLHb.rd%)BT<:<HUYJm3WU=<Waq=%i9_r`VuP"DURX2*P('sM"XR'1?IDFl.tob%/=+Nq,NIH8T=E5p">8%$oDc:+:e+C_.Z4fqlq.:H"<]O<@X6`qE&inJme;H*l<X*jWeFp5j?mEtJOQ,4DjQfdpKEn;j@/"4/n/"I%$HLAI<sUFV<pOO/cqZTJTg,6+5!DNQ3DV0DJd0GT3C5I2=C4n%=deh90FROoU]HtO[=omgYK.J)\qf@E4bp9BH_=Zhs'V,kJ#/^Z%Y,06;KqG$qiCnR]Xh8"q+;kL-&e&0,>,#PhfJ[JK+Pr^_7IC5&B@9BD[Ob*P`As(Vk9V_uYnfLNqAET.eK'=R@-R.6f37HsUV/q,%m`RPDRYR%6rSopkK2reBho/4aJT$Wo19'i:U^Z*+;MYj_/Yn3Lm@L/pCV4G4Sn)B9GfkZI*.V]J_Bc*O=t@6nZ6s`P-2,rFD,sYB%jbA_)3J8pkB*_$,+O#OtHWA?*#tB7dHFCk:CpJF6\QNJ28.ZRY3--5\=;2OPKN?^>7c$OM]>fU-lO!bjW')caU1o_W$D75^NXL+*%Y$JBXX9p4Lb]T;pe[:IaW.j;Qcc/:^G'jMk-1,,pf2PIT=tF`@n5)XlY>"[?*:(KnGlS`%4%U6slWsD1(l-=.HDt;&n"_h:AG$`o%B0)u,g&]>II4A>6XPZ)0HpMD\*!Z'50&`@tb@eJ&IjHU81A6VA-jAAf!-$mf[0LuYRd,p;MXMN70e_W%o/lnKLMC+7HZhK1/r\5j%p6F^5cW%Y_mY;AcOjhIgJX:(.M'RW4?-@"74WDM>'g</oGR,&iZ"N,>&D&Qj0)<d)N$&4dFl,>7*72<@,$('aWNr>LO1\^!1+pE7%4_3DNT2M;sE<A_>LdC5:9>$1C=2m[9!Q\q872IO\!`KG>]boS.YmZ6UY'm./%"8uG2dQblrsloDVA4An-XEF-?"#nieT/#($`UP/%2JmRPPG?]Q(krf%KSq92jK=,"`c30)h6fIAVNU/4?o?2<L9a8D6pn;_AL3I\CnVOF4EMafcPe;?Hamp!8L+;";@-baSjUkCBMP53%_*(G0WpH([Y9]8`*@=<Ge[0-!-*2a<2ddP#TsTR43ms^2'!b1dXH]c^rZ^;@^a@U9E2288]X.7,b&5q*.gaZ4AS/09oNfHM7C_h^%n#BIg7qW"4`>4CTqH\ihQfO'JrAb]]2;k.PptWsA/r<2/L`).fIg-jDLR$PB`Pq%]b&5@'qOdCVXL/pKT"Sf&G*E_tRo;e:$Zgm(%1lr9i=+J/i$>=cjF=7"!g`3i2UKoD(R++B]dJRP[0'oUMp8:(I"OMD$-3T3L0h.=-_e>^ocU9@#VU9'SnT8#OMNh"BX?,hR:uY(#%h,7S.!!An&nOJ3afVH.QV`ibu)V8](oG=WR;W);s"!I-Vp-[O?i8)n#4O.ug4"mq"=1N'1d7Cu_IB1SiUk#XX3YZXc)X!ZepLX#a%[4dlJn3gHliR]]Zko:'GdrM2KStn0XP"q.n*7e#+Xri)H'UXYRG7!^h>qXf1qpXg6N#e^H!7TA1%Q_$XB[+nM%c.P!3tQ#;k8=a-%7piS?;E=f'^LAe.M7d3H^4HX$A)OTmP%Dh_;eh"tS9WUm[%L$g[)8PLaBm/0T]MC7/8)Q]FP?lcDT<q%Zj"=KiD@/LkfT)p[1a"t%:tu;ci1QLm`D[1/'>?*3D2!T_[]dhH6[Y"B(T^1\f'/bFDhG^Tic6^'T-d&N"2beb!3qug.h?dQc6TglTU:H#SKLH]KsZb]-bufj%r;39Qf4arF)5Vp2)3Zc"bpG\O%]:B3+b.)P"l+)trnKmI-DL13c3P_W9q]TY2,Mfq3X\u7<G]e-oTG$\K'J$r.//Pob5ec34EC01%>m[I!nu&TG`QD>!dL9"as&)olQ3lXpC`e7`4?tj6A0YJ/c'Z/&clE-.:Zu/BU%[*ukbRtVN\IrGj27FtC1!0`fGCP2P.e26hX:`;%K!*j;F&7r%ngMK&F*7%MJXL1TSnjW$nFWB(@YP&NY?qRd%`je3He%6E>d^ckWee+41X1Q>ahVK(UZ<D'D+7d]epnVW$U9%RX'fgU%H+q@/dCe5u'598j'$aXk3[aCM=#LY&q?S*8Zrt,b\7,]0UN0AJ?E":QAFd*YmQGsWZIn^p@&#Nkl3%*iZ"C!5FajJ^Y(:5KK/.H%%k>!aId<M.tlHipMUmQ_(2Copgc,IUMgLXW*i,PO[WYli`=6;_DZ?;7+=9MK2Q/=^_4-B_/UQnZmn9dtDPk+(VJ9^3'jj54HApMl)%gh#]JR7<kk@E\;VLUq^Im])>cUX4V<K50fG?e[?`/-@+eVkg2(j)9jh8U)&f2p7]akC-Sm):p'WgsEZJL'Jh.3IO8a4ie&c>,_.^%[E6`V/^l?B[b0G*nBLO$rOL*fVo?%L*]NntqDc.^bN=5@p'^24.si)K29VH(o-O^)!<5&c\eUTO>[a#1b,7/6j2p1Y1V<a^EWA]T%G1+Fc-Z3l=:!fAbV=Y[>-@rbqU>Rk#5g'?W:nuisZsY[c\,^b&Qcd&IY";s-CQ].R<[)1,XN7.qTVG^gn024'0hK@@nesT8kXhAO%!G`a'Uh3D2gt/3B8=.-M[4@W9_-9tJ"/][[f]alS]kc4N_.k@4<O;4(J#*Ve;biPNECFZ3"!%\+ALa,`B[X5s]O(Q(S?N$C+cXih%Pd=3tFE>#_W!#-:rSHM5-b=*F/4Y0Yap+n,T&NhGOVp-P%`MA<RKIAE[=[-h_"10n58)Ib<S*$Nd";H0[@kRgO]m7RXl5+>mb49\%)$OLA^@:Vsj:q)(FA3Cf<"Lkq(e)_/0@Cm=8R'@=bDs5MP-tQNe6cVe*+.Q*\fMRRg6ndlgpMsLU(Y,sH*KWY8pRbOXEH-jcLa/5%!@tBh0gLsiH)=GN97l"5B\?e!!Yg5e')ajC[e+f!+SZ\SF*Z6[\Vrc_NA@dt@<`prN#oKg&f&fhJK.P(KI6i<6B!qlEBs)8lUmmL%V\F4`<!ls5`>dT6?#mLkr4)r;E,jFR*NN]&3P1-dHngD5<jnTE:M%RI@j$uoaCLK0:049**^Xut9hYK<YP!20=7+>iid^+B\kKn>%28b?5N)c7@eDihaB*f\JqR6PHI0[N1Qh\e.om-"-mE^t)Qr%a/n7Xb.Lq53NUq>p@nEBcg)E\1!3os`G1=:KGK0L`^07d\\?gMtC%mim/?f5B<1V<h!N(l2l,Aah>4=p1/m]rHP8@A_/&Hu.k@p@*pn,Klt#<@>D#Pb@la6J[L9].cD""#sPProXunpO:Tjo%o!bNR827%9SRR.BU*+m1^,L?>%F,XJlk`4gJ0(g_)lJ(UWK0,NNMS?6JlT5cS_$7+'tZl:""0`?+"0FN':k%bbj,ERS;7;-2CqJ/(bok^K/5o%\@EoZ?e9iNiPeM(ftQ95"@=co8Y*Ys+#hIYpFKUZ``;obiYZ0"XI8)/\:?;Z^!%Wt?u'bJ^/?.@.^(!618]H:5s7f;CDo:Zqci&7%Pnub4ZFhl?:$_e-BA]u,C1!**VaF"I,35u@65m`c!WEMT,-a9-U'R+/B97uaZ45h+B9im?[,!go#S9B*\OR<@<YWo5QPki"(mi-a%;?$.\6CM)@6;6qR/p%6`.dCfj\$/t4+UlS&>W>FjE]o:GVDP$sP6B[Xp=)l&[!O*)b[>Y^c\%1NX@i"&(rM6(q,.?n)/<U<@2"H!%`_!0,MTs9_TmU<U%BU./d=>*2nbDFR`cBIY?'RX@du+O;6I.C[@$CabD15JA"8S];m#aZl5bO@8fu53]b'QP]@TjE3_4*XWMK/EB%Qs@:.GO82<J>l0,e-B.l4^!FE)+ZOCDcT[u1#"Y/Go7sVXGI"'s&mT`f<9rHP#PcA-+pSVH&O]L#If,FnMi&5$fe8`i3j^knXE<G%jp!#&r@cBV7u;&iU5H.\gjB'%o6H9Rm0CE$UNEm36G'6]%duP$]e.^!/%m9_]o1h=(qUca@18g7[i+55kBjV+*kLk)3(^NKA6b&N%\T@5>2*;b9!fn*g=,K^1);S1eq(-8UQoMQd3_4Yl7-Pm$]5)m;A7RcE/WW/P89<e=]55>iol53Y#0Ng$H&upN:CIFL`JGHb7O6!,%P=tlar@Zoh?3A+M3<Rc&NR\Usa]e$&\/3!AE8S'=Q2m.R*A<e4I2Fjf8O\%4Y`G>&_.0e=Wn6a[^mgF"VPi3g8nEYVd?D2]^JB@k%B:j4RVrcu;2C;;g1u2M0n@Vd?D<i?KW^hUC'Ft:2F8$;lU4KrM2+Ol_VA851E91&(7%mI,'Lh^%>8cOFn?0.9;f`14VapV;5bK3s%$saiXGO:ip4A24QE001=`U[0Sct/L2W]BEBOV;*>=dKUI6R2_eA:^Y7\5lL&/dO'pK2,!s8$,gPMqE>,cV].rU'74Dh2C2GmW\&e%AS&q:YUeo?aV)0.SLYP^jj7(9J%!ZQ?WF;gX`cHjF=7`TStOQ%AIojS$],42PQHhTFa'#r0*9HkkOMK%;Rf<k0P"L-0AOO`Fk?UT%aF*%K\ubI&ol56FSqVcmg*lM30G0qiPH,)R>m-L6=/[J;[`efn4]"GbPY**O@fE!nZR.a5ZK5cX0e*iqC@Z;G'l]T%MdhDFJ4GFL%0u`W:a]2B0EI$X;.*AMS6:S:Lkd)hDNk)K>Iis"'l]X$18qgftq#UaZFMHA`]C027]..HK;;3-BKuX0'XN)-f<(mTj<8Zk_RH(@5%2*>c*.O-H/7s<9qpX]hH:Y#ateclhcnq2]6]O$/91Q9<tO"l*$Na;AHWa1f>"](DJ56r,3):'5r]S3EO2*BPG*J);Vdgi"[5er\O%AI,K^Zp>'jTR^G8QkUDKl<PS6+>8?a5kX(FGQ*J@i3IQ.m8&op0O+W*2%;a!d.?.gbqgtlPMkPsn>=uImVg!.2S+7)8PFcpT0:<p%>#)FUc=i<Mq2kec'Php[:YUmU'a&J8QD[9_A;Z?N<@@75cQg"L?:,[EFMgk86a>p=)0nXNN_V+A;6RLl>R"_,OT<3:+?)!]^:5dN%PU,29NO]2aT963O`U@`TbfNR>F)2B.l?\PK_9Xm)6HAZtR6gPZdb-;JUpbg82i08@!M4)lMP4o'eN6:IS_X;$RK<%!*q,*qP:#I?%ihX?m9PML:q&GaEG?:p*NMt$X7P9R,:'n0`&no:RCK23B(Zr?]FccALTAsC2]5)m;A8$eIT6'/JCA=M2QcjSSI2F$[]MMrMJ9&d`%_V6iNch7+si.Y';hq,<hRtPtt4;Z^Wqf=tRRuD+p4KdRI28]N(7G#oi*u!OBs260E[&\ER<,?e]VK[l6Z+Z(R47>,qc\'Fh+eHmQ%];n+*n,9P;?`*e=]&(Td7<"fAZ3dd5Q5o-251RA(HM$9mb@R2bna1d%RcAGfm]%.2VP05l4"X;ia>?`HH3@up'I3I#YFsSqhWqDY%Mr6Yb=7+=tbQhuU0&Q<(qDc-s3l$03Ld^Ir_aU1)\+djjQgcVZlb$T457a[RUL;F.T\`[)]^Yu/*Mur>-J;p5[8JAh/1ZTB/^l?B%=h1Dfl0keRH'7ur>gqk%?WE_Q[p:oH12RiYoiCc=K'0dJ)'FOo$Ga$USfI:S+W:Kg5eG2N?9X2Z>TWNC28cc])1\omi!aHXMQ%]e%,f16/X_I[gF<;blN"\>:rN?*EOF[\bY_U;F(>la-bCdO0r]c,B#(HX04dED\eOW0)>UXq:D@`sa-9N;'X@3CWf7D+P!1&<gK3(gr%;pip3ki-WqCY(,FD[%=Ag-BKV-3Jjg+q#u#JAfO<#TaNQY'LP<=%J_ZSHmN;%(Ccl2_>*PN#[&7r:F(OcqH]uJq;+lOXG_PJ6Fb[%fK6:6W$/\RqfVO@fL?\+jBXj2Pa;iY+be.u`7p'o:C[#)B\I/0e.HOLH0ZS4fm?f`.;V<N;;4Zo(C'G8<;ulS=h;o-<VuA1o1:Xs%$5;j-O2H=Z;4DPZl;kn7Ne:cNRi_#Bps)f;.+[XHUSTME`A(1H5jTq7k/")q,cq@V!tML-+Yjc:'1?3jMjH(h\7oPoQ8AfpWp+3#%jB(Lpbh5=dEporLmfm64d!R/@?@C4N#9[Re=/3R5#3g(a!Pg4^o%2q*U5K3HWgl)lA!K>7j=WgZi]GMbW8k$b;#XJ!WXm&l&G'"r%EdQFp<9GiVVNZ]$FYEugmaC's0T@\#be*T30(VrMk6lsGWfP&EO!D#pSRNk5UhM1.@hG.c[1OPaeX8KiGSe1TbF<ZeWP>096D",a%Vg-@l#d-GVW`g5,*"XpJ`mmJYZ-14u4nR&Tab]48o"Idj@K^r]3`0C9)X^$1O6BmHF-eWY?Ws2EQY%#j,.I]JX6T^pG\jBhS<P2O%-dJhOY$5!8c1QV\TNC>RAs@t]h>e1*YH`]08$O,bKlG4W2aCShnVH&01Wp,GE+oN(<ED1UJPmp92;?V#AF([o!^XF-GYAJ<^`nH(%P_)4I'[(+JZ.R&G3D.f\AXYZKJ!R6^lDjfp.mI^:C:0;9qN;MB+pr+uPdS5En#H6Gb/^L!9-\h4S`[rUjnHn`?ESZ/^sD;sBZVNW%p6t\+9dJVEq$@Shm,<),#Dun5-+gp$&R=kU<VsV![kCVC3N3Pne_O0eeejK\'DNu%4@qAk?OVh(qb'pHbtjkk:&Db0VLFBr17^@K%Q@(d=[g!Yna2'XD=H/)`mEj;*PD;>$k@`/2AtCd!ft\SO+Rea4[!)g=iD]h`;=5,Hk6u.&*b5Re="FrBhPJ617Z3@$dWr:E37abu%@bRktL'KsABS5XX:_9*iNH4IO#fK$;L,`:'.;=VA!VIQ8,[LbYC!01/Tm_$FS6hIFG7jTW,7b'K@.Lu]2.*kAdsN&R[!d(!$U?%I%YUpEh5d?9"ij>n;OoP"0]cZ,HY?uB9%k#:@$Bu5*H4o,Up[!jNC5.MAQ(Vs@c']%sKp$'+2Mkq'W8N)T%ME]\ls0ZgP]taY4NP/W%'%\=PG0!t^EHlC\be?d>Qdks\p+CqEb1j<Gh?p]to"e6oF(GF@W_[eG9:EQO<*S3r'DUc7,J'7XYK@AWD3l2WbgEYrN8[t@ci1Fh%4q4Y+q6\_b!f*3SG+aHlQfnpSJ285t_7PAE!F50N<VslV]Z[gN^p?8nW__4(?"UjOhO!ILn[@$*7I\6>GO;<op4N9lF6*DiWfP&E%]4^hKZE("4%SVL!MM!e]0Yd'#-.W*I)ZmO=,SP:<f.7#+\Y)4n)HQHbf"e[`Y,W@GKlIN1S_RpAh.4ZY#*>^&_q-k"dk:0Y4`GBf%hmG[mR8:-Gc'>$5X$.$^/ZlT9e!?HY(AlSI[u8]1Y5Po'Q;=gDc':T*X(HSfF;[#b9KZSIT@dha7tUuH(<Z0VA_JFobC7&OVsi?3%]?Ec'_3[O"W]gp]rN^]UVZ"BChTF\DnAR\3(29%;)&H8Dhd+#V&*f>[f]LDPgf,@>KMCUbLYYSN2M'2s?_`Mjql5$f_EY=2c:lAL%o4`14O)3PPD%CdD14O$JHr86bq]S<$bSp73.6#e4#[t1Hn*]LZ%<dR=Xar,8\nOC=i1H7J2J4AuVYW,3m[68.JMAY,fcpX3W`Z/!%!V.9RCq$Zn#s;']Se,Pr9O(`+V&W]lBt-u;a#;,I4m9+AV.C)s>Lj3.7M*JC66+kaGkT0`28]OF7=X<&Y.pXPRp=HTk*]8P3NNoA%N!R5t>Ud?EBg7HCVED[T+/)bN*"-\d97l0=!R7&P)EPHScL9JpbsHXXj3E[l$GFlN&RJd7m^onFI?uemf+26Kq@5C)eF?WEbutGD%Ol4CJ'LKcm8Ykh+ki=;F%J(TG7-Ad]:Qm6H)P$n5>mX^"`SmnZi(:PhRO]=r<P=,GjQ+u%FbBX59Pq1<1Or"WkPE+nHVJ!OR]F1R%493:MH/]RC80S.-$ag&\KPa:k;"XqC:[UYj&[C6$1J7u_.ZW_o`]*cI;g?lh6;nu(2QG1#%N.UXfqJ$oM+.qR(pbf)9/n\O.g=hQ%5=q1TIoEL1`qH>Uk8Lp_Q'e2IZW=C*5^/MN2IBMOWd5+m@N^Vt/$42R9Qnk_ct"'%d<PYgZmP"6Rpf;+jpDB*lFP9Kd@qsnFTkNJ%BO4LdGsG>1;YIjo]1Cqbb*h:;oKZgij6s#uZN-4DFa&IT?f]MR3!R9Hci@*X,`HiP<)m8:&d2ms!7]r0Y\uP-9Ps)&p&4R,/ro_=%G0Mdn9$?LCh&HXa=EV)Oa:13uG837t?fpgWH4@(,hqnO7dn?PU'1dmn@=4J2"0S:1"V1]#je1r=-t'QRKT)jIPW%V>9p:rJ=kG&8%1])Bbb>GugJ*n*S`@3#\6q8L*heDgrriW9Qn8pT`&B8.30J=7MRLjU="!k-Waj^QH@[@<.oe!o%$<XsP-?<<*7!R((=QQ-`B-_)U%UO:V;/Dj.]-F:psHkd!WqC<J7WZEj\;9Z+<J_.^0MK4CHqO.ch@U$2WmTI,qQ)jWAEi85^d4dB9_@hA?.9URnn==c)Ie0^g%52ft%6:X(7*1Nn)[CSlI+-_nUK_?`UTe1d93akV.:!H[>8,p.h%,N<"74UWfFIb^,gt/$TY$-H0%e<&)Nk2LJ7PfV9\Xpe$WcZ=9'?&J)%-1I;8]5!(%Br=kmOX>`DG3&e]DDV\<.L%.RN3U1SkCk;>J^Fr]X,qZu&*qX$14lfkHt!.<S4fRP(VpokgpCj_I;"ok:^Kqm@Ab,0%+1VN\9P:&e/%^(.c1'Am+[tNJqN=_"?GXnR\no*f&A"bE?=TSmb2kH_)k?=UJjul"lsbW:6%<daKQe"jf);aWZYY8e&Mj)`n<Z$N%f-5I`nm+,j!uRt7I%u=Udbtiuq8t!$QZ@"ajf]kF4pg:q5d)FF[-]!b$hie[K`hrtkjKq]oI`K#=SKFNB";m%6"j!3Agu=p:]$22%TRKEE'p=g`BubN4Tpr#J<'SsKK@p=j6R1s9mQ_(5H@iNUSYI\fZZ=U!3K>F*1#Z,M1Q>E(_WaW;_K9)\2O_\Z\>rrR1YB%^+U_Fm%7%'k+7^*Yjd0]fS")j.4i[nHRZ@ELcJ9tkLMB8JeNq(Z`QRT73g8p1^ghYiR.p)+3E]u6D^`%C=obA(uP\Ep).m,2>f1sQ:(G%2^%63'qGPUZbnZ)`0CcI*M)7Eca*n`7'O\K:>?3)/pi*\91+kH"$86*#O4*e:lH^cW.rQ0*,eY,^+Ca=-0nVr,.bJbPD0<U-cL<L7$]%1A#UlE6:`#l'1@E&IYdtC!['<6_N<u=!CFp2C?egZ^W=*(101He'9KF/]nNQo5#;=@98ocB['_1s+LS-RG*!u^%s84#<h)e;5a([%+jkqV&&nNIh64#]%6:rj;KfAQ`Sq5,Y1bbV&m6Zo!!S>Opq$6TI#D>#c$Wa?Q&NAU?GigGb!@4c0"XIEGG.52p-9l1m(bU]3)EqI%7mYe#5YPsO7*pfAM!e*gHu;)Q#O8=[=mAJF%1lWYVRj?O,'-fS!E,^OP."Oj==ct;!KF@0&P0]S'C7&md40V)W"mof?F=R7))-Ek%lRWPX5BPC[l,]pjVk"S,iDl4DSakX9ESP=OP<s#S\`HS=QsSI=]L5?nU'#p:7gq&KI.4@=6,iT%JSUEMmE]?lJ8lcc6&Lrs=]\eN%@&V4SqUWHKWOo-9_kU@?`f^8;DDFck-O1P\@e+KL&@g'INqO&cj=Y)Fa&Y%Ed_>,Rf"23jLaDQ7PrbFAA&`#XTA=RW9[K1(&M:i*%#d1(f]5!(uYRuP<h@`j0hj]Q^m`Eotcnpsh!R<=e=WLuEc1.P+\Vkh8_qA;@2HS0#i&5\tD1OTuaDI>0"Q>S4rQ-BJTNlBtj:`*M%k'FJHX(HVI="!F/dCL>`39cq94Bss`[Hqe3oHs&N"D=gM3F7q7GEG\d%p_t'=3[YZ^#(O4$aa8=f:1F)!1l4!Z\Iq>+mH?bcX,J+%5<XN6XfshJ'D8GB$!`n!X(i)>%[$+"m%m-Udp4<\<^E=gR_%fkI^i$u=FXFYZb1%&Sn($`5]f.;h,PPPpK$(X0@P9!gqMD_ef\#F%/?dd"LXYfc%AN1%l`Q]8nX9J3!C.Oa:m#Yj+[)2Uk%Sa@VLug"22KdAbFA4g8`kXD7+[@K?1hoVn!D;59^`eKrDrVEJnLBhP%TH#%C$$1<(%VbRa5CO%=NsTmk.&c+$Q""(]8UM;4RqH;28^rMb;9k'f\[/o.9)#G+W*BjF:ai-"A`O%/sO@&i6DtSTL@CDrQ-ZiW]9t!%fBSjb0<3V$F=cod2?#3U+^%DJ/Aa:HLY3Q6Gp:;@l8?4OVo7ZhA7Ad,']gJqrO6NGI2sTq_l@5CW'D/Im<YW^ZW(N_q:XP^d5le"%c15.%Zcr3uJII%.aT?_C<s(/M;NgJiE]nPN26XiM&WQ?Zc?*<oFjaM%Su+&\MWmE8F4%ta([TSgnXKf<'-V4N@)l3/UfE%>cQo0G%U.fYc[k2:-8`$g1b<VMml8C6!*CQ&C?d4pj-#(-&5"!V'*+^749Hkk*:Z+Vq#'=eiN-du8_G.WURjSERCObV5<^;bX<\m&YOU\J>%dXRK((*D4NF1jNh<NkAX8cU]+rcXtUArmQ+K[..?9O_u;_^$O?(Ri`q'P]4,&j:fh?E#OQ?=O:_0ds;EY.rUO;<V:IZ_Z!-NE#6W%1E"/8!G!VW+6K4<l<,8L07GSNR(ojcGJi^:V(:'=S;di2)RTqDBK$=f96+'T@rO)NB%C86Wcuu%D`h2(*'Y]s_8?N-%K4Z4f'c0T%kMGrE6=L(ZfU;m6^1)7k'bbUn9$,kHi!K)Eg,7&';aW\aYF?ZZfQ$.e6J7TJgGFb)i-2I*mu]E%`MhNRY$"(I8=p:RD<p+\=m-bk%oE1%1:FpY?Y$!)'SaMeQjWeJNCUmq):O[?ZI9Xs='!A7dn1pO<TuaIPO=OQ([>)mER.b/b%iQ'MBRgRF1>5hZ)k4('ar7,OBOb$"%AF2hc?,4&VY#+D\S2gdga5lP_N]#N`-;cZ107^.#rW77286J7S4a[G4,4I3?Z!lni/UQ!.JgT\G:9K-6WZ</^fH[EBA8U>,ED/<N%!Q-BFE,IMaBtpZS_pdl02@)+)Cbd`_:TPk4g-qJ24p*Z">okJ+K=`&+DZ_\e@qo<J/rV;_\S>cTFZHNa7o47F`r",Ykk@u"gO-O^%=)GcJ0gempV[ps<SNOd[dEm7GoTp<-mN?8=1+<Fn,5V`S]7G37Z1J*P@['A]-oPW]S!a:K6o`=67GN_H.0\%[At`>Bluhb*<tKN)%cM!%[]$OX0jJ5;H?YtXo*IS^[<a?*k]0'u2fC5M$VR/<+<r"E)(Npe+$suPeo&NXoe/*L/d/DXPr"!jZ$pPG(?X:\!,\R]<*@Ela%[i+DD.-dQ)BpYb\h-R2(`JU>Moudpg7bim9!@)C,=#.osq[3,rnmP2P/SQ)[QD^gtCqS<1^Irf!l&)4<g,7'DaL^KO=eXmG?,X.s%>SlHqo,?CXeG2&'cOShkB@'>gfoL4Vku>cY+hB>4bTp/.d3<$AW)Y.HmI;pQP0p/TVu%pN]:AVrG37G">:BiJCog\P(l6&:alq+F%Xao^]\uK)SUUH\(;Ri2+$,J1)(3@n*[1ulX#9VP'bI[uY0<b'ks6'FZh-^3Oj'Vb%rMSQPiLbVodslfCq)?(aiQ!&?rhnY'qhLen%qU^5op@Ag0s3jdDna5Y?5Q'K$J,\]Yhu6p]o(DmP^]!ECJ,K,sf:W'(O8m>ZkXW@Fs7kVms6afSphs-,>o`~>%AI9_PrivateDataEnd