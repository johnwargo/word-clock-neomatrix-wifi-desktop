%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: MacOS Roman
%%Title: wordclock_faceplate-and-pixelguard_ponoko.eps
%%Creator: Adobe Illustrator(R) 23.0
%%For: Ponoko
%%CreationDate: 2/18/19
%%BoundingBox: 0 0 460 238
%%HiResBoundingBox: 0 0 459.2964 237.6284
%%CropBox: 0 0 459.2964 237.6284
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 23.0.1%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 23.0.1 x540 R agm 4.7767 ct 5.4352%ADO_ContainsXMP: MainFirst
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                        
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="﻿" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c145 79.163499, 2018/08/13-16:40:22        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#">
         <xmp:CreatorTool>Adobe Illustrator CC 23.0 (Macintosh)</xmp:CreatorTool>
         <xmp:CreateDate>2019-02-18T11:18:01-08:00</xmp:CreateDate>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>132</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgAhAEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9L6ZpmmnTbQm0hr6Mf8A&#xA;utf5R7Zk5s0+M7nmerEAUprp6S3FyscNmkcUgRA1tyahjRjUh17se2E5aAsy3H87zPktKdxbRWzh&#xA;Zbe0dWRm5iAIE4vGpZqs1VUSFj06dclGZkNjL5+R/UtLTHatHIIYrKZleBVnSEGP97LwZSoY7qu/&#xA;2u4w3KxZkOe177D8dFRX6I/4rsv+kX/r5lfj/wBb/TfsWl9nY6fPZwTPZwBpY0dgI1pVlBNNsjky&#xA;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&#xA;rsVdir//2Q==</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmp:MetadataDate>2019-02-18T11:18:01-08:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-02-18T11:18:01-08:00</xmp:ModifyDate>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>181.000000</stDim:w>
            <stDim:h>181.000000</stDim:h>
            <stDim:unit>Millimeters</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:HasVisibleTransparency>False</xmpTPg:HasVisibleTransparency>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Default Swatch Group</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>AutoCAD Color</xmpG:swatchName>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:tint>100.000000</xmpG:tint>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:red>0</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <dc:format>application/postscript</dc:format>
         <xmpMM:DerivedFrom rdf:parseType="Resource"/>
         <xmpMM:DocumentID>xmp.did:872a049d-7db5-44bb-8ce2-69d68a17436c</xmpMM:DocumentID>
         <xmpMM:InstanceID>xmp.iid:872a049d-7db5-44bb-8ce2-69d68a17436c</xmpMM:InstanceID>
         <xmpMM:OriginalDocumentID>xmp.did:872a049d-7db5-44bb-8ce2-69d68a17436c</xmpMM:OriginalDocumentID>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:872a049d-7db5-44bb-8ce2-69d68a17436c</stEvt:instanceID>
                  <stEvt:when>2019-02-18T11:18:01-08:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 23.0 (Macintosh)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -237.628 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 237.628 li
459.296 237.628 li
459.296 0 li
cp
clp
.0283465 lw
1 lc
1 lj
10 ml
[] 0 dsh
true sadj
.0140449 237.614 mo
237.614 237.614 li
237.614 .0142403 li
.0140449 .0142403 li
.0140449 237.614 li
cp
false sop
/0 
[/DeviceRGB] /CSA add_res
0 0 1 rgb
@
189.559 230.769 mo
191.596 232.806 193.632 232.806 195.669 230.769 cv
197.705 228.732 197.705 226.696 195.669 224.66 cv
193.632 222.623 191.596 222.623 189.559 224.66 cv
187.523 226.696 187.523 228.732 189.559 230.769 cv
cp
@
41.9598 230.769 mo
43.996 232.806 46.0321 232.806 48.0687 230.769 cv
50.1049 228.732 50.1049 226.696 48.0687 224.66 cv
46.0321 222.623 43.996 222.623 41.9598 224.66 cv
39.9232 226.696 39.9232 228.732 41.9598 230.769 cv
cp
@
54.014 232.214 mo
72.014 232.214 li
72.014 223.214 li
54.014 223.214 li
54.014 232.214 li
cp
@
18.014 232.214 mo
36.014 232.214 li
36.014 223.214 li
18.014 223.214 li
18.014 232.214 li
cp
@
201.614 232.214 mo
219.614 232.214 li
219.614 225.215 li
201.614 225.215 li
201.614 232.214 li
cp
@
165.614 232.214 mo
183.614 232.214 li
183.614 225.215 li
165.614 225.215 li
165.614 232.214 li
cp
@
201.614 14.4141 mo
219.614 14.4141 li
219.614 5.41414 li
201.614 5.41414 li
201.614 14.4141 li
cp
@
165.614 14.4141 mo
183.614 14.4141 li
183.614 5.41414 li
165.614 5.41414 li
165.614 14.4141 li
cp
@
192.614 5.59432 mo
189.734 5.59432 188.294 7.03426 188.294 9.91463 cv
188.294 12.7945 189.734 14.2345 192.614 14.2345 cv
195.494 14.2345 196.934 12.7945 196.934 9.91463 cv
196.934 7.03426 195.494 5.59432 192.614 5.59432 cv
cp
@
45.014 5.59432 mo
42.1342 5.59432 40.6942 7.03426 40.6942 9.91463 cv
40.6942 12.7945 42.1342 14.2345 45.014 14.2345 cv
47.8944 14.2345 49.3344 12.7945 49.3344 9.91463 cv
49.3344 7.03426 47.8944 5.59432 45.014 5.59432 cv
cp
@
54.014 14.4141 mo
72.014 14.4141 li
72.014 5.41414 li
54.014 5.41414 li
54.014 14.4141 li
cp
@
18.014 14.4141 mo
36.014 14.4141 li
36.014 5.41414 li
18.014 5.41414 li
18.014 14.4141 li
cp
@
206.495 207.752 mo
211.231 207.752 li
@
211.231 207.752 mo
211.583 207.752 211.871 207.463 211.871 207.11 cv
@
211.871 207.11 mo
211.871 205.132 li
@
211.871 205.132 mo
211.871 204.779 211.583 204.49 211.231 204.49 cv
@
211.231 204.49 mo
206.495 204.49 li
@
206.495 204.49 mo
206.142 204.49 205.854 204.779 205.854 205.132 cv
@
205.854 205.132 mo
205.854 207.11 li
@
205.854 207.11 mo
205.854 207.463 206.142 207.752 206.495 207.752 cv
@
206.495 213.905 mo
211.231 213.905 li
@
211.231 213.905 mo
211.583 213.905 211.871 213.617 211.871 213.264 cv
@
211.871 213.264 mo
211.871 211.281 li
@
211.871 211.281 mo
211.871 210.928 211.583 210.64 211.231 210.64 cv
@
211.231 210.64 mo
206.495 210.64 li
@
206.495 210.64 mo
206.142 210.64 205.854 210.928 205.854 211.281 cv
@
205.854 211.281 mo
205.854 213.264 li
@
205.854 213.264 mo
205.854 213.617 206.142 213.905 206.495 213.905 cv
@
201.344 213.905 mo
203.345 213.905 li
@
203.345 213.905 mo
203.698 213.905 203.986 213.617 203.986 213.264 cv
@
203.986 213.264 mo
203.986 198.958 li
@
203.986 198.958 mo
203.986 198.606 203.698 198.317 203.345 198.317 cv
@
203.345 198.317 mo
201.344 198.317 li
@
201.344 198.317 mo
200.992 198.317 200.704 198.606 200.704 198.958 cv
@
200.704 198.958 mo
200.704 213.264 li
@
200.704 213.264 mo
200.704 213.617 200.992 213.905 201.344 213.905 cv
@
206.495 201.579 mo
211.231 201.579 li
@
211.231 201.579 mo
211.583 201.579 211.871 201.29 211.871 200.938 cv
@
211.871 200.938 mo
211.871 198.958 li
@
211.871 198.958 mo
211.871 198.606 211.583 198.317 211.231 198.317 cv
@
211.231 198.317 mo
206.495 198.317 li
@
206.495 198.317 mo
206.142 198.317 205.854 198.606 205.854 198.958 cv
@
205.854 198.958 mo
205.854 200.938 li
@
205.854 200.938 mo
205.854 201.29 206.142 201.579 206.495 201.579 cv
@
175.206 213.905 mo
177.209 213.905 li
@
177.209 213.905 mo
177.56 213.905 177.849 213.617 177.849 213.264 cv
@
177.849 213.264 mo
177.849 207.945 li
@
177.849 207.945 mo
177.849 207.756 177.775 207.594 177.635 207.468 cv
@
177.635 207.468 mo
175.634 205.678 li
@
175.634 205.678 mo
175.441 205.505 175.181 205.465 174.945 205.57 cv
@
174.945 205.57 mo
174.709 205.675 174.566 205.898 174.566 206.157 cv
@
174.566 206.157 mo
174.566 213.264 li
@
174.566 213.264 mo
174.566 213.617 174.854 213.905 175.206 213.905 cv
@
174.778 202.445 mo
186.944 213.43 li
@
186.944 213.43 mo
187.136 213.603 187.395 213.644 187.632 213.539 cv
@
187.632 213.539 mo
187.869 213.434 188.013 213.212 188.013 212.954 cv
@
188.013 212.954 mo
188.013 198.958 li
@
188.013 198.958 mo
188.013 198.606 187.724 198.317 187.372 198.317 cv
@
187.372 198.317 mo
185.371 198.317 li
@
185.371 198.317 mo
185.018 198.317 184.731 198.606 184.731 198.958 cv
@
184.731 198.958 mo
184.731 205.564 li
@
184.731 205.564 mo
184.731 205.821 184.586 206.043 184.35 206.148 cv
@
184.35 206.148 mo
184.114 206.253 183.853 206.212 183.661 206.038 cv
@
183.661 206.038 mo
175.636 198.773 li
@
175.636 198.773 mo
175.445 198.599 175.183 198.558 174.946 198.664 cv
@
174.946 198.664 mo
174.71 198.769 174.566 198.989 174.566 199.249 cv
@
174.566 199.249 mo
174.566 201.968 li
@
174.566 201.968 mo
174.566 202.157 174.639 202.319 174.778 202.445 cv
@
155.291 213.905 mo
157.291 213.905 li
@
157.291 213.905 mo
157.643 213.905 157.932 213.617 157.932 213.264 cv
@
157.932 213.264 mo
157.932 198.958 li
@
157.932 198.958 mo
157.932 198.606 157.643 198.317 157.291 198.317 cv
@
157.291 198.317 mo
155.291 198.317 li
@
155.291 198.317 mo
154.938 198.317 154.649 198.606 154.649 198.958 cv
@
154.649 198.958 mo
154.649 213.264 li
@
154.649 213.264 mo
154.649 213.617 154.938 213.905 155.291 213.905 cv
@
125.209 213.905 mo
127.21 213.905 li
@
127.21 213.905 mo
127.562 213.905 127.851 213.617 127.851 213.264 cv
@
127.851 213.264 mo
127.851 207.945 li
@
127.851 207.945 mo
127.851 207.756 127.778 207.594 127.637 207.468 cv
@
127.637 207.468 mo
125.637 205.678 li
@
125.637 205.678 mo
125.444 205.505 125.184 205.465 124.947 205.57 cv
@
124.947 205.57 mo
124.713 205.675 124.569 205.898 124.569 206.157 cv
@
124.569 206.157 mo
124.569 213.264 li
@
124.569 213.264 mo
124.569 213.617 124.857 213.905 125.209 213.905 cv
@
124.782 202.445 mo
136.946 213.43 li
@
136.946 213.43 mo
137.138 213.603 137.399 213.644 137.635 213.539 cv
@
137.635 213.539 mo
137.871 213.434 138.016 213.212 138.016 212.954 cv
@
138.016 212.954 mo
138.016 198.958 li
@
138.016 198.958 mo
138.016 198.606 137.727 198.317 137.374 198.317 cv
@
137.374 198.317 mo
135.374 198.317 li
@
135.374 198.317 mo
135.022 198.317 134.733 198.606 134.733 198.958 cv
@
134.733 198.958 mo
134.733 205.564 li
@
134.733 205.564 mo
134.733 205.821 134.59 206.043 134.353 206.148 cv
@
134.353 206.148 mo
134.117 206.253 133.855 206.212 133.663 206.038 cv
@
133.663 206.038 mo
125.639 198.773 li
@
125.639 198.773 mo
125.447 198.599 125.186 198.558 124.95 198.664 cv
@
124.95 198.664 mo
124.713 198.769 124.569 198.989 124.569 199.249 cv
@
124.569 199.249 mo
124.569 201.968 li
@
124.569 201.968 mo
124.569 202.157 124.641 202.319 124.782 202.445 cv
@
106.261 207.751 mo
106.874 207.751 li
@
106.874 207.751 mo
107.695 207.751 108.355 207.682 108.88 207.519 cv
@
108.88 207.519 mo
109.404 207.379 109.884 207.122 110.316 206.774 cv
@
110.316 206.774 mo
110.886 206.331 111.319 205.771 111.637 205.097 cv
@
111.637 205.097 mo
111.933 204.444 112.094 203.745 112.094 203.023 cv
@
112.094 203.023 mo
112.094 202.348 111.956 201.695 111.683 201.09 cv
@
111.683 201.09 mo
111.409 200.484 111.022 199.948 110.543 199.506 cv
@
110.543 199.506 mo
110.293 199.297 110.065 199.109 109.814 198.946 cv
@
109.814 198.946 mo
109.563 198.783 109.266 198.667 108.972 198.573 cv
@
108.972 198.573 mo
108.652 198.481 108.309 198.41 107.945 198.363 cv
@
107.945 198.363 mo
107.558 198.341 107.125 198.318 106.646 198.318 cv
@
106.646 198.318 mo
106.261 198.318 li
@
106.261 198.318 mo
105.909 198.318 105.62 198.605 105.62 198.959 cv
@
105.62 198.959 mo
105.62 200.984 li
@
105.62 200.984 mo
105.62 201.337 105.909 201.626 106.261 201.626 cv
@
106.261 201.626 mo
106.851 201.626 li
@
106.851 201.626 mo
107.24 201.626 107.535 201.649 107.741 201.671 cv
@
107.741 201.671 mo
107.945 201.719 108.128 201.789 108.288 201.904 cv
@
108.288 201.904 mo
108.447 202.022 108.583 202.185 108.697 202.37 cv
@
108.697 202.37 mo
108.811 202.58 108.857 202.791 108.857 203.023 cv
@
108.857 203.023 mo
108.857 203.303 108.787 203.535 108.652 203.769 cv
@
108.652 203.769 mo
108.493 203.978 108.309 204.165 108.059 204.258 cv
@
108.059 204.258 mo
107.899 204.326 107.719 204.398 107.535 204.421 cv
@
107.535 204.421 mo
107.352 204.444 107.079 204.444 106.693 204.444 cv
@
106.693 204.444 mo
106.261 204.444 li
@
106.261 204.444 mo
105.909 204.444 105.62 204.732 105.62 205.086 cv
@
105.62 205.086 mo
105.62 207.11 li
@
105.62 207.11 mo
105.62 207.463 105.909 207.751 106.261 207.751 cv
@
101.133 213.905 mo
103.135 213.905 li
@
103.135 213.905 mo
103.487 213.905 103.774 213.617 103.774 213.264 cv
@
103.774 213.264 mo
103.774 198.959 li
@
103.774 198.959 mo
103.774 198.605 103.487 198.318 103.135 198.318 cv
@
103.135 198.318 mo
101.133 198.318 li
@
101.133 198.318 mo
100.782 198.318 100.494 198.605 100.494 198.959 cv
@
100.494 198.959 mo
100.494 213.264 li
@
100.494 213.264 mo
100.494 213.617 100.782 213.905 101.133 213.905 cv
@
109.015 213.905 mo
111.127 213.905 li
@
111.127 213.905 mo
111.34 213.905 111.525 213.81 111.649 213.637 cv
@
111.649 213.637 mo
111.771 213.463 111.803 213.257 111.732 213.056 cv
@
111.732 213.056 mo
110.363 209.071 li
@
110.363 209.071 mo
110.304 208.901 110.19 208.774 110.028 208.699 cv
@
110.028 208.699 mo
109.865 208.624 109.695 208.617 109.526 208.683 cv
@
109.526 208.683 mo
109.25 208.79 108.973 208.874 108.697 208.939 cv
@
108.697 208.939 mo
108.406 209.008 108.085 209.052 107.729 209.081 cv
@
107.729 209.081 mo
107.525 209.098 107.356 209.198 107.245 209.371 cv
@
107.245 209.371 mo
107.133 209.542 107.11 209.738 107.178 209.931 cv
@
107.178 209.931 mo
108.412 213.476 li
@
108.412 213.476 mo
108.503 213.736 108.739 213.905 109.015 213.905 cv
@
75.0287 198.89 mo
75.0287 207.122 li
@
75.0287 207.122 mo
75.0287 208.264 75.1425 209.196 75.3925 209.941 cv
@
75.3925 209.941 mo
75.6439 210.71 76.0311 211.409 76.6005 212.037 cv
@
76.6005 212.037 mo
77.1024 212.574 77.6732 213.039 78.3099 213.389 cv
@
78.3099 213.389 mo
78.7045 213.62 79.1176 213.807 79.5516 213.944 cv
@
79.5516 213.944 mo
79.7523 214.008 79.952 213.974 80.1234 213.849 cv
@
80.1234 213.849 mo
80.2924 213.725 80.3842 213.542 80.3842 213.332 cv
@
80.3842 213.332 mo
80.3842 211.136 li
@
80.3842 211.136 mo
80.3842 210.879 80.2445 210.659 80.0126 210.551 cv
@
80.0126 210.551 mo
79.7655 210.437 79.5536 210.313 79.3817 210.175 cv
@
79.3817 210.175 mo
79.1117 209.96 78.9027 209.732 78.7435 209.429 cv
@
78.7435 209.429 mo
78.5844 209.126 78.4701 208.776 78.4008 208.357 cv
@
78.4008 208.357 mo
78.3334 207.938 78.3099 207.425 78.3099 206.819 cv
@
78.3099 206.819 mo
78.3099 198.89 li
@
78.3099 198.89 mo
78.3099 198.535 78.0228 198.248 77.6698 198.248 cv
@
77.6698 198.248 mo
75.6688 198.248 li
@
75.6688 198.248 mo
75.3163 198.248 75.0287 198.535 75.0287 198.89 cv
@
84.2821 198.89 mo
84.2821 206.819 li
@
84.2821 206.819 mo
84.2821 207.52 84.2582 208.055 84.1889 208.427 cv
@
84.1889 208.427 mo
84.122 208.823 84.0077 209.15 83.848 209.429 cv
@
83.848 209.429 mo
83.6889 209.732 83.4608 209.987 83.2098 210.198 cv
@
83.2098 210.198 mo
83.0277 210.336 82.8143 210.457 82.5712 210.563 cv
@
82.5712 210.563 mo
82.3314 210.665 82.1845 210.889 82.1845 211.15 cv
@
82.1845 211.15 mo
82.1845 213.328 li
@
82.1845 213.328 mo
82.1845 213.539 82.2763 213.721 82.4457 213.846 cv
@
82.4457 213.846 mo
82.6166 213.971 82.8163 214.004 83.017 213.94 cv
@
83.017 213.94 mo
83.4423 213.806 83.8549 213.625 84.2582 213.412 cv
@
84.2582 213.412 mo
84.9188 213.063 85.4891 212.597 85.9901 212.037 cv
@
85.9901 212.037 mo
86.5595 211.409 86.9472 210.71 87.1981 209.941 cv
@
87.1981 209.941 mo
87.4496 209.196 87.5624 208.264 87.5624 207.122 cv
@
87.5624 207.122 mo
87.5624 198.89 li
@
87.5624 198.89 mo
87.5624 198.535 87.2743 198.248 86.9213 198.248 cv
@
86.9213 198.248 mo
84.9218 198.248 li
@
84.9218 198.248 mo
84.5692 198.248 84.2821 198.535 84.2821 198.89 cv
@
48.4608 207.826 mo
48.6137 208.562 48.8768 209.255 49.2245 209.917 cv
@
49.2245 209.917 mo
49.6898 210.799 50.2733 211.571 50.9799 212.224 cv
@
50.9799 212.224 mo
51.6869 212.876 52.5067 213.389 53.4179 213.738 cv
@
53.4179 213.738 mo
54.329 214.114 55.2875 214.301 56.3129 214.301 cv
@
56.3129 214.301 mo
57.3383 214.301 58.2963 214.114 59.2064 213.762 cv
@
59.2064 213.762 mo
60.0951 213.412 60.9169 212.9 61.6234 212.247 cv
@
61.6234 212.247 mo
62.3285 211.618 62.8983 210.851 63.3773 209.965 cv
@
63.3773 209.965 mo
63.7186 209.302 63.9711 208.587 64.1337 207.828 cv
@
64.1337 207.828 mo
64.1766 207.633 64.1303 207.447 64.0062 207.291 cv
@
64.0062 207.291 mo
63.8798 207.136 63.7074 207.053 63.5082 207.053 cv
@
63.5082 207.053 mo
61.4467 207.053 li
@
61.4467 207.053 mo
61.1635 207.053 60.9222 207.229 60.8373 207.5 cv
@
60.8373 207.5 mo
60.5175 208.501 59.9838 209.298 59.2528 209.895 cv
@
59.2528 209.895 mo
58.4042 210.587 57.4301 210.942 56.2904 210.942 cv
@
56.2904 210.942 mo
55.7196 210.942 55.1732 210.851 54.6718 210.663 cv
@
54.6718 210.663 mo
54.1703 210.478 53.7152 210.221 53.3041 209.871 cv
@
53.3041 209.871 mo
52.8944 209.522 52.5531 209.126 52.2557 208.637 cv
@
52.2557 208.637 mo
52.0394 208.297 51.872 207.919 51.7528 207.513 cv
@
51.7528 207.513 mo
51.6718 207.236 51.4271 207.053 51.1381 207.053 cv
@
51.1381 207.053 mo
49.0863 207.053 li
@
49.0863 207.053 mo
48.8871 207.053 48.7152 207.135 48.5897 207.29 cv
@
48.5897 207.29 mo
48.4628 207.445 48.4193 207.63 48.4608 207.826 cv
@
51.7533 204.71 mo
51.8734 204.309 52.0394 203.939 52.2557 203.582 cv
@
52.2557 203.582 mo
52.5531 203.093 52.8944 202.696 53.3041 202.347 cv
@
53.3041 202.347 mo
53.7152 201.998 54.1703 201.741 54.6718 201.555 cv
@
54.6718 201.555 mo
55.1732 201.369 55.7196 201.275 56.2904 201.275 cv
@
56.2904 201.275 mo
57.4301 201.275 58.4096 201.625 59.2528 202.301 cv
@
59.2528 202.301 mo
59.9887 202.911 60.5175 203.718 60.8373 204.72 cv
@
60.8373 204.72 mo
60.9222 204.989 61.1635 205.166 61.4467 205.166 cv
@
61.4467 205.166 mo
63.5082 205.166 li
@
63.5082 205.166 mo
63.7074 205.166 63.8798 205.083 64.0057 204.928 cv
@
64.0057 204.928 mo
64.1303 204.771 64.1766 204.586 64.1337 204.39 cv
@
64.1337 204.39 mo
63.9711 203.632 63.726 202.912 63.3773 202.254 cv
@
63.3773 202.254 mo
62.9071 201.364 62.3285 200.601 61.6234 199.948 cv
@
61.6234 199.948 mo
60.9169 199.319 60.0951 198.807 59.2064 198.457 cv
@
59.2064 198.457 mo
58.2963 198.108 57.3383 197.921 56.3129 197.921 cv
@
56.3129 197.921 mo
55.2875 197.921 54.329 198.108 53.4179 198.457 cv
@
53.4179 198.457 mo
52.5067 198.83 51.6869 199.343 50.9799 199.994 cv
@
50.9799 199.994 mo
50.2733 200.647 49.6805 201.416 49.2245 202.301 cv
@
49.2245 202.301 mo
48.869 202.959 48.6137 203.657 48.4608 204.394 cv
@
48.4608 204.394 mo
48.4193 204.59 48.4628 204.774 48.5897 204.929 cv
@
48.5897 204.929 mo
48.7157 205.084 48.8871 205.166 49.0863 205.166 cv
@
49.0863 205.166 mo
51.139 205.166 li
@
51.139 205.166 mo
51.4281 205.166 51.6713 204.983 51.7533 204.71 cv
@
31.5736 207.751 mo
36.0136 207.751 li
@
36.0136 207.751 mo
36.3656 207.751 36.6542 207.463 36.6542 207.11 cv
@
36.6542 207.11 mo
36.6542 205.131 li
@
36.6542 205.131 mo
36.6542 204.778 36.3656 204.49 36.0136 204.49 cv
@
36.0136 204.49 mo
31.5736 204.49 li
@
31.5736 204.49 mo
31.2216 204.49 30.9335 204.778 30.9335 205.131 cv
@
30.9335 205.131 mo
30.9335 207.11 li
@
30.9335 207.11 mo
30.9335 207.463 31.2216 207.751 31.5736 207.751 cv
@
26.5829 213.905 mo
28.5844 213.905 li
@
28.5844 213.905 mo
28.9379 213.905 29.2255 213.617 29.2255 213.264 cv
@
29.2255 213.264 mo
29.225 198.959 li
@
29.225 198.959 mo
29.225 198.605 28.9379 198.318 28.5844 198.318 cv
@
28.5844 198.318 mo
26.5829 198.318 li
@
26.5829 198.318 mo
26.2313 198.318 25.9428 198.605 25.9428 198.959 cv
@
25.9428 198.959 mo
25.9428 213.264 li
@
25.9428 213.264 mo
25.9428 213.617 26.2313 213.905 26.5829 213.905 cv
@
31.5736 201.579 mo
36.0136 201.579 li
@
36.0136 201.579 mo
36.3656 201.579 36.6542 201.291 36.6542 200.938 cv
@
36.6542 200.938 mo
36.6542 198.959 li
@
36.6542 198.959 mo
36.6542 198.605 36.3656 198.318 36.0136 198.318 cv
@
36.0136 198.318 mo
31.5736 198.318 li
@
31.5736 198.318 mo
31.2216 198.318 30.9335 198.605 30.9335 198.959 cv
@
30.9335 198.959 mo
30.9335 200.938 li
@
30.9335 200.938 mo
30.9335 201.291 31.2216 201.579 31.5736 201.579 cv
@
200.205 188.906 mo
202.206 188.906 li
@
202.206 188.906 mo
202.559 188.906 202.847 188.618 202.847 188.267 cv
@
202.847 188.267 mo
202.847 182.946 li
@
202.847 182.946 mo
202.847 182.758 202.773 182.595 202.633 182.469 cv
@
202.633 182.469 mo
200.633 180.68 li
@
200.633 180.68 mo
200.439 180.508 200.18 180.467 199.944 180.572 cv
@
199.944 180.572 mo
199.708 180.678 199.565 180.899 199.565 181.156 cv
@
199.565 181.156 mo
199.565 188.267 li
@
199.565 188.267 mo
199.565 188.618 199.852 188.906 200.205 188.906 cv
@
199.777 177.447 mo
211.942 188.431 li
@
211.942 188.431 mo
212.135 188.605 212.395 188.646 212.631 188.54 cv
@
212.631 188.54 mo
212.868 188.435 213.011 188.214 213.011 187.955 cv
@
213.011 187.955 mo
213.011 173.961 li
@
213.011 173.961 mo
213.011 173.608 212.723 173.319 212.37 173.319 cv
@
212.37 173.319 mo
210.37 173.319 li
@
210.37 173.319 mo
210.017 173.319 209.729 173.608 209.729 173.961 cv
@
209.729 173.961 mo
209.729 180.565 li
@
209.729 180.565 mo
209.729 180.823 209.586 181.045 209.349 181.149 cv
@
209.349 181.149 mo
209.113 181.255 208.852 181.214 208.66 181.04 cv
@
208.66 181.04 mo
200.635 173.775 li
@
200.635 173.775 mo
200.443 173.602 200.182 173.56 199.945 173.665 cv
@
199.945 173.665 mo
199.709 173.77 199.565 173.991 199.565 174.252 cv
@
199.565 174.252 mo
199.565 176.972 li
@
199.565 176.972 mo
199.565 177.159 199.637 177.321 199.777 177.447 cv
@
181.496 182.753 mo
186.233 182.753 li
@
186.233 182.753 mo
186.585 182.753 186.873 182.465 186.873 182.111 cv
@
186.873 182.111 mo
186.873 180.134 li
@
186.873 180.134 mo
186.873 179.78 186.585 179.492 186.233 179.492 cv
@
186.233 179.492 mo
181.496 179.492 li
@
181.496 179.492 mo
181.144 179.492 180.856 179.78 180.856 180.134 cv
@
180.856 180.134 mo
180.856 182.111 li
@
180.856 182.111 mo
180.856 182.465 181.144 182.753 181.496 182.753 cv
@
181.496 188.906 mo
186.233 188.906 li
@
186.233 188.906 mo
186.585 188.906 186.873 188.618 186.873 188.267 cv
@
186.873 188.267 mo
186.873 186.282 li
@
186.873 186.282 mo
186.873 185.929 186.585 185.642 186.233 185.642 cv
@
186.233 185.642 mo
181.496 185.642 li
@
181.496 185.642 mo
181.144 185.642 180.856 185.929 180.856 186.282 cv
@
180.856 186.282 mo
180.856 188.267 li
@
180.856 188.267 mo
180.856 188.618 181.144 188.906 181.496 188.906 cv
@
176.346 188.906 mo
178.348 188.906 li
@
178.348 188.906 mo
178.702 188.906 178.988 188.619 178.988 188.267 cv
@
178.988 188.267 mo
178.988 173.961 li
@
178.988 173.961 mo
178.988 173.608 178.702 173.319 178.348 173.319 cv
@
178.348 173.319 mo
176.346 173.319 li
@
176.346 173.319 mo
175.994 173.319 175.705 173.608 175.705 173.961 cv
@
175.705 173.961 mo
175.705 188.267 li
@
175.705 188.267 mo
175.705 188.618 175.994 188.906 176.346 188.906 cv
@
181.496 176.58 mo
186.233 176.58 li
@
186.233 176.58 mo
186.585 176.58 186.873 176.292 186.873 175.939 cv
@
186.873 175.939 mo
186.873 173.961 li
@
186.873 173.961 mo
186.873 173.608 186.585 173.319 186.233 173.319 cv
@
186.233 173.319 mo
181.496 173.319 li
@
181.496 173.319 mo
181.144 173.319 180.856 173.608 180.856 173.961 cv
@
180.856 173.961 mo
180.856 175.939 li
@
180.856 175.939 mo
180.856 176.292 181.144 176.58 181.496 176.58 cv
@
156.855 188.521 mo
157.979 186.32 li
@
157.979 186.32 mo
158.075 186.132 158.075 185.928 157.98 185.739 cv
@
157.98 185.739 mo
151.925 173.71 li
@
151.925 173.71 mo
151.812 173.488 151.6 173.357 151.353 173.357 cv
@
151.353 173.357 mo
149.114 173.357 li
@
149.114 173.357 mo
148.885 173.357 148.688 173.469 148.569 173.663 cv
@
148.569 173.663 mo
148.448 173.857 148.439 174.083 148.542 174.288 cv
@
148.542 174.288 mo
155.714 188.517 li
@
155.714 188.517 mo
155.825 188.738 156.036 188.868 156.284 188.869 cv
@
156.284 188.869 mo
156.532 188.87 156.743 188.74 156.855 188.521 cv
@
157.455 180.636 mo
158.581 182.852 li
@
158.581 182.852 mo
158.692 183.073 158.904 183.203 159.154 183.203 cv
@
159.154 183.203 mo
159.4 183.202 159.611 183.071 159.723 182.851 cv
@
159.723 182.851 mo
164.038 174.288 li
@
164.038 174.288 mo
164.143 174.083 164.133 173.858 164.013 173.663 cv
@
164.013 173.663 mo
163.894 173.469 163.697 173.357 163.469 173.357 cv
@
163.469 173.357 mo
161.232 173.357 li
@
161.232 173.357 mo
160.985 173.357 160.774 173.488 160.662 173.709 cv
@
160.662 173.709 mo
157.454 180.055 li
@
157.454 180.055 mo
157.359 180.243 157.359 180.447 157.455 180.636 cv
@
131.499 182.753 mo
136.236 182.753 li
@
136.236 182.753 mo
136.588 182.753 136.876 182.465 136.876 182.111 cv
@
136.876 182.111 mo
136.876 180.134 li
@
136.876 180.134 mo
136.876 179.78 136.588 179.492 136.236 179.492 cv
@
136.236 179.492 mo
131.499 179.492 li
@
131.499 179.492 mo
131.146 179.492 130.859 179.78 130.859 180.134 cv
@
130.859 180.134 mo
130.859 182.111 li
@
130.859 182.111 mo
130.859 182.465 131.146 182.753 131.499 182.753 cv
@
131.499 188.906 mo
136.236 188.906 li
@
136.236 188.906 mo
136.588 188.906 136.876 188.618 136.876 188.267 cv
@
136.876 188.267 mo
136.876 186.282 li
@
136.876 186.282 mo
136.876 185.929 136.588 185.642 136.236 185.642 cv
@
136.236 185.642 mo
131.499 185.642 li
@
131.499 185.642 mo
131.146 185.642 130.859 185.929 130.859 186.282 cv
@
130.859 186.282 mo
130.859 188.267 li
@
130.859 188.267 mo
130.859 188.618 131.146 188.906 131.499 188.906 cv
@
126.349 188.906 mo
128.35 188.906 li
@
128.35 188.906 mo
128.702 188.906 128.99 188.619 128.99 188.267 cv
@
128.99 188.267 mo
128.99 173.961 li
@
128.99 173.961 mo
128.99 173.608 128.702 173.319 128.35 173.319 cv
@
128.35 173.319 mo
126.349 173.319 li
@
126.349 173.319 mo
125.996 173.319 125.708 173.608 125.708 173.961 cv
@
125.708 173.961 mo
125.708 188.267 li
@
125.708 188.267 mo
125.708 188.618 125.996 188.906 126.349 188.906 cv
@
131.499 176.58 mo
136.236 176.58 li
@
136.236 176.58 mo
136.588 176.58 136.876 176.292 136.876 175.939 cv
@
136.876 175.939 mo
136.876 173.961 li
@
136.876 173.961 mo
136.876 173.608 136.588 173.319 136.236 173.319 cv
@
136.236 173.319 mo
131.499 173.319 li
@
131.499 173.319 mo
131.146 173.319 130.859 173.608 130.859 173.961 cv
@
130.859 173.961 mo
130.859 175.939 li
@
130.859 175.939 mo
130.859 176.292 131.146 176.58 131.499 176.58 cv
@
102.376 188.906 mo
104.378 188.906 li
@
104.378 188.906 mo
104.731 188.906 105.018 188.619 105.018 188.267 cv
@
105.018 188.267 mo
105.018 173.961 li
@
105.018 173.961 mo
105.018 173.608 104.731 173.319 104.378 173.319 cv
@
104.378 173.319 mo
102.376 173.319 li
@
102.376 173.319 mo
102.024 173.319 101.736 173.608 101.736 173.961 cv
@
101.736 173.961 mo
101.736 188.267 li
@
101.736 188.267 mo
101.736 188.618 102.024 188.906 102.376 188.906 cv
@
107.072 188.906 mo
110.212 188.906 li
@
110.212 188.906 mo
110.565 188.906 110.852 188.618 110.852 188.267 cv
@
110.852 188.267 mo
110.852 186.282 li
@
110.852 186.282 mo
110.852 185.929 110.565 185.642 110.212 185.642 cv
@
110.212 185.642 mo
107.072 185.642 li
@
107.072 185.642 mo
106.72 185.642 106.431 185.929 106.431 186.282 cv
@
106.431 186.282 mo
106.431 188.267 li
@
106.431 188.267 mo
106.431 188.618 106.72 188.906 107.072 188.906 cv
@
81.5023 182.753 mo
86.2387 182.753 li
@
86.2387 182.753 mo
86.5912 182.753 86.8793 182.465 86.8793 182.111 cv
@
86.8793 182.111 mo
86.8793 180.134 li
@
86.8793 180.134 mo
86.8793 179.78 86.5912 179.492 86.2387 179.492 cv
@
86.2387 179.492 mo
81.5023 179.492 li
@
81.5023 179.492 mo
81.1498 179.492 80.8617 179.78 80.8617 180.134 cv
@
80.8617 180.134 mo
80.8617 182.111 li
@
80.8617 182.111 mo
80.8617 182.465 81.1498 182.753 81.5023 182.753 cv
@
81.5023 188.906 mo
86.2387 188.906 li
@
86.2387 188.906 mo
86.5912 188.906 86.8793 188.618 86.8793 188.267 cv
@
86.8793 188.267 mo
86.8793 186.282 li
@
86.8793 186.282 mo
86.8793 185.929 86.5912 185.642 86.2387 185.642 cv
@
86.2387 185.642 mo
81.5023 185.642 li
@
81.5023 185.642 mo
81.1498 185.642 80.8617 185.929 80.8617 186.282 cv
@
80.8617 186.282 mo
80.8617 188.267 li
@
80.8617 188.267 mo
80.8617 188.618 81.1498 188.906 81.5023 188.906 cv
@
76.3524 188.906 mo
78.3529 188.906 li
@
78.3529 188.906 mo
78.7055 188.906 78.993 188.619 78.994 188.267 cv
@
78.994 188.267 mo
78.993 173.961 li
@
78.993 173.961 mo
78.993 173.608 78.7055 173.319 78.3529 173.319 cv
@
78.3529 173.319 mo
76.3524 173.319 li
@
76.3524 173.319 mo
75.9999 173.319 75.7118 173.608 75.7118 173.961 cv
@
75.7118 173.961 mo
75.7118 188.267 li
@
75.7118 188.267 mo
75.7118 188.618 75.9999 188.906 76.3524 188.906 cv
@
81.5023 176.58 mo
86.2387 176.58 li
@
86.2387 176.58 mo
86.5912 176.58 86.8793 176.292 86.8793 175.939 cv
@
86.8793 175.939 mo
86.8793 173.961 li
@
86.8793 173.961 mo
86.8793 173.608 86.5912 173.319 86.2387 173.319 cv
@
86.2387 173.319 mo
81.5023 173.319 li
@
81.5023 173.319 mo
81.1498 173.319 80.8617 173.608 80.8617 173.961 cv
@
80.8617 173.961 mo
80.8617 175.939 li
@
80.8617 175.939 mo
80.8617 176.292 81.1498 176.58 81.5023 176.58 cv
@
53.4745 179.542 mo
54.4847 182.063 li
@
54.4847 182.063 mo
54.5819 182.304 54.8012 182.456 55.0614 182.463 cv
@
55.0614 182.463 mo
55.3217 182.471 55.5482 182.33 55.6591 182.095 cv
@
55.6591 182.095 mo
55.7118 181.982 li
@
55.7118 181.982 mo
55.8197 181.753 56.036 181.613 56.2909 181.613 cv
@
56.2909 181.613 mo
56.5448 181.613 56.7606 181.75 56.8695 181.979 cv
@
56.8695 181.979 mo
59.8773 188.328 li
@
59.8773 188.328 mo
59.9882 188.564 60.2152 188.701 60.475 188.693 cv
@
60.475 188.693 mo
60.7347 188.686 60.9525 188.534 61.0497 188.292 cv
@
61.0497 188.292 mo
62.0634 185.763 li
@
62.0634 185.763 mo
62.1317 185.591 62.1264 185.416 62.0487 185.249 cv
@
62.0487 185.249 mo
56.869 174.274 li
@
56.869 174.274 mo
56.7606 174.044 56.5438 173.905 56.2894 173.905 cv
@
56.2894 173.905 mo
56.0346 173.906 55.8187 174.045 55.7108 174.275 cv
@
55.7108 174.275 mo
53.4877 179.031 li
@
53.4877 179.031 mo
53.411 179.198 53.4052 179.371 53.4745 179.542 cv
@
52.7191 188.33 mo
53.8656 185.896 li
@
53.8656 185.896 mo
53.9452 185.728 53.9511 185.555 53.8807 185.382 cv
@
53.8807 185.382 mo
49.2714 173.932 li
@
49.2714 173.932 mo
49.1718 173.684 48.9442 173.529 48.6771 173.529 cv
@
48.6771 173.529 mo
46.5238 173.529 li
@
46.5238 173.529 mo
46.3031 173.529 46.1151 173.629 45.9921 173.813 cv
@
45.9921 173.813 mo
45.869 173.995 45.8466 174.208 45.9301 174.411 cv
@
45.9301 174.411 mo
51.5463 188.297 li
@
51.5463 188.297 mo
51.6439 188.538 51.8617 188.69 52.1215 188.697 cv
@
52.1215 188.697 mo
52.3817 188.703 52.6073 188.566 52.7191 188.33 cv
@
61.3099 179.447 mo
62.4774 181.887 li
@
62.4774 181.887 mo
62.5892 182.121 62.8143 182.26 63.0746 182.251 cv
@
63.0746 182.251 mo
63.3329 182.243 63.5512 182.092 63.6473 181.852 cv
@
63.6473 181.852 mo
66.6649 174.412 li
@
66.6649 174.412 mo
66.7465 174.208 66.7255 173.995 66.6019 173.813 cv
@
66.6019 173.813 mo
66.4808 173.63 66.2904 173.529 66.0702 173.529 cv
@
66.0702 173.529 mo
63.9413 173.529 li
@
63.9413 173.529 mo
63.6752 173.529 63.4496 173.683 63.349 173.927 cv
@
63.349 173.927 mo
61.2963 178.927 li
@
61.2963 178.927 mo
61.2245 179.101 61.2299 179.277 61.3099 179.447 cv
@
30.3119 188.906 mo
32.3124 188.906 li
@
32.3124 188.906 mo
32.6649 188.906 32.953 188.618 32.953 188.267 cv
@
32.953 188.267 mo
32.953 179.132 li
@
32.953 179.132 mo
32.953 178.778 32.6649 178.491 32.3124 178.491 cv
@
32.3124 178.491 mo
30.3119 178.491 li
@
30.3119 178.491 mo
29.9594 178.491 29.6708 178.778 29.6708 179.132 cv
@
29.6708 179.132 mo
29.6708 188.267 li
@
29.6708 188.267 mo
29.6708 188.618 29.9594 188.906 30.3119 188.906 cv
@
26.7987 176.58 mo
35.7997 176.58 li
@
35.7997 176.58 mo
36.1522 176.58 36.4393 176.292 36.4393 175.939 cv
@
36.4393 175.939 mo
36.4393 173.961 li
@
36.4393 173.961 mo
36.4393 173.608 36.1522 173.319 35.8002 173.319 cv
@
35.8002 173.319 mo
26.7987 173.319 li
@
26.7987 173.319 mo
26.4452 173.319 26.1576 173.608 26.1576 173.961 cv
@
26.1576 173.961 mo
26.1576 175.939 li
@
26.1576 175.939 mo
26.1576 176.292 26.4452 176.58 26.7987 176.58 cv
@
207.058 157.668 mo
211.793 157.668 li
@
211.793 157.668 mo
212.146 157.668 212.434 157.38 212.434 157.027 cv
@
212.434 157.027 mo
212.434 155.049 li
@
212.434 155.049 mo
212.434 154.695 212.146 154.408 211.793 154.408 cv
@
211.793 154.408 mo
207.058 154.408 li
@
207.058 154.408 mo
206.706 154.408 206.418 154.695 206.418 155.049 cv
@
206.418 155.049 mo
206.418 157.027 li
@
206.418 157.027 mo
206.418 157.38 206.706 157.668 207.058 157.668 cv
@
207.058 163.822 mo
211.793 163.822 li
@
211.793 163.822 mo
212.146 163.822 212.434 163.535 212.434 163.182 cv
@
212.434 163.182 mo
212.434 161.197 li
@
212.434 161.197 mo
212.434 160.846 212.146 160.558 211.793 160.558 cv
@
211.793 160.558 mo
207.058 160.558 li
@
207.058 160.558 mo
206.706 160.558 206.418 160.846 206.418 161.197 cv
@
206.418 161.197 mo
206.418 163.182 li
@
206.418 163.182 mo
206.418 163.535 206.706 163.822 207.058 163.822 cv
@
201.908 163.822 mo
203.91 163.822 li
@
203.91 163.822 mo
204.262 163.822 204.549 163.535 204.549 163.182 cv
@
204.549 163.182 mo
204.549 148.875 li
@
204.549 148.875 mo
204.549 148.523 204.262 148.234 203.91 148.234 cv
@
203.91 148.234 mo
201.908 148.234 li
@
201.908 148.234 mo
201.556 148.234 201.268 148.523 201.268 148.875 cv
@
201.268 148.875 mo
201.268 163.182 li
@
201.268 163.182 mo
201.268 163.535 201.556 163.822 201.908 163.822 cv
@
207.058 151.495 mo
211.793 151.495 li
@
211.793 151.495 mo
212.146 151.495 212.434 151.207 212.434 150.855 cv
@
212.434 150.855 mo
212.434 148.875 li
@
212.434 148.875 mo
212.434 148.523 212.146 148.235 211.793 148.235 cv
@
211.793 148.235 mo
207.058 148.234 li
@
207.058 148.234 mo
206.706 148.234 206.418 148.523 206.418 148.875 cv
@
206.418 148.875 mo
206.418 150.855 li
@
206.418 150.855 mo
206.418 151.207 206.706 151.495 207.058 151.495 cv
@
181.943 157.668 mo
186.68 157.668 li
@
186.68 157.668 mo
187.032 157.668 187.319 157.38 187.319 157.027 cv
@
187.319 157.027 mo
187.319 155.049 li
@
187.319 155.049 mo
187.319 154.695 187.032 154.408 186.68 154.408 cv
@
186.68 154.408 mo
181.943 154.408 li
@
181.943 154.408 mo
181.592 154.408 181.303 154.695 181.303 155.049 cv
@
181.303 155.049 mo
181.303 157.027 li
@
181.303 157.027 mo
181.303 157.38 181.592 157.668 181.943 157.668 cv
@
181.943 163.822 mo
186.68 163.822 li
@
186.68 163.822 mo
187.032 163.822 187.319 163.535 187.319 163.182 cv
@
187.319 163.182 mo
187.319 161.197 li
@
187.319 161.197 mo
187.319 160.846 187.032 160.558 186.68 160.558 cv
@
186.68 160.558 mo
181.943 160.558 li
@
181.943 160.558 mo
181.592 160.558 181.303 160.846 181.303 161.197 cv
@
181.303 161.197 mo
181.303 163.182 li
@
181.303 163.182 mo
181.303 163.535 181.592 163.822 181.943 163.822 cv
@
176.793 163.822 mo
178.794 163.822 li
@
178.794 163.822 mo
179.148 163.822 179.435 163.535 179.435 163.182 cv
@
179.435 163.182 mo
179.435 148.875 li
@
179.435 148.875 mo
179.435 148.523 179.148 148.234 178.794 148.234 cv
@
178.794 148.234 mo
176.793 148.234 li
@
176.793 148.234 mo
176.441 148.234 176.153 148.523 176.153 148.875 cv
@
176.153 148.875 mo
176.153 163.182 li
@
176.153 163.182 mo
176.153 163.535 176.441 163.822 176.793 163.822 cv
@
181.943 151.495 mo
186.68 151.495 li
@
186.68 151.495 mo
187.032 151.495 187.319 151.207 187.319 150.855 cv
@
187.319 150.855 mo
187.319 148.875 li
@
187.319 148.875 mo
187.319 148.523 187.032 148.235 186.68 148.235 cv
@
186.68 148.235 mo
181.943 148.234 li
@
181.943 148.234 mo
181.592 148.234 181.303 148.523 181.303 148.875 cv
@
181.303 148.875 mo
181.303 150.855 li
@
181.303 150.855 mo
181.303 151.207 181.592 151.495 181.943 151.495 cv
@
156.852 157.668 mo
157.466 157.668 li
@
157.466 157.668 mo
158.286 157.668 158.947 157.599 159.472 157.437 cv
@
159.472 157.437 mo
159.995 157.297 160.474 157.04 160.907 156.691 cv
@
160.907 156.691 mo
161.477 156.248 161.909 155.689 162.228 155.014 cv
@
162.228 155.014 mo
162.525 154.36 162.684 153.662 162.684 152.941 cv
@
162.684 152.941 mo
162.684 152.265 162.547 151.612 162.274 151.007 cv
@
162.274 151.007 mo
162 150.4 161.615 149.865 161.135 149.422 cv
@
161.135 149.422 mo
160.884 149.213 160.656 149.026 160.406 148.864 cv
@
160.406 148.864 mo
160.155 148.7 159.857 148.583 159.563 148.49 cv
@
159.563 148.49 mo
159.244 148.398 158.901 148.327 158.536 148.281 cv
@
158.536 148.281 mo
158.149 148.258 157.716 148.234 157.238 148.234 cv
@
157.238 148.234 mo
156.852 148.234 li
@
156.852 148.234 mo
156.5 148.234 156.212 148.523 156.212 148.875 cv
@
156.212 148.875 mo
156.212 150.9 li
@
156.212 150.9 mo
156.212 151.254 156.5 151.542 156.852 151.542 cv
@
156.852 151.542 mo
157.443 151.542 li
@
157.443 151.542 mo
157.83 151.542 158.126 151.566 158.332 151.589 cv
@
158.332 151.589 mo
158.536 151.636 158.719 151.706 158.879 151.822 cv
@
158.879 151.822 mo
159.038 151.939 159.175 152.101 159.288 152.288 cv
@
159.288 152.288 mo
159.403 152.497 159.449 152.707 159.449 152.941 cv
@
159.449 152.941 mo
159.449 153.22 159.379 153.452 159.244 153.686 cv
@
159.244 153.686 mo
159.084 153.895 158.901 154.081 158.651 154.174 cv
@
158.651 154.174 mo
158.491 154.245 158.309 154.314 158.126 154.338 cv
@
158.126 154.338 mo
157.944 154.36 157.671 154.36 157.284 154.36 cv
@
157.284 154.36 mo
156.852 154.36 li
@
156.852 154.36 mo
156.5 154.36 156.212 154.649 156.212 155.002 cv
@
156.212 155.002 mo
156.212 157.027 li
@
156.212 157.027 mo
156.212 157.38 156.5 157.668 156.852 157.668 cv
@
151.725 163.822 mo
153.725 163.822 li
@
153.725 163.822 mo
154.078 163.822 154.367 163.535 154.367 163.182 cv
@
154.367 163.182 mo
154.367 148.875 li
@
154.367 148.875 mo
154.367 148.523 154.078 148.234 153.725 148.234 cv
@
153.725 148.234 mo
151.725 148.234 li
@
151.725 148.234 mo
151.373 148.234 151.085 148.523 151.085 148.875 cv
@
151.085 148.875 mo
151.085 163.182 li
@
151.085 163.182 mo
151.085 163.535 151.373 163.822 151.725 163.822 cv
@
159.607 163.822 mo
161.719 163.822 li
@
161.719 163.822 mo
161.933 163.822 162.116 163.729 162.241 163.554 cv
@
162.241 163.554 mo
162.364 163.381 162.393 163.175 162.324 162.973 cv
@
162.324 162.973 mo
160.954 158.988 li
@
160.954 158.988 mo
160.896 158.817 160.783 158.691 160.619 158.616 cv
@
160.619 158.616 mo
160.455 158.539 160.286 158.534 160.118 158.6 cv
@
160.118 158.6 mo
159.841 158.707 159.565 158.791 159.288 158.857 cv
@
159.288 158.857 mo
158.999 158.925 158.677 158.969 158.32 158.999 cv
@
158.32 158.999 mo
158.117 159.016 157.948 159.115 157.836 159.288 cv
@
157.836 159.288 mo
157.725 159.46 157.702 159.655 157.769 159.849 cv
@
157.769 159.849 mo
159.003 163.393 li
@
159.003 163.393 mo
159.094 163.655 159.33 163.822 159.607 163.822 cv
@
135.373 163.909 mo
137.375 163.909 li
@
137.375 163.909 mo
137.728 163.909 138.015 163.621 138.015 163.269 cv
@
138.015 163.269 mo
138.015 148.962 li
@
138.015 148.962 mo
138.015 148.608 137.728 148.32 137.375 148.32 cv
@
137.375 148.32 mo
135.373 148.32 li
@
135.373 148.32 mo
135.022 148.32 134.733 148.608 134.733 148.962 cv
@
134.733 148.962 mo
134.733 163.269 li
@
134.733 163.269 mo
134.733 163.621 135.022 163.909 135.373 163.909 cv
@
125.21 163.909 mo
127.212 163.909 li
@
127.212 163.909 mo
127.563 163.909 127.851 163.621 127.851 163.269 cv
@
127.851 163.269 mo
127.851 148.962 li
@
127.851 148.962 mo
127.851 148.608 127.563 148.32 127.212 148.32 cv
@
127.212 148.32 mo
125.21 148.32 li
@
125.21 148.32 mo
124.857 148.32 124.569 148.608 124.569 148.962 cv
@
124.569 148.962 mo
124.569 163.269 li
@
124.569 163.269 mo
124.569 163.621 124.857 163.909 125.21 163.909 cv
@
129.814 157.732 mo
132.771 157.732 li
@
132.771 157.732 mo
133.124 157.732 133.412 157.443 133.412 157.09 cv
@
133.412 157.09 mo
133.412 155.111 li
@
133.412 155.111 mo
133.412 154.759 133.124 154.471 132.771 154.471 cv
@
132.771 154.471 mo
129.814 154.471 li
@
129.814 154.471 mo
129.461 154.471 129.173 154.759 129.173 155.111 cv
@
129.173 155.111 mo
129.173 157.09 li
@
129.173 157.09 mo
129.173 157.443 129.461 157.732 129.814 157.732 cv
@
105.307 163.909 mo
107.308 163.909 li
@
107.308 163.909 mo
107.66 163.909 107.947 163.621 107.947 163.269 cv
@
107.947 163.269 mo
107.947 154.135 li
@
107.947 154.135 mo
107.947 153.78 107.66 153.493 107.308 153.493 cv
@
107.308 153.493 mo
105.307 153.493 li
@
105.307 153.493 mo
104.954 153.493 104.666 153.78 104.666 154.135 cv
@
104.666 154.135 mo
104.666 163.269 li
@
104.666 163.269 mo
104.666 163.621 104.954 163.909 105.307 163.909 cv
@
101.793 151.582 mo
110.795 151.582 li
@
110.795 151.582 mo
111.147 151.582 111.434 151.293 111.434 150.941 cv
@
111.434 150.941 mo
111.434 148.962 li
@
111.434 148.962 mo
111.434 148.608 111.147 148.32 110.795 148.32 cv
@
110.795 148.32 mo
101.793 148.32 li
@
101.793 148.32 mo
101.441 148.32 101.153 148.608 101.153 148.962 cv
@
101.153 148.962 mo
101.153 150.941 li
@
101.153 150.941 mo
101.153 151.293 101.441 151.582 101.793 151.582 cv
@
85.4413 163.909 mo
87.9208 163.909 li
@
87.9208 163.909 mo
88.1664 163.909 88.3778 163.78 88.4896 163.561 cv
@
88.4896 163.561 mo
88.6019 163.341 88.5839 163.094 88.4393 162.895 cv
@
88.4393 162.895 mo
78.1708 148.589 li
@
78.1708 148.589 mo
78.0472 148.414 77.8637 148.32 77.6508 148.32 cv
@
77.6508 148.32 mo
75.1683 148.32 li
@
75.1683 148.32 mo
74.9213 148.32 74.7103 148.45 74.5966 148.669 cv
@
74.5966 148.669 mo
74.4852 148.89 74.5038 149.137 74.6473 149.337 cv
@
74.6473 149.337 mo
84.9203 163.643 li
@
84.9203 163.643 mo
85.0448 163.816 85.2284 163.909 85.4413 163.909 cv
@
74.6722 163.909 mo
77.1273 163.909 li
@
77.1273 163.909 mo
77.3397 163.909 77.5228 163.816 77.6464 163.644 cv
@
77.6464 163.644 mo
79.8739 160.552 li
@
79.8739 160.552 mo
80.0375 160.324 80.0385 160.031 79.8754 159.803 cv
@
79.8754 159.803 mo
78.6566 158.104 li
@
78.6566 158.104 mo
78.5331 157.932 78.3505 157.838 78.1376 157.838 cv
@
78.1376 157.838 mo
77.9262 157.838 77.7426 157.931 77.6185 158.104 cv
@
77.6185 158.104 mo
74.1532 162.892 li
@
74.1532 162.892 mo
74.0067 163.092 73.9891 163.34 74.1014 163.559 cv
@
74.1014 163.559 mo
74.2147 163.78 74.4252 163.909 74.6722 163.909 cv
@
82.6967 151.773 mo
83.9335 153.478 li
@
83.9335 153.478 mo
84.0575 153.649 84.2406 153.742 84.4511 153.742 cv
@
84.4511 153.742 mo
84.663 153.742 84.8451 153.649 84.9691 153.478 cv
@
84.9691 153.478 mo
87.973 149.339 li
@
87.973 149.339 mo
88.1185 149.139 88.1395 148.892 88.0267 148.671 cv
@
88.0267 148.671 mo
87.9144 148.452 87.703 148.32 87.4559 148.32 cv
@
87.4559 148.32 mo
84.9818 148.32 li
@
84.9818 148.32 mo
84.7714 148.32 84.5888 148.413 84.4652 148.586 cv
@
84.4652 148.586 mo
82.6967 151.02 li
@
82.6967 151.02 mo
82.5311 151.248 82.5311 151.544 82.6967 151.773 cv
@
55.2963 163.909 mo
57.2977 163.909 li
@
57.2977 163.909 mo
57.6508 163.909 57.9379 163.621 57.9379 163.269 cv
@
57.9379 163.269 mo
57.9379 148.962 li
@
57.9379 148.962 mo
57.9379 148.608 57.6508 148.32 57.2977 148.32 cv
@
57.2977 148.32 mo
55.2963 148.32 li
@
55.2963 148.32 mo
54.9442 148.32 54.6561 148.608 54.6561 148.962 cv
@
54.6561 148.962 mo
54.6561 163.269 li
@
54.6561 163.269 mo
54.6561 163.621 54.9442 163.909 55.2963 163.909 cv
@
25.9555 159.855 mo
25.996 160.112 26.0502 160.349 26.1102 160.558 cv
@
26.1102 160.558 mo
26.223 160.954 26.3837 161.349 26.6122 161.745 cv
@
26.6122 161.745 mo
27.0673 162.537 27.683 163.143 28.4579 163.585 cv
@
28.4579 163.585 mo
29.2103 164.032 30.0297 164.242 30.9188 164.242 cv
@
30.9188 164.242 mo
31.6259 164.242 32.309 164.102 32.9242 163.822 cv
@
32.9242 163.822 mo
33.5399 163.562 34.0634 163.19 34.5189 162.724 cv
@
34.5189 162.724 mo
34.9755 162.234 35.3402 161.698 35.5912 161.069 cv
@
35.5912 161.069 mo
35.8412 160.441 35.9784 159.742 35.9784 159.021 cv
@
35.9784 159.021 mo
35.9784 157.123 35.1566 155.693 33.5331 154.73 cv
@
33.5331 154.73 mo
33.3744 154.636 33.2015 154.613 33.0253 154.666 cv
@
33.0253 154.666 mo
32.8475 154.719 32.7147 154.83 32.6332 154.995 cv
@
32.6332 154.995 mo
31.7123 156.849 li
@
31.7123 156.849 mo
31.5692 157.137 31.6596 157.483 31.9266 157.665 cv
@
31.9266 157.665 mo
32.1234 157.798 32.2806 157.941 32.3998 158.088 cv
@
32.3998 158.088 mo
32.6054 158.344 32.6962 158.694 32.6962 159.09 cv
@
32.6962 159.09 mo
32.6962 159.625 32.537 160.044 32.1952 160.394 cv
@
32.1952 160.394 mo
31.8534 160.743 31.4428 160.93 30.9418 160.93 cv
@
30.9418 160.93 mo
30.0394 160.93 29.4584 160.482 29.2118 159.585 cv
@
29.2118 159.585 mo
29.1342 159.302 28.8866 159.113 28.5941 159.113 cv
@
28.5941 159.113 mo
26.5883 159.113 li
@
26.5883 159.113 mo
26.3939 159.113 26.2274 159.19 26.101 159.336 cv
@
26.101 159.336 mo
25.9745 159.485 25.9257 159.663 25.9555 159.855 cv
@
35.2025 151.756 mo
35.1371 151.343 35.0394 150.951 34.8842 150.588 cv
@
34.8842 150.588 mo
34.6444 150.024 34.3148 149.539 33.9266 149.121 cv
@
33.9266 149.121 mo
33.517 148.724 33.038 148.421 32.5145 148.189 cv
@
32.5145 148.189 mo
31.9681 147.979 31.3749 147.862 30.7138 147.862 cv
@
30.7138 147.862 mo
30.0751 147.862 29.4833 147.979 28.9364 148.211 cv
@
28.9364 148.211 mo
28.3895 148.444 27.911 148.771 27.4994 149.19 cv
@
27.4994 149.19 mo
27.0892 149.608 26.7709 150.075 26.5429 150.634 cv
@
26.5429 150.634 mo
26.3163 151.192 26.202 151.799 26.202 152.451 cv
@
26.202 152.451 mo
26.202 153.08 26.3163 153.686 26.5429 154.221 cv
@
26.5429 154.221 mo
26.7489 154.78 27.0673 155.269 27.4545 155.665 cv
@
27.4545 155.665 mo
27.7514 155.945 28.0472 156.179 28.3661 156.342 cv
@
28.3661 156.342 mo
28.5678 156.443 28.8119 156.545 29.0975 156.649 cv
@
29.0975 156.649 mo
29.4071 156.76 29.744 156.622 29.889 156.326 cv
@
29.889 156.326 mo
30.7767 154.512 li
@
30.7767 154.512 mo
30.8607 154.34 30.8661 154.16 30.7938 153.983 cv
@
30.7938 153.983 mo
30.7196 153.807 30.5878 153.684 30.4071 153.623 cv
@
30.4071 153.623 mo
30.3339 153.598 30.2567 153.576 30.1893 153.545 cv
@
30.1893 153.545 mo
29.7059 153.325 29.4833 152.941 29.4833 152.451 cv
@
29.4833 152.451 mo
29.4833 152.101 29.5975 151.799 29.8251 151.542 cv
@
29.8251 151.542 mo
30.0536 151.286 30.349 151.17 30.6918 151.17 cv
@
30.6918 151.17 mo
31.245 151.17 31.6054 151.461 31.7821 152.043 cv
@
31.7821 152.043 mo
31.8661 152.316 32.1083 152.497 32.3944 152.497 cv
@
32.3944 152.497 mo
34.5707 152.497 li
@
34.5707 152.497 mo
34.7636 152.497 34.9301 152.42 35.0565 152.273 cv
@
35.0565 152.273 mo
35.182 152.125 35.2323 151.947 35.2025 151.756 cv
@
205.301 138.909 mo
207.302 138.909 li
@
207.302 138.909 mo
207.655 138.909 207.942 138.621 207.942 138.269 cv
@
207.942 138.269 mo
207.942 129.134 li
@
207.942 129.134 mo
207.942 128.782 207.655 128.493 207.302 128.493 cv
@
207.302 128.493 mo
205.301 128.493 li
@
205.301 128.493 mo
204.949 128.493 204.661 128.782 204.661 129.134 cv
@
204.661 129.134 mo
204.661 138.269 li
@
204.661 138.269 mo
204.661 138.621 204.949 138.909 205.301 138.909 cv
@
201.788 126.584 mo
210.788 126.584 li
@
210.788 126.584 mo
211.141 126.584 211.428 126.295 211.428 125.942 cv
@
211.428 125.942 mo
211.428 123.962 li
@
211.428 123.962 mo
211.428 123.61 211.141 123.322 210.788 123.322 cv
@
210.788 123.322 mo
201.788 123.322 li
@
201.788 123.322 mo
201.436 123.322 201.147 123.61 201.147 123.962 cv
@
201.147 123.962 mo
201.147 125.942 li
@
201.147 125.942 mo
201.147 126.295 201.436 126.584 201.788 126.584 cv
@
185.37 138.909 mo
187.371 138.909 li
@
187.371 138.909 mo
187.724 138.909 188.013 138.621 188.013 138.269 cv
@
188.013 138.269 mo
188.012 123.962 li
@
188.012 123.962 mo
188.012 123.61 187.724 123.322 187.371 123.322 cv
@
187.371 123.322 mo
185.37 123.322 li
@
185.37 123.322 mo
185.017 123.322 184.73 123.61 184.73 123.962 cv
@
184.73 123.962 mo
184.73 138.269 li
@
184.73 138.269 mo
184.73 138.621 185.017 138.909 185.37 138.909 cv
@
175.206 138.909 mo
177.206 138.909 li
@
177.206 138.909 mo
177.559 138.909 177.848 138.621 177.848 138.269 cv
@
177.848 138.269 mo
177.848 123.962 li
@
177.848 123.962 mo
177.848 123.61 177.559 123.322 177.206 123.322 cv
@
177.206 123.322 mo
175.206 123.322 li
@
175.206 123.322 mo
174.854 123.322 174.566 123.61 174.566 123.962 cv
@
174.566 123.962 mo
174.566 138.269 li
@
174.566 138.269 mo
174.566 138.621 174.854 138.909 175.206 138.909 cv
@
179.809 132.733 mo
182.768 132.733 li
@
182.768 132.733 mo
183.12 132.733 183.409 132.444 183.409 132.092 cv
@
183.409 132.092 mo
183.409 130.113 li
@
183.409 130.113 mo
183.409 129.76 183.12 129.471 182.768 129.471 cv
@
182.768 129.471 mo
179.809 129.471 li
@
179.809 129.471 mo
179.457 129.471 179.169 129.76 179.169 130.113 cv
@
179.169 130.113 mo
179.169 132.092 li
@
179.169 132.092 mo
179.169 132.444 179.457 132.733 179.809 132.733 cv
@
159.409 134.799 mo
158.534 135.596 157.499 136.006 156.326 136.006 cv
@
156.326 136.006 mo
155.664 136.006 155.049 135.866 154.478 135.609 cv
@
154.478 135.609 mo
153.91 135.354 153.408 135.004 152.974 134.562 cv
@
152.974 134.562 mo
152.542 134.12 152.224 133.607 151.973 133.024 cv
@
151.973 133.024 mo
151.722 132.419 151.585 131.789 151.585 131.114 cv
@
151.585 131.114 mo
151.585 130.462 151.699 129.833 151.95 129.228 cv
@
151.95 129.228 mo
152.201 128.645 152.542 128.132 152.974 127.691 cv
@
152.974 127.691 mo
153.408 127.247 153.91 126.921 154.478 126.664 cv
@
154.478 126.664 mo
155.049 126.409 155.688 126.291 156.348 126.291 cv
@
156.348 126.291 mo
157.009 126.291 157.602 126.409 158.125 126.618 cv
@
158.125 126.618 mo
158.511 126.79 158.898 127.038 159.294 127.371 cv
@
159.294 127.371 mo
159.547 127.584 159.916 127.571 160.153 127.34 cv
@
160.153 127.34 mo
161.641 125.891 li
@
161.641 125.891 mo
161.77 125.764 161.837 125.604 161.833 125.42 cv
@
161.833 125.42 mo
161.831 125.234 161.759 125.078 161.622 124.955 cv
@
161.622 124.955 mo
160.111 123.595 158.358 122.914 156.348 122.914 cv
@
156.348 122.914 mo
155.231 122.914 154.183 123.124 153.203 123.543 cv
@
153.203 123.543 mo
152.224 123.986 151.38 124.568 150.65 125.314 cv
@
150.65 125.314 mo
149.922 126.06 149.352 126.921 148.941 127.922 cv
@
148.941 127.922 mo
148.508 128.924 148.303 129.972 148.303 131.114 cv
@
148.303 131.114 mo
148.303 132.255 148.508 133.304 148.941 134.305 cv
@
148.941 134.305 mo
149.352 135.306 149.922 136.169 150.674 136.914 cv
@
150.674 136.914 mo
151.403 137.66 152.245 138.242 153.226 138.661 cv
@
153.226 138.661 mo
154.205 139.108 155.231 139.317 156.348 139.317 cv
@
156.348 139.317 mo
157.123 139.317 157.874 139.201 158.581 138.991 cv
@
158.581 138.991 mo
159.288 138.777 159.972 138.451 160.586 138.056 cv
@
160.586 138.056 mo
161.203 137.66 161.77 137.17 162.273 136.588 cv
@
162.273 136.588 mo
162.535 136.284 162.778 135.963 162.998 135.622 cv
@
162.998 135.622 mo
163.129 135.419 163.139 135.179 163.022 134.967 cv
@
163.022 134.967 mo
162.909 134.755 162.702 134.632 162.461 134.632 cv
@
162.461 134.632 mo
159.84 134.632 li
@
159.84 134.632 mo
159.675 134.632 159.531 134.687 159.409 134.799 cv
@
156.966 132.768 mo
163.587 132.768 li
@
163.587 132.768 mo
163.905 132.768 164.171 132.538 164.219 132.223 cv
@
164.219 132.223 mo
164.234 132.117 164.247 132.019 164.256 131.929 cv
@
164.256 131.929 mo
164.278 131.696 164.279 131.439 164.279 131.137 cv
@
164.279 131.137 mo
164.279 130.835 164.279 130.578 164.256 130.346 cv
@
164.256 130.346 mo
164.247 130.254 164.234 130.157 164.219 130.053 cv
@
164.219 130.053 mo
164.172 129.736 163.905 129.508 163.587 129.508 cv
@
163.587 129.508 mo
156.966 129.507 li
@
156.966 129.507 mo
156.614 129.507 156.326 129.794 156.326 130.148 cv
@
156.326 130.148 mo
156.326 132.126 li
@
156.326 132.126 mo
156.326 132.48 156.614 132.768 156.966 132.768 cv
@
130.292 138.909 mo
132.293 138.909 li
@
132.293 138.909 mo
132.645 138.909 132.933 138.621 132.933 138.269 cv
@
132.933 138.269 mo
132.933 123.962 li
@
132.933 123.962 mo
132.933 123.61 132.645 123.322 132.293 123.322 cv
@
132.293 123.322 mo
130.292 123.322 li
@
130.292 123.322 mo
129.939 123.322 129.652 123.61 129.652 123.962 cv
@
129.652 123.962 mo
129.652 138.269 li
@
129.652 138.269 mo
129.652 138.621 129.939 138.909 130.292 138.909 cv
@
106.501 132.756 mo
111.237 132.755 li
@
111.237 132.755 mo
111.59 132.755 111.877 132.467 111.877 132.114 cv
@
111.877 132.114 mo
111.877 130.134 li
@
111.877 130.134 mo
111.877 129.782 111.59 129.494 111.237 129.494 cv
@
111.237 129.494 mo
106.501 129.494 li
@
106.501 129.494 mo
106.148 129.494 105.861 129.782 105.861 130.134 cv
@
105.861 130.134 mo
105.861 132.114 li
@
105.861 132.114 mo
105.861 132.467 106.148 132.756 106.501 132.756 cv
@
106.501 138.91 mo
111.237 138.909 li
@
111.237 138.909 mo
111.59 138.909 111.877 138.62 111.877 138.268 cv
@
111.877 138.268 mo
111.877 136.285 li
@
111.877 136.285 mo
111.877 135.932 111.59 135.645 111.237 135.645 cv
@
111.237 135.645 mo
106.501 135.645 li
@
106.501 135.645 mo
106.148 135.645 105.861 135.932 105.861 136.285 cv
@
105.861 136.285 mo
105.861 138.268 li
@
105.861 138.268 mo
105.861 138.62 106.148 138.91 106.501 138.91 cv
@
101.351 138.909 mo
103.352 138.909 li
@
103.352 138.909 mo
103.704 138.909 103.992 138.62 103.992 138.268 cv
@
103.992 138.268 mo
103.992 123.962 li
@
103.992 123.962 mo
103.992 123.609 103.704 123.321 103.352 123.321 cv
@
103.352 123.321 mo
101.351 123.321 li
@
101.351 123.321 mo
100.998 123.321 100.71 123.609 100.71 123.962 cv
@
100.71 123.962 mo
100.71 138.268 li
@
100.71 138.268 mo
100.71 138.62 100.998 138.909 101.351 138.909 cv
@
106.501 126.583 mo
111.237 126.583 li
@
111.237 126.583 mo
111.59 126.583 111.877 126.295 111.877 125.941 cv
@
111.877 125.941 mo
111.877 123.962 li
@
111.877 123.962 mo
111.877 123.609 111.59 123.321 111.237 123.321 cv
@
111.237 123.321 mo
106.501 123.321 li
@
106.501 123.321 mo
106.148 123.321 105.861 123.609 105.861 123.962 cv
@
105.861 123.962 mo
105.861 125.941 li
@
105.861 125.941 mo
105.861 126.295 106.148 126.583 106.501 126.583 cv
@
81.8602 138.524 mo
82.9847 136.322 li
@
82.9847 136.322 mo
83.0805 136.135 83.0805 135.931 82.9857 135.742 cv
@
82.9857 135.742 mo
76.9296 123.713 li
@
76.9296 123.713 mo
76.8168 123.491 76.6054 123.36 76.3578 123.36 cv
@
76.3578 123.36 mo
74.118 123.36 li
@
74.118 123.36 mo
73.891 123.36 73.6928 123.469 73.5731 123.665 cv
@
73.5731 123.665 mo
73.4525 123.86 73.4437 124.086 73.5468 124.291 cv
@
73.5468 124.291 mo
80.7181 138.521 li
@
80.7181 138.521 mo
80.8295 138.741 81.0409 138.872 81.2889 138.872 cv
@
81.2889 138.872 mo
81.5355 138.873 81.747 138.743 81.8602 138.524 cv
@
82.4603 130.639 mo
83.5858 132.854 li
@
83.5858 132.854 mo
83.6967 133.075 83.9096 133.206 84.1566 133.204 cv
@
84.1566 133.204 mo
84.4042 133.204 84.6161 133.074 84.7274 132.853 cv
@
84.7274 132.853 mo
89.0443 124.291 li
@
89.0443 124.291 mo
89.1488 124.086 89.1381 123.861 89.0189 123.666 cv
@
89.0189 123.666 mo
88.8988 123.47 88.7025 123.36 88.4725 123.36 cv
@
88.4725 123.36 mo
86.2387 123.36 li
@
86.2387 123.36 mo
85.9901 123.36 85.7787 123.491 85.6674 123.712 cv
@
85.6674 123.712 mo
82.4584 130.058 li
@
82.4584 130.058 mo
82.3627 130.247 82.3627 130.45 82.4603 130.639 cv
@
55.2963 138.909 mo
57.2977 138.909 li
@
57.2977 138.909 mo
57.6508 138.909 57.9379 138.621 57.9379 138.269 cv
@
57.9379 138.269 mo
57.9379 123.962 li
@
57.9379 123.962 mo
57.9379 123.61 57.6508 123.322 57.2977 123.322 cv
@
57.2977 123.322 mo
55.2963 123.322 li
@
55.2963 123.322 mo
54.9442 123.322 54.6561 123.61 54.6561 123.962 cv
@
54.6561 123.962 mo
54.6561 138.269 li
@
54.6561 138.269 mo
54.6561 138.621 54.9442 138.909 55.2963 138.909 cv
@
31.5756 132.756 mo
36.0136 132.756 li
@
36.0136 132.756 mo
36.3666 132.756 36.6542 132.467 36.6542 132.115 cv
@
36.6542 132.115 mo
36.6542 130.135 li
@
36.6542 130.135 mo
36.6542 129.783 36.3666 129.495 36.0136 129.495 cv
@
36.0136 129.495 mo
31.5756 129.495 li
@
31.5756 129.495 mo
31.2225 129.495 30.9345 129.783 30.9345 130.135 cv
@
30.9345 130.135 mo
30.9345 132.115 li
@
30.9345 132.115 mo
30.9345 132.467 31.2225 132.756 31.5756 132.756 cv
@
26.5839 138.909 mo
28.5853 138.909 li
@
28.5853 138.909 mo
28.9379 138.909 29.2255 138.621 29.2255 138.269 cv
@
29.2255 138.269 mo
29.2255 123.962 li
@
29.2255 123.962 mo
29.2255 123.61 28.9379 123.322 28.5853 123.322 cv
@
28.5853 123.322 mo
26.5839 123.322 li
@
26.5839 123.322 mo
26.2313 123.322 25.9432 123.61 25.9432 123.962 cv
@
25.9432 123.962 mo
25.9432 138.269 li
@
25.9432 138.269 mo
25.9432 138.621 26.2313 138.909 26.5839 138.909 cv
@
31.5756 126.584 mo
36.0136 126.584 li
@
36.0136 126.584 mo
36.3666 126.584 36.6542 126.295 36.6542 125.942 cv
@
36.6542 125.942 mo
36.6542 123.962 li
@
36.6542 123.962 mo
36.6542 123.61 36.3666 123.322 36.0136 123.322 cv
@
36.0136 123.322 mo
31.5756 123.322 li
@
31.5756 123.322 mo
31.2225 123.322 30.9345 123.61 30.9345 123.962 cv
@
30.9345 123.962 mo
30.9345 125.942 li
@
30.9345 125.942 mo
30.9345 126.295 31.2225 126.584 31.5756 126.584 cv
@
198.45 107.831 mo
198.605 108.567 198.868 109.262 199.215 109.923 cv
@
199.215 109.923 mo
199.68 110.805 200.265 111.578 200.971 112.23 cv
@
200.971 112.23 mo
201.678 112.882 202.496 113.395 203.409 113.745 cv
@
203.409 113.745 mo
204.321 114.122 205.278 114.308 206.304 114.308 cv
@
206.304 114.308 mo
207.329 114.308 208.286 114.122 209.197 113.768 cv
@
209.197 113.768 mo
210.086 113.419 210.907 112.906 211.613 112.253 cv
@
211.613 112.253 mo
212.32 111.624 212.889 110.857 213.368 109.97 cv
@
213.368 109.97 mo
213.709 109.308 213.962 108.593 214.124 107.835 cv
@
214.124 107.835 mo
214.166 107.639 214.121 107.455 213.995 107.298 cv
@
213.995 107.298 mo
213.87 107.143 213.698 107.059 213.498 107.059 cv
@
213.498 107.059 mo
211.437 107.059 li
@
211.437 107.059 mo
211.154 107.059 210.914 107.234 210.828 107.505 cv
@
210.828 107.505 mo
210.508 108.507 209.974 109.304 209.243 109.901 cv
@
209.243 109.901 mo
208.395 110.593 207.421 110.949 206.281 110.949 cv
@
206.281 110.949 mo
205.71 110.949 205.164 110.857 204.661 110.67 cv
@
204.661 110.67 mo
204.161 110.483 203.705 110.227 203.295 109.878 cv
@
203.295 109.878 mo
202.885 109.528 202.544 109.132 202.247 108.643 cv
@
202.247 108.643 mo
202.03 108.303 201.863 107.925 201.743 107.519 cv
@
201.743 107.519 mo
201.662 107.243 201.418 107.059 201.129 107.059 cv
@
201.129 107.059 mo
199.077 107.059 li
@
199.077 107.059 mo
198.877 107.059 198.704 107.141 198.58 107.296 cv
@
198.58 107.296 mo
198.454 107.452 198.41 107.636 198.45 107.831 cv
@
201.744 104.716 mo
201.863 104.315 202.03 103.945 202.247 103.588 cv
@
202.247 103.588 mo
202.544 103.099 202.885 102.704 203.295 102.354 cv
@
203.295 102.354 mo
203.705 102.004 204.161 101.747 204.661 101.561 cv
@
204.661 101.561 mo
205.164 101.376 205.71 101.282 206.281 101.282 cv
@
206.281 101.282 mo
207.421 101.282 208.4 101.631 209.243 102.307 cv
@
209.243 102.307 mo
209.981 102.918 210.508 103.723 210.828 104.726 cv
@
210.828 104.726 mo
210.914 104.997 211.154 105.172 211.437 105.172 cv
@
211.437 105.172 mo
213.498 105.172 li
@
213.498 105.172 mo
213.698 105.172 213.87 105.09 213.995 104.934 cv
@
213.995 104.934 mo
214.121 104.778 214.166 104.592 214.124 104.398 cv
@
214.124 104.398 mo
213.962 103.639 213.717 102.92 213.368 102.261 cv
@
213.368 102.261 mo
212.898 101.371 212.32 100.607 211.613 99.9542 cv
@
211.613 99.9542 mo
210.907 99.3248 210.086 98.8136 209.197 98.4635 cv
@
209.197 98.4635 mo
208.286 98.1143 207.329 97.9283 206.304 97.9283 cv
@
206.304 97.9283 mo
205.278 97.9283 204.321 98.1143 203.409 98.4635 cv
@
203.409 98.4635 mo
202.496 98.836 201.678 99.3482 200.971 100.001 cv
@
200.971 100.001 mo
200.265 100.653 199.671 101.422 199.215 102.307 cv
@
199.215 102.307 mo
198.86 102.965 198.605 103.664 198.45 104.4 cv
@
198.45 104.4 mo
198.41 104.595 198.454 104.78 198.58 104.935 cv
@
198.58 104.935 mo
198.706 105.09 198.877 105.172 199.077 105.172 cv
@
199.077 105.172 mo
201.131 105.172 li
@
201.131 105.172 mo
201.418 105.172 201.661 104.991 201.744 104.716 cv
@
181.257 107.757 mo
181.871 107.757 li
@
181.871 107.757 mo
182.692 107.757 183.352 107.688 183.876 107.524 cv
@
183.876 107.524 mo
184.4 107.385 184.879 107.128 185.312 106.779 cv
@
185.312 106.779 mo
185.881 106.337 186.314 105.777 186.633 105.102 cv
@
186.633 105.102 mo
186.931 104.45 187.089 103.751 187.089 103.029 cv
@
187.089 103.029 mo
187.089 102.353 186.953 101.701 186.679 101.095 cv
@
186.679 101.095 mo
186.405 100.49 186.019 99.9537 185.54 99.5123 cv
@
185.54 99.5123 mo
185.289 99.3023 185.061 99.1148 184.81 98.9527 cv
@
184.81 98.9527 mo
184.559 98.7896 184.263 98.6729 183.968 98.5797 cv
@
183.968 98.5797 mo
183.649 98.4864 183.306 98.4166 182.941 98.3697 cv
@
182.941 98.3697 mo
182.554 98.3468 182.121 98.3238 181.642 98.3238 cv
@
181.642 98.3238 mo
181.257 98.3238 li
@
181.257 98.3238 mo
180.905 98.3238 180.617 98.6119 180.617 98.9654 cv
@
180.617 98.9654 mo
180.617 100.99 li
@
180.617 100.99 mo
180.617 101.343 180.905 101.632 181.257 101.632 cv
@
181.257 101.632 mo
181.848 101.632 li
@
181.848 101.632 mo
182.235 101.632 182.533 101.654 182.737 101.677 cv
@
182.737 101.677 mo
182.941 101.725 183.124 101.795 183.283 101.91 cv
@
183.283 101.91 mo
183.443 102.027 183.579 102.19 183.693 102.377 cv
@
183.693 102.377 mo
183.808 102.587 183.852 102.795 183.852 103.029 cv
@
183.852 103.029 mo
183.852 103.308 183.785 103.541 183.649 103.774 cv
@
183.649 103.774 mo
183.489 103.983 183.306 104.17 183.055 104.264 cv
@
183.055 104.264 mo
182.896 104.334 182.714 104.404 182.533 104.426 cv
@
182.533 104.426 mo
182.349 104.45 182.076 104.45 181.688 104.45 cv
@
181.688 104.45 mo
181.257 104.45 li
@
181.257 104.45 mo
180.905 104.45 180.617 104.738 180.617 105.091 cv
@
180.617 105.091 mo
180.617 107.116 li
@
180.617 107.116 mo
180.617 107.469 180.905 107.757 181.257 107.757 cv
@
176.13 113.911 mo
178.131 113.911 li
@
178.131 113.911 mo
178.483 113.911 178.771 113.622 178.771 113.269 cv
@
178.771 113.269 mo
178.771 98.9654 li
@
178.771 98.9654 mo
178.771 98.6119 178.483 98.3238 178.131 98.3238 cv
@
178.131 98.3238 mo
176.13 98.3238 li
@
176.13 98.3238 mo
175.778 98.3238 175.49 98.6119 175.49 98.9654 cv
@
175.49 98.9654 mo
175.49 113.269 li
@
175.49 113.269 mo
175.49 113.622 175.778 113.911 176.13 113.911 cv
@
184.013 113.911 mo
186.123 113.911 li
@
186.123 113.911 mo
186.337 113.911 186.521 113.816 186.645 113.641 cv
@
186.645 113.641 mo
186.768 113.469 186.798 113.263 186.728 113.062 cv
@
186.728 113.062 mo
185.359 109.078 li
@
185.359 109.078 mo
185.3 108.907 185.188 108.781 185.024 108.705 cv
@
185.024 108.705 mo
184.86 108.629 184.69 108.624 184.522 108.689 cv
@
184.522 108.689 mo
184.246 108.795 183.97 108.88 183.693 108.945 cv
@
183.693 108.945 mo
183.403 109.013 183.081 109.058 182.726 109.087 cv
@
182.726 109.087 mo
182.521 109.103 182.353 109.205 182.242 109.377 cv
@
182.242 109.377 mo
182.13 109.548 182.106 109.743 182.173 109.937 cv
@
182.173 109.937 mo
183.408 113.481 li
@
183.408 113.481 mo
183.499 113.743 183.734 113.911 184.013 113.911 cv
@
148.453 107.831 mo
148.607 108.567 148.871 109.262 149.219 109.923 cv
@
149.219 109.923 mo
149.682 110.805 150.267 111.578 150.974 112.23 cv
@
150.974 112.23 mo
151.679 112.882 152.501 113.395 153.412 113.745 cv
@
153.412 113.745 mo
154.324 114.122 155.281 114.308 156.307 114.308 cv
@
156.307 114.308 mo
157.332 114.308 158.289 114.122 159.201 113.768 cv
@
159.201 113.768 mo
160.089 113.419 160.91 112.906 161.616 112.253 cv
@
161.616 112.253 mo
162.323 111.624 162.892 110.857 163.37 109.97 cv
@
163.37 109.97 mo
163.712 109.308 163.965 108.593 164.127 107.835 cv
@
164.127 107.835 mo
164.168 107.639 164.123 107.455 163.999 107.297 cv
@
163.999 107.297 mo
163.873 107.142 163.702 107.059 163.501 107.059 cv
@
163.501 107.059 mo
161.44 107.059 li
@
161.44 107.059 mo
161.156 107.059 160.917 107.235 160.83 107.505 cv
@
160.83 107.505 mo
160.51 108.507 159.977 109.304 159.246 109.901 cv
@
159.246 109.901 mo
158.398 110.593 157.422 110.949 156.284 110.949 cv
@
156.284 110.949 mo
155.714 110.949 155.167 110.857 154.665 110.67 cv
@
154.665 110.67 mo
154.164 110.483 153.707 110.227 153.298 109.878 cv
@
153.298 109.878 mo
152.887 109.528 152.546 109.132 152.25 108.643 cv
@
152.25 108.643 mo
152.034 108.303 151.866 107.925 151.746 107.519 cv
@
151.746 107.519 mo
151.665 107.243 151.421 107.059 151.132 107.059 cv
@
151.132 107.059 mo
149.08 107.059 li
@
149.08 107.059 mo
148.88 107.059 148.708 107.141 148.583 107.296 cv
@
148.583 107.296 mo
148.456 107.451 148.413 107.636 148.453 107.831 cv
@
151.746 104.716 mo
151.867 104.315 152.034 103.944 152.25 103.588 cv
@
152.25 103.588 mo
152.545 103.099 152.887 102.704 153.298 102.354 cv
@
153.298 102.354 mo
153.707 102.004 154.164 101.747 154.665 101.561 cv
@
154.665 101.561 mo
155.167 101.376 155.714 101.282 156.284 101.282 cv
@
156.284 101.282 mo
157.422 101.282 158.403 101.631 159.246 102.307 cv
@
159.246 102.307 mo
159.983 102.918 160.51 103.724 160.83 104.725 cv
@
160.83 104.725 mo
160.917 104.996 161.156 105.172 161.44 105.172 cv
@
161.44 105.172 mo
163.501 105.172 li
@
163.501 105.172 mo
163.702 105.172 163.873 105.09 163.999 104.934 cv
@
163.999 104.934 mo
164.123 104.778 164.168 104.592 164.127 104.398 cv
@
164.127 104.398 mo
163.965 103.639 163.72 102.92 163.37 102.261 cv
@
163.37 102.261 mo
162.9 101.371 162.323 100.607 161.616 99.9542 cv
@
161.616 99.9542 mo
160.91 99.3248 160.089 98.8136 159.201 98.4635 cv
@
159.201 98.4635 mo
158.289 98.1143 157.332 97.9283 156.307 97.9283 cv
@
156.307 97.9283 mo
155.281 97.9283 154.324 98.1143 153.412 98.4635 cv
@
153.412 98.4635 mo
152.501 98.836 151.679 99.3482 150.974 100.001 cv
@
150.974 100.001 mo
150.267 100.653 149.675 101.422 149.219 102.307 cv
@
149.219 102.307 mo
148.862 102.965 148.607 103.664 148.453 104.4 cv
@
148.453 104.4 mo
148.413 104.595 148.456 104.78 148.583 104.935 cv
@
148.583 104.935 mo
148.708 105.09 148.88 105.172 149.08 105.172 cv
@
149.08 105.172 mo
151.134 105.172 li
@
151.134 105.172 mo
151.421 105.172 151.665 104.991 151.746 104.716 cv
@
130.306 113.911 mo
132.306 113.911 li
@
132.306 113.911 mo
132.659 113.911 132.947 113.622 132.947 113.269 cv
@
132.947 113.269 mo
132.947 104.136 li
@
132.947 104.136 mo
132.947 103.783 132.659 103.495 132.306 103.495 cv
@
132.306 103.495 mo
130.306 103.495 li
@
130.306 103.495 mo
129.953 103.495 129.665 103.783 129.665 104.136 cv
@
129.665 104.136 mo
129.665 113.269 li
@
129.665 113.269 mo
129.665 113.622 129.953 113.911 130.306 113.911 cv
@
126.791 101.585 mo
135.793 101.585 li
@
135.793 101.585 mo
136.146 101.585 136.433 101.296 136.433 100.943 cv
@
136.433 100.943 mo
136.433 98.9654 li
@
136.433 98.9654 mo
136.433 98.6119 136.146 98.3238 135.793 98.3238 cv
@
135.793 98.3238 mo
126.791 98.3238 li
@
126.791 98.3238 mo
126.439 98.3238 126.152 98.6119 126.152 98.9654 cv
@
126.152 98.9654 mo
126.152 100.943 li
@
126.152 100.943 mo
126.152 101.296 126.439 101.585 126.791 101.585 cv
@
101.287 109.92 mo
101.328 110.177 101.382 110.414 101.442 110.623 cv
@
101.442 110.623 mo
101.556 111.019 101.716 111.415 101.942 111.812 cv
@
101.942 111.812 mo
102.399 112.603 103.015 113.209 103.789 113.652 cv
@
103.789 113.652 mo
104.541 114.097 105.362 114.308 106.25 114.308 cv
@
106.25 114.308 mo
106.957 114.308 107.64 114.168 108.256 113.888 cv
@
108.256 113.888 mo
108.871 113.628 109.395 113.255 109.851 112.789 cv
@
109.851 112.789 mo
110.308 112.301 110.672 111.763 110.922 111.135 cv
@
110.922 111.135 mo
111.173 110.507 111.309 109.808 111.309 109.086 cv
@
111.309 109.086 mo
111.309 107.189 110.489 105.759 108.864 104.795 cv
@
108.864 104.795 mo
108.704 104.7 108.533 104.679 108.356 104.732 cv
@
108.356 104.732 mo
108.179 104.784 108.047 104.896 107.964 105.062 cv
@
107.964 105.062 mo
107.044 106.913 li
@
107.044 106.913 mo
106.9 107.203 106.992 107.549 107.258 107.73 cv
@
107.258 107.73 mo
107.453 107.864 107.612 108.005 107.732 108.153 cv
@
107.732 108.153 mo
107.936 108.41 108.028 108.759 108.028 109.155 cv
@
108.028 109.155 mo
108.028 109.691 107.868 110.11 107.527 110.46 cv
@
107.527 110.46 mo
107.185 110.809 106.774 110.996 106.273 110.996 cv
@
106.273 110.996 mo
105.371 110.996 104.791 110.547 104.544 109.65 cv
@
104.544 109.65 mo
104.466 109.367 104.218 109.179 103.926 109.179 cv
@
103.926 109.179 mo
101.92 109.179 li
@
101.92 109.179 mo
101.725 109.179 101.559 109.256 101.433 109.404 cv
@
101.433 109.404 mo
101.307 109.552 101.257 109.729 101.287 109.92 cv
@
110.534 101.822 mo
110.467 101.41 110.371 101.017 110.215 100.653 cv
@
110.215 100.653 mo
109.976 100.09 109.646 99.6051 109.259 99.1856 cv
@
109.259 99.1856 mo
108.849 98.7906 108.37 98.4869 107.846 98.254 cv
@
107.846 98.254 mo
107.298 98.0445 106.707 97.9283 106.046 97.9283 cv
@
106.046 97.9283 mo
105.408 97.9283 104.814 98.0445 104.268 98.2774 cv
@
104.268 98.2774 mo
103.722 98.5103 103.243 98.836 102.832 99.255 cv
@
102.832 99.255 mo
102.421 99.6749 102.102 100.141 101.875 100.7 cv
@
101.875 100.7 mo
101.646 101.259 101.532 101.865 101.532 102.516 cv
@
101.532 102.516 mo
101.532 103.146 101.646 103.751 101.875 104.287 cv
@
101.875 104.287 mo
102.08 104.846 102.399 105.335 102.786 105.732 cv
@
102.786 105.732 mo
103.083 106.011 103.379 106.244 103.699 106.407 cv
@
103.699 106.407 mo
103.898 106.51 104.144 106.612 104.43 106.715 cv
@
104.43 106.715 mo
104.738 106.826 105.076 106.688 105.221 106.393 cv
@
105.221 106.393 mo
106.109 104.577 li
@
106.109 104.577 mo
106.193 104.406 106.197 104.225 106.125 104.049 cv
@
106.125 104.049 mo
106.052 103.872 105.92 103.748 105.739 103.688 cv
@
105.739 103.688 mo
105.665 103.663 105.589 103.643 105.521 103.611 cv
@
105.521 103.611 mo
105.037 103.39 104.814 103.005 104.814 102.516 cv
@
104.814 102.516 mo
104.814 102.167 104.929 101.865 105.156 101.609 cv
@
105.156 101.609 mo
105.384 101.353 105.681 101.235 106.023 101.235 cv
@
106.023 101.235 mo
106.577 101.235 106.936 101.525 107.114 102.109 cv
@
107.114 102.109 mo
107.198 102.384 107.441 102.564 107.727 102.564 cv
@
107.727 102.564 mo
109.901 102.564 li
@
109.901 102.564 mo
110.095 102.564 110.262 102.486 110.388 102.338 cv
@
110.388 102.338 mo
110.513 102.192 110.563 102.014 110.534 101.822 cv
@
74.1298 113.873 mo
76.3685 113.873 li
@
76.3685 113.873 mo
76.6166 113.873 76.829 113.741 76.9408 113.52 cv
@
76.9408 113.52 mo
80.1298 107.167 li
@
80.1298 107.167 mo
80.2235 106.981 80.2235 106.78 80.1298 106.593 cv
@
80.1298 106.593 mo
79.0199 104.367 li
@
79.0199 104.367 mo
78.9091 104.144 78.6967 104.013 78.4486 104.011 cv
@
78.4486 104.011 mo
78.2001 104.011 77.9872 104.143 77.8754 104.364 cv
@
77.8754 104.364 mo
73.5585 112.942 li
@
73.5585 112.942 mo
73.4559 113.148 73.4642 113.373 73.5844 113.568 cv
@
73.5844 113.568 mo
73.704 113.762 73.9013 113.873 74.1298 113.873 cv
@
86.2079 113.873 mo
88.4608 113.873 li
@
88.4608 113.873 mo
88.6898 113.873 88.8866 113.762 89.0067 113.567 cv
@
89.0067 113.567 mo
89.1259 113.371 89.1361 113.147 89.0326 112.942 cv
@
89.0326 112.942 mo
81.8451 98.7144 li
@
81.8451 98.7144 mo
81.7338 98.4932 81.5219 98.3629 81.2753 98.3624 cv
@
81.2753 98.3624 mo
81.0267 98.3624 80.8153 98.4923 80.703 98.713 cv
@
80.703 98.713 mo
79.5775 100.929 li
@
79.5775 100.929 mo
79.4818 101.118 79.4818 101.321 79.5775 101.51 cv
@
79.5775 101.51 mo
82.871 107.999 li
@
82.871 107.999 mo
81.9686 107.999 li
@
81.9686 107.999 mo
81.7206 107.999 81.5057 108.13 81.3949 108.354 cv
@
81.3949 108.354 mo
80.4135 110.333 li
@
80.4135 110.333 mo
80.3119 110.537 80.3212 110.763 80.4437 110.957 cv
@
80.4437 110.957 mo
80.5634 111.15 80.7592 111.259 80.9882 111.259 cv
@
80.9882 111.259 mo
84.1151 111.259 li
@
84.1151 111.259 mo
84.3646 111.259 84.577 111.391 84.6884 111.615 cv
@
84.6884 111.615 mo
85.6347 113.517 li
@
85.6347 113.517 mo
85.7455 113.74 85.9584 113.873 86.2079 113.873 cv
@
51.1371 113.911 mo
53.1376 113.911 li
@
53.1376 113.911 mo
53.4906 113.911 53.7782 113.622 53.7782 113.269 cv
@
53.7782 113.269 mo
53.7782 98.9654 li
@
53.7782 98.9654 mo
53.7782 98.6119 53.4906 98.3238 53.1376 98.3238 cv
@
53.1376 98.3238 mo
51.1371 98.3238 li
@
51.1371 98.3238 mo
50.7846 98.3238 50.4965 98.6119 50.4965 98.9654 cv
@
50.4965 98.9654 mo
50.4965 113.269 li
@
50.4965 113.269 mo
50.4965 113.622 50.7846 113.911 51.1371 113.911 cv
@
56.265 107.757 mo
56.8783 107.757 li
@
56.8783 107.757 mo
57.6981 107.757 58.3597 107.688 58.8822 107.524 cv
@
58.8822 107.524 mo
59.4071 107.385 59.8856 107.128 60.3192 106.779 cv
@
60.3192 106.779 mo
60.8886 106.337 61.3217 105.777 61.641 105.102 cv
@
61.641 105.102 mo
61.9384 104.45 62.0971 103.751 62.0971 103.029 cv
@
62.0971 103.029 mo
62.0971 102.353 61.9603 101.701 61.6869 101.095 cv
@
61.6869 101.095 mo
61.412 100.49 61.0248 99.9537 60.5472 99.5123 cv
@
60.5472 99.5123 mo
60.2968 99.3023 60.0668 99.1148 59.8178 98.9527 cv
@
59.8178 98.9527 mo
59.5673 98.7896 59.2709 98.6729 58.974 98.5797 cv
@
58.974 98.5797 mo
58.6556 98.4864 58.3129 98.4166 57.9486 98.3697 cv
@
57.9486 98.3697 mo
57.5614 98.3468 57.1288 98.3238 56.6498 98.3238 cv
@
56.6498 98.3238 mo
56.265 98.3238 li
@
56.265 98.3238 mo
55.913 98.3238 55.6244 98.6119 55.6244 98.9654 cv
@
55.6244 98.9654 mo
55.6244 100.99 li
@
55.6244 100.99 mo
55.6244 101.343 55.913 101.632 56.265 101.632 cv
@
56.265 101.632 mo
56.8554 101.632 li
@
56.8554 101.632 mo
57.2426 101.632 57.5385 101.654 57.7435 101.677 cv
@
57.7435 101.677 mo
57.9486 101.725 58.1317 101.795 58.2909 101.91 cv
@
58.2909 101.91 mo
58.4506 102.027 58.5868 102.19 58.7011 102.377 cv
@
58.7011 102.377 mo
58.8148 102.587 58.8602 102.795 58.8602 103.029 cv
@
58.8602 103.029 mo
58.8602 103.308 58.7924 103.541 58.6556 103.774 cv
@
58.6556 103.774 mo
58.496 103.983 58.3129 104.17 58.0629 104.264 cv
@
58.0629 104.264 mo
57.9032 104.334 57.7206 104.404 57.5385 104.426 cv
@
57.5385 104.426 mo
57.3563 104.45 57.0824 104.45 56.6962 104.45 cv
@
56.6962 104.45 mo
56.265 104.45 li
@
56.265 104.45 mo
55.913 104.45 55.6244 104.738 55.6244 105.091 cv
@
55.6244 105.091 mo
55.6244 107.116 li
@
55.6244 107.116 mo
55.6244 107.469 55.913 107.757 56.265 107.757 cv
@
24.7264 113.911 mo
26.7269 113.911 li
@
26.7269 113.911 mo
27.0795 113.911 27.3676 113.622 27.3676 113.269 cv
@
27.3676 113.269 mo
27.3676 98.9654 li
@
27.3676 98.9654 mo
27.3676 98.6119 27.0795 98.3238 26.7269 98.3238 cv
@
26.7269 98.3238 mo
24.7264 98.3238 li
@
24.7264 98.3238 mo
24.3739 98.3238 24.0853 98.6119 24.0853 98.9654 cv
@
24.0853 98.9654 mo
24.0853 113.269 li
@
24.0853 113.269 mo
24.0853 113.622 24.3739 113.911 24.7264 113.911 cv
@
29.809 113.911 mo
30.4672 113.911 li
@
30.4672 113.911 mo
31.4935 113.911 32.3578 113.814 33.1107 113.604 cv
@
33.1107 113.604 mo
33.8407 113.395 34.5243 113.069 35.162 112.626 cv
@
35.162 112.626 mo
36.2094 111.88 37.0302 110.925 37.6229 109.784 cv
@
37.6229 109.784 mo
38.2157 108.643 38.5111 107.408 38.5111 106.104 cv
@
38.5111 106.104 mo
38.5111 104.962 38.2836 103.867 37.8285 102.865 cv
@
37.8285 102.865 mo
37.3724 101.864 36.6889 100.979 35.8226 100.187 cv
@
35.8226 100.187 mo
35.0931 99.5347 34.2958 99.0689 33.452 98.7657 cv
@
33.452 98.7657 mo
32.5863 98.4639 31.538 98.3238 30.3305 98.3238 cv
@
30.3305 98.3238 mo
29.809 98.3238 li
@
29.809 98.3238 mo
29.4559 98.3238 29.1683 98.6119 29.1683 98.9654 cv
@
29.1683 98.9654 mo
29.1683 100.943 li
@
29.1683 100.943 mo
29.1683 101.296 29.4559 101.585 29.809 101.585 cv
@
29.809 101.585 mo
30.0116 101.585 li
@
30.0116 101.585 mo
30.4442 101.585 30.8095 101.585 31.1503 101.608 cv
@
31.1503 101.608 mo
31.4701 101.632 31.7665 101.677 32.016 101.747 cv
@
32.016 101.747 mo
32.2675 101.817 32.518 101.91 32.7465 102.027 cv
@
32.7465 102.027 mo
32.9515 102.144 33.1791 102.259 33.3842 102.423 cv
@
33.3842 102.423 mo
33.955 102.843 34.4096 103.378 34.7523 104.031 cv
@
34.7523 104.031 mo
35.0707 104.683 35.2299 105.405 35.2299 106.127 cv
@
35.2299 106.127 mo
35.2299 107.337 34.7972 108.41 33.9305 109.318 cv
@
33.9305 109.318 mo
33.4755 109.784 32.9745 110.11 32.4506 110.319 cv
@
32.4506 110.319 mo
31.9027 110.506 31.1967 110.599 30.3534 110.599 cv
@
30.3534 110.599 mo
29.809 110.599 li
@
29.809 110.599 mo
29.4559 110.599 29.1683 110.887 29.1683 111.24 cv
@
29.1683 111.24 mo
29.1683 113.269 li
@
29.1683 113.269 mo
29.1683 113.622 29.4559 113.911 29.809 113.911 cv
@
206.563 82.7594 mo
211.002 82.7594 li
@
211.002 82.7594 mo
211.355 82.7594 211.643 82.4708 211.643 82.1178 cv
@
211.643 82.1178 mo
211.643 80.1397 li
@
211.643 80.1397 mo
211.643 79.7872 211.355 79.4986 211.002 79.4986 cv
@
211.002 79.4986 mo
206.563 79.4986 li
@
206.563 79.4986 mo
206.21 79.4986 205.923 79.7872 205.923 80.1397 cv
@
205.923 80.1397 mo
205.923 82.1178 li
@
205.923 82.1178 mo
205.923 82.4708 206.21 82.7594 206.563 82.7594 cv
@
201.573 88.9127 mo
203.573 88.9127 li
@
203.573 88.9127 mo
203.925 88.9127 204.215 88.6256 204.215 88.2716 cv
@
204.215 88.2716 mo
204.215 73.9669 li
@
204.215 73.9669 mo
204.215 73.6134 203.925 73.3253 203.573 73.3253 cv
@
203.573 73.3253 mo
201.573 73.3253 li
@
201.573 73.3253 mo
201.22 73.3253 200.932 73.6134 200.932 73.9669 cv
@
200.932 73.9669 mo
200.932 88.2716 li
@
200.932 88.2716 mo
200.932 88.6256 201.22 88.9127 201.573 88.9127 cv
@
206.563 76.587 mo
211.002 76.587 li
@
211.002 76.587 mo
211.355 76.587 211.643 76.2979 211.643 75.9459 cv
@
211.643 75.9459 mo
211.643 73.9669 li
@
211.643 73.9669 mo
211.643 73.6134 211.355 73.3253 211.002 73.3253 cv
@
211.002 73.3253 mo
206.563 73.3253 li
@
206.563 73.3253 mo
206.21 73.3253 205.923 73.6134 205.923 73.9669 cv
@
205.923 73.9669 mo
205.923 75.9459 li
@
205.923 75.9459 mo
205.923 76.2979 206.21 76.587 206.563 76.587 cv
@
177.372 88.9127 mo
179.374 88.9127 li
@
179.374 88.9127 mo
179.725 88.9127 180.013 88.6256 180.013 88.2716 cv
@
180.013 88.2716 mo
180.013 73.9669 li
@
180.013 73.9669 mo
180.013 73.6134 179.725 73.3253 179.374 73.3253 cv
@
179.374 73.3253 mo
177.372 73.3253 li
@
177.372 73.3253 mo
177.019 73.3253 176.731 73.6134 176.731 73.9669 cv
@
176.731 73.9669 mo
176.731 88.2716 li
@
176.731 88.2716 mo
176.731 88.6256 177.019 88.9127 177.372 88.9127 cv
@
182.067 88.9127 mo
185.207 88.9127 li
@
185.207 88.9127 mo
185.56 88.9127 185.848 88.6256 185.848 88.2716 cv
@
185.848 88.2716 mo
185.848 86.2896 li
@
185.848 86.2896 mo
185.848 85.9366 185.56 85.648 185.207 85.648 cv
@
185.207 85.648 mo
182.067 85.648 li
@
182.067 85.648 mo
181.714 85.648 181.426 85.9366 181.426 86.2896 cv
@
181.426 86.2896 mo
181.426 88.2716 li
@
181.426 88.2716 mo
181.426 88.6256 181.714 88.9127 182.067 88.9127 cv
@
149.125 88.8736 mo
151.363 88.8736 li
@
151.363 88.8736 mo
151.611 88.8736 151.824 88.7423 151.935 88.5201 cv
@
151.935 88.5201 mo
155.123 82.168 li
@
155.123 82.168 mo
155.218 81.982 155.218 81.7808 155.125 81.5943 cv
@
155.125 81.5943 mo
154.015 79.3682 li
@
154.015 79.3682 mo
153.904 79.1461 153.691 79.0147 153.443 79.0147 cv
@
153.443 79.0147 mo
153.196 79.0133 152.983 79.1446 152.87 79.3673 cv
@
152.87 79.3673 mo
148.553 87.9444 li
@
148.553 87.9444 mo
148.45 88.149 148.46 88.3746 148.58 88.5689 cv
@
148.58 88.5689 mo
148.701 88.7633 148.896 88.8736 149.125 88.8736 cv
@
161.203 88.8736 mo
163.456 88.8736 li
@
163.456 88.8736 mo
163.685 88.8736 163.882 88.7633 164.001 88.5675 cv
@
164.001 88.5675 mo
164.12 88.3731 164.132 88.1475 164.027 87.9434 cv
@
164.027 87.9434 mo
156.841 73.7159 li
@
156.841 73.7159 mo
156.728 73.4947 156.517 73.3648 156.271 73.3648 cv
@
156.271 73.3648 mo
156.022 73.3638 155.809 73.4942 155.698 73.7149 cv
@
155.698 73.7149 mo
154.573 75.9298 li
@
154.573 75.9298 mo
154.476 76.1202 154.476 76.3233 154.573 76.5118 cv
@
154.573 76.5118 mo
157.866 82.9996 li
@
157.866 82.9996 mo
156.964 82.9996 li
@
156.964 82.9996 mo
156.714 82.9996 156.5 83.1324 156.391 83.356 cv
@
156.391 83.356 mo
155.41 85.3345 li
@
155.41 85.3345 mo
155.307 85.5391 155.317 85.7633 155.437 85.9581 cv
@
155.437 85.9581 mo
155.558 86.1524 155.754 86.2613 155.982 86.2613 cv
@
155.982 86.2613 mo
159.111 86.2613 li
@
159.111 86.2613 mo
159.36 86.2613 159.574 86.3936 159.683 86.6168 cv
@
159.683 86.6168 mo
160.63 88.5181 li
@
160.63 88.5181 mo
160.74 88.7408 160.953 88.8736 161.203 88.8736 cv
@
135.373 88.9127 mo
137.375 88.9127 li
@
137.375 88.9127 mo
137.728 88.9127 138.015 88.6256 138.015 88.2716 cv
@
138.015 88.2716 mo
138.015 73.9669 li
@
138.015 73.9669 mo
138.015 73.6134 137.728 73.3253 137.375 73.3253 cv
@
137.375 73.3253 mo
135.373 73.3253 li
@
135.373 73.3253 mo
135.022 73.3253 134.733 73.6134 134.733 73.9669 cv
@
134.733 73.9669 mo
134.733 88.2716 li
@
134.733 88.2716 mo
134.733 88.6256 135.022 88.9127 135.373 88.9127 cv
@
125.21 88.9127 mo
127.212 88.9127 li
@
127.212 88.9127 mo
127.563 88.9127 127.851 88.6256 127.851 88.2716 cv
@
127.851 88.2716 mo
127.851 73.9669 li
@
127.851 73.9669 mo
127.851 73.6134 127.563 73.3253 127.212 73.3253 cv
@
127.212 73.3253 mo
125.21 73.3253 li
@
125.21 73.3253 mo
124.857 73.3253 124.569 73.6134 124.569 73.9669 cv
@
124.569 73.9669 mo
124.569 88.2716 li
@
124.569 88.2716 mo
124.569 88.6256 124.857 88.9127 125.21 88.9127 cv
@
129.814 82.7359 mo
132.771 82.7359 li
@
132.771 82.7359 mo
133.124 82.7359 133.412 82.4478 133.412 82.0953 cv
@
133.412 82.0953 mo
133.412 80.1163 li
@
133.412 80.1163 mo
133.412 79.7637 133.124 79.4752 132.771 79.4752 cv
@
132.771 79.4752 mo
129.814 79.4752 li
@
129.814 79.4752 mo
129.461 79.4752 129.173 79.7637 129.173 80.1163 cv
@
129.173 80.1163 mo
129.173 82.0953 li
@
129.173 82.0953 mo
129.173 82.4478 129.461 82.7359 129.814 82.7359 cv
@
106.501 82.7594 mo
111.237 82.7594 li
@
111.237 82.7594 mo
111.59 82.7594 111.877 82.4708 111.877 82.1178 cv
@
111.877 82.1178 mo
111.877 80.1397 li
@
111.877 80.1397 mo
111.877 79.7872 111.59 79.4986 111.237 79.4986 cv
@
111.237 79.4986 mo
106.501 79.4986 li
@
106.501 79.4986 mo
106.148 79.4986 105.861 79.7872 105.861 80.1397 cv
@
105.861 80.1397 mo
105.861 82.1178 li
@
105.861 82.1178 mo
105.861 82.4708 106.148 82.7594 106.501 82.7594 cv
@
106.501 88.9127 mo
111.237 88.9127 li
@
111.237 88.9127 mo
111.59 88.9127 111.877 88.6256 111.877 88.2716 cv
@
111.877 88.2716 mo
111.877 86.2896 li
@
111.877 86.2896 mo
111.877 85.9366 111.59 85.648 111.237 85.648 cv
@
111.237 85.648 mo
106.501 85.648 li
@
106.501 85.648 mo
106.148 85.648 105.861 85.9366 105.861 86.2896 cv
@
105.861 86.2896 mo
105.861 88.2716 li
@
105.861 88.2716 mo
105.861 88.6256 106.148 88.9127 106.501 88.9127 cv
@
101.351 88.9127 mo
103.352 88.9127 li
@
103.352 88.9127 mo
103.704 88.9127 103.992 88.6256 103.992 88.2716 cv
@
103.992 88.2716 mo
103.992 73.9669 li
@
103.992 73.9669 mo
103.992 73.6134 103.704 73.3253 103.352 73.3253 cv
@
103.352 73.3253 mo
101.351 73.3253 li
@
101.351 73.3253 mo
100.998 73.3253 100.71 73.6134 100.71 73.9669 cv
@
100.71 73.9669 mo
100.71 88.2716 li
@
100.71 88.2716 mo
100.71 88.6256 100.998 88.9127 101.351 88.9127 cv
@
106.501 76.587 mo
111.237 76.587 li
@
111.237 76.587 mo
111.59 76.587 111.877 76.2979 111.877 75.9459 cv
@
111.877 75.9459 mo
111.877 73.9669 li
@
111.877 73.9669 mo
111.877 73.6134 111.59 73.3253 111.237 73.3253 cv
@
111.237 73.3253 mo
106.501 73.3253 li
@
106.501 73.3253 mo
106.148 73.3253 105.861 73.6134 105.861 73.9669 cv
@
105.861 73.9669 mo
105.861 75.9459 li
@
105.861 75.9459 mo
105.861 76.2979 106.148 76.587 106.501 76.587 cv
@
81.8602 88.5255 mo
82.9847 86.3253 li
@
82.9847 86.3253 mo
83.0805 86.1373 83.0805 85.9342 82.9857 85.7442 cv
@
82.9857 85.7442 mo
76.9296 73.7159 li
@
76.9296 73.7159 mo
76.8168 73.4942 76.6054 73.3634 76.3578 73.3634 cv
@
76.3578 73.3634 mo
74.118 73.3624 li
@
74.118 73.3624 mo
73.891 73.3624 73.6928 73.4732 73.5731 73.6685 cv
@
73.5731 73.6685 mo
73.4525 73.8629 73.4437 74.0889 73.5468 74.2935 cv
@
73.5468 74.2935 mo
80.7181 88.523 li
@
80.7181 88.523 mo
80.8295 88.7442 81.0409 88.8741 81.2889 88.8756 cv
@
81.2889 88.8756 mo
81.5355 88.8761 81.747 88.7467 81.8602 88.5255 cv
@
82.4603 80.6412 mo
83.5858 82.8575 li
@
83.5858 82.8575 mo
83.6967 83.0787 83.9096 83.2086 84.1566 83.2076 cv
@
84.1566 83.2076 mo
84.4042 83.2066 84.6161 83.0762 84.7274 82.856 cv
@
84.7274 82.856 mo
89.0443 74.2935 li
@
89.0443 74.2935 mo
89.1488 74.0889 89.1381 73.8629 89.0189 73.669 cv
@
89.0189 73.669 mo
88.8988 73.4737 88.7025 73.3624 88.4725 73.3624 cv
@
88.4725 73.3624 mo
86.2387 73.3624 li
@
86.2387 73.3624 mo
85.9901 73.3624 85.7787 73.4937 85.6674 73.7149 cv
@
85.6674 73.7149 mo
82.4584 80.0601 li
@
82.4584 80.0601 mo
82.3627 80.2481 82.3627 80.4532 82.4603 80.6412 cv
@
55.2963 88.9127 mo
57.2977 88.9127 li
@
57.2977 88.9127 mo
57.6508 88.9127 57.9379 88.6256 57.9379 88.2716 cv
@
57.9379 88.2716 mo
57.9379 73.9669 li
@
57.9379 73.9669 mo
57.9379 73.6134 57.6508 73.3253 57.2977 73.3253 cv
@
57.2977 73.3253 mo
55.2963 73.3253 li
@
55.2963 73.3253 mo
54.9442 73.3253 54.6561 73.6134 54.6561 73.9669 cv
@
54.6561 73.9669 mo
54.6561 88.2716 li
@
54.6561 88.2716 mo
54.6561 88.6256 54.9442 88.9127 55.2963 88.9127 cv
@
31.5756 82.7594 mo
36.0136 82.7594 li
@
36.0136 82.7594 mo
36.3666 82.7594 36.6542 82.4708 36.6542 82.1178 cv
@
36.6542 82.1178 mo
36.6542 80.1397 li
@
36.6542 80.1397 mo
36.6542 79.7872 36.3666 79.4986 36.0136 79.4986 cv
@
36.0136 79.4986 mo
31.5756 79.4986 li
@
31.5756 79.4986 mo
31.2225 79.4986 30.9345 79.7872 30.9345 80.1397 cv
@
30.9345 80.1397 mo
30.9345 82.1178 li
@
30.9345 82.1178 mo
30.9345 82.4708 31.2225 82.7594 31.5756 82.7594 cv
@
26.5839 88.9127 mo
28.5853 88.9127 li
@
28.5853 88.9127 mo
28.9379 88.9127 29.2255 88.6256 29.2255 88.2716 cv
@
29.2255 88.2716 mo
29.2255 73.9669 li
@
29.2255 73.9669 mo
29.2255 73.6134 28.9379 73.3253 28.5853 73.3253 cv
@
28.5853 73.3253 mo
26.5839 73.3253 li
@
26.5839 73.3253 mo
26.2313 73.3253 25.9432 73.6134 25.9432 73.9669 cv
@
25.9432 73.9669 mo
25.9432 88.2716 li
@
25.9432 88.2716 mo
25.9432 88.6256 26.2313 88.9127 26.5839 88.9127 cv
@
31.5756 76.587 mo
36.0136 76.587 li
@
36.0136 76.587 mo
36.3666 76.587 36.6542 76.2979 36.6542 75.9459 cv
@
36.6542 75.9459 mo
36.6542 73.9669 li
@
36.6542 73.9669 mo
36.6542 73.6134 36.3666 73.3253 36.0136 73.3253 cv
@
36.0136 73.3253 mo
31.5756 73.3253 li
@
31.5756 73.3253 mo
31.2225 73.3253 30.9345 73.6134 30.9345 73.9669 cv
@
30.9345 73.9669 mo
30.9345 75.9459 li
@
30.9345 75.9459 mo
30.9345 76.2979 31.2225 76.587 31.5756 76.587 cv
@
204.821 63.9141 mo
206.822 63.9141 li
@
206.822 63.9141 mo
207.174 63.9141 207.462 63.627 207.462 63.273 cv
@
207.462 63.273 mo
207.462 57.2213 li
@
207.462 57.2213 mo
207.462 57.0821 207.5 56.9625 207.582 56.8487 cv
@
207.582 56.8487 mo
212.938 49.3409 li
@
212.938 49.3409 mo
213.081 49.1412 213.099 48.8936 212.987 48.6754 cv
@
212.987 48.6754 mo
212.873 48.4561 212.663 48.3267 212.417 48.3267 cv
@
212.417 48.3267 mo
209.934 48.3267 li
@
209.934 48.3267 mo
209.721 48.3267 209.538 48.421 209.413 48.5953 cv
@
209.413 48.5953 mo
204.301 55.7535 li
@
204.301 55.7535 mo
204.219 55.8678 204.18 55.9869 204.18 56.1275 cv
@
204.18 56.1275 mo
204.18 63.273 li
@
204.18 63.273 mo
204.18 63.627 204.468 63.9141 204.821 63.9141 cv
@
203.548 53.4923 mo
204.802 51.7696 li
@
204.802 51.7696 mo
204.966 51.545 204.969 51.2559 204.811 51.0279 cv
@
204.811 51.0279 mo
203.141 48.6041 li
@
203.141 48.6041 mo
203.017 48.4254 202.83 48.3277 202.614 48.3277 cv
@
202.614 48.3277 mo
200.16 48.3267 li
@
200.16 48.3267 mo
199.913 48.3267 199.705 48.4552 199.591 48.671 cv
@
199.591 48.671 mo
199.477 48.8878 199.494 49.1324 199.633 49.3341 cv
@
199.633 49.3341 mo
202.504 53.4805 li
@
202.504 53.4805 mo
202.627 53.6558 202.809 53.7535 203.023 53.7559 cv
@
203.023 53.7559 mo
203.238 53.7574 203.422 53.6651 203.548 53.4923 cv
@
181.257 57.7608 mo
181.87 57.7608 li
@
181.87 57.7608 mo
182.69 57.7608 183.352 57.691 183.876 57.5279 cv
@
183.876 57.5279 mo
184.4 57.3888 184.878 57.1324 185.312 56.7833 cv
@
185.312 56.7833 mo
185.881 56.3404 186.314 55.7813 186.633 55.1055 cv
@
186.633 55.1055 mo
186.929 54.4532 187.089 53.7545 187.089 53.0328 cv
@
187.089 53.0328 mo
187.089 52.3565 186.952 51.7052 186.679 51.0992 cv
@
186.679 51.0992 mo
186.405 50.4928 186.017 49.9576 185.539 49.5152 cv
@
185.539 49.5152 mo
185.288 49.3053 185.06 49.1192 184.81 48.9561 cv
@
184.81 48.9561 mo
184.559 48.7926 184.263 48.6768 183.966 48.5826 cv
@
183.966 48.5826 mo
183.648 48.4898 183.306 48.42 182.941 48.3746 cv
@
182.941 48.3746 mo
182.554 48.3502 182.12 48.3267 181.641 48.3267 cv
@
181.641 48.3267 mo
181.257 48.3267 li
@
181.257 48.3267 mo
180.904 48.3267 180.616 48.6163 180.616 48.9683 cv
@
180.616 48.9683 mo
180.616 50.9937 li
@
180.616 50.9937 mo
180.616 51.3468 180.904 51.6353 181.257 51.6353 cv
@
181.257 51.6353 mo
181.848 51.6353 li
@
181.848 51.6353 mo
182.235 51.6353 182.531 51.6578 182.736 51.6812 cv
@
182.736 51.6812 mo
182.941 51.7276 183.124 51.7979 183.283 51.9146 cv
@
183.283 51.9146 mo
183.442 52.0304 183.579 52.1939 183.693 52.3795 cv
@
183.693 52.3795 mo
183.807 52.5899 183.852 52.7994 183.852 53.0328 cv
@
183.852 53.0328 mo
183.852 53.3116 183.784 53.5435 183.648 53.7779 cv
@
183.648 53.7779 mo
183.488 53.9879 183.306 54.1734 183.055 54.2662 cv
@
183.055 54.2662 mo
182.896 54.337 182.714 54.4068 182.531 54.4303 cv
@
182.531 54.4303 mo
182.348 54.4532 182.075 54.4532 181.687 54.4532 cv
@
181.687 54.4532 mo
181.257 54.4532 li
@
181.257 54.4532 mo
180.904 54.4532 180.616 54.7418 180.616 55.0948 cv
@
180.616 55.0948 mo
180.616 57.1197 li
@
180.616 57.1197 mo
180.616 57.4727 180.904 57.7608 181.257 57.7608 cv
@
176.129 63.9141 mo
178.131 63.9141 li
@
178.131 63.9141 mo
178.483 63.9141 178.769 63.627 178.771 63.2745 cv
@
178.771 63.2745 mo
178.771 48.9683 li
@
178.771 48.9683 mo
178.771 48.6163 178.483 48.3267 178.131 48.3267 cv
@
178.131 48.3267 mo
176.129 48.3267 li
@
176.129 48.3267 mo
175.777 48.3267 175.489 48.6163 175.489 48.9683 cv
@
175.489 48.9683 mo
175.489 63.273 li
@
175.489 63.273 mo
175.489 63.627 175.777 63.9141 176.129 63.9141 cv
@
184.011 63.9141 mo
186.122 63.9141 li
@
186.122 63.9141 mo
186.336 63.9141 186.52 63.8199 186.644 63.6456 cv
@
186.644 63.6456 mo
186.768 63.4722 186.797 63.2677 186.728 63.065 cv
@
186.728 63.065 mo
185.359 59.0816 li
@
185.359 59.0816 mo
185.3 58.9102 185.186 58.7847 185.023 58.7086 cv
@
185.023 58.7086 mo
184.858 58.6324 184.689 58.627 184.521 58.6915 cv
@
184.521 58.6915 mo
184.245 58.7994 183.969 58.8839 183.693 58.9488 cv
@
183.693 58.9488 mo
183.403 59.0177 183.08 59.0601 182.725 59.0904 cv
@
182.725 59.0904 mo
182.52 59.107 182.353 59.2081 182.241 59.3805 cv
@
182.241 59.3805 mo
182.128 59.5518 182.106 59.7467 182.173 59.941 cv
@
182.173 59.941 mo
183.407 63.4845 li
@
183.407 63.4845 mo
183.498 63.7462 183.734 63.9141 184.011 63.9141 cv
@
156.498 57.7608 mo
161.233 57.7608 li
@
161.233 57.7608 mo
161.586 57.7608 161.874 57.4727 161.874 57.1197 cv
@
161.874 57.1197 mo
161.874 55.1412 li
@
161.874 55.1412 mo
161.874 54.7887 161.586 54.5001 161.233 54.5001 cv
@
161.233 54.5001 mo
156.498 54.5001 li
@
156.498 54.5001 mo
156.145 54.5001 155.856 54.7887 155.857 55.1412 cv
@
155.857 55.1412 mo
155.857 57.1197 li
@
155.857 57.1197 mo
155.857 57.4727 156.145 57.7608 156.498 57.7608 cv
@
156.498 63.9141 mo
161.233 63.9141 li
@
161.233 63.9141 mo
161.586 63.9141 161.874 63.627 161.874 63.273 cv
@
161.874 63.273 mo
161.874 61.2906 li
@
161.874 61.2906 mo
161.874 60.9371 161.586 60.6495 161.233 60.6495 cv
@
161.233 60.6495 mo
156.498 60.6495 li
@
156.498 60.6495 mo
156.145 60.6495 155.857 60.9371 155.857 61.2906 cv
@
155.857 61.2906 mo
155.857 63.273 li
@
155.857 63.273 mo
155.857 63.627 156.145 63.9141 156.498 63.9141 cv
@
151.348 63.9141 mo
153.349 63.9141 li
@
153.349 63.9141 mo
153.701 63.9141 153.989 63.627 153.989 63.2745 cv
@
153.989 63.2745 mo
153.989 48.9683 li
@
153.989 48.9683 mo
153.989 48.6163 153.701 48.3267 153.349 48.3267 cv
@
153.349 48.3267 mo
151.348 48.3267 li
@
151.348 48.3267 mo
150.995 48.3267 150.707 48.6163 150.707 48.9683 cv
@
150.707 48.9683 mo
150.707 63.273 li
@
150.707 63.273 mo
150.707 63.627 150.995 63.9141 151.348 63.9141 cv
@
156.498 51.588 mo
161.233 51.588 li
@
161.233 51.588 mo
161.586 51.588 161.874 51.2999 161.874 50.9469 cv
@
161.874 50.9469 mo
161.874 48.9683 li
@
161.874 48.9683 mo
161.874 48.6163 161.586 48.3277 161.233 48.3277 cv
@
161.233 48.3277 mo
156.498 48.3267 li
@
156.498 48.3267 mo
156.145 48.3267 155.857 48.6163 155.857 48.9683 cv
@
155.857 48.9683 mo
155.857 50.9469 li
@
155.857 50.9469 mo
155.857 51.2999 156.145 51.588 156.498 51.588 cv
@
130.306 63.9141 mo
132.306 63.9141 li
@
132.306 63.9141 mo
132.659 63.9141 132.947 63.627 132.947 63.273 cv
@
132.947 63.273 mo
132.947 54.1392 li
@
132.947 54.1392 mo
132.947 53.7862 132.659 53.4972 132.306 53.4972 cv
@
132.306 53.4972 mo
130.306 53.4972 li
@
130.306 53.4972 mo
129.953 53.4972 129.665 53.7862 129.665 54.1392 cv
@
129.665 54.1392 mo
129.665 63.273 li
@
129.665 63.273 mo
129.665 63.627 129.953 63.9141 130.306 63.9141 cv
@
126.791 51.588 mo
135.793 51.588 li
@
135.793 51.588 mo
136.146 51.588 136.433 51.2999 136.433 50.9469 cv
@
136.433 50.9469 mo
136.433 48.9683 li
@
136.433 48.9683 mo
136.433 48.6163 136.146 48.3277 135.793 48.3277 cv
@
135.793 48.3277 mo
126.791 48.3267 li
@
126.791 48.3267 mo
126.439 48.3267 126.152 48.6163 126.152 48.9683 cv
@
126.152 48.9683 mo
126.152 50.9469 li
@
126.152 50.9469 mo
126.152 51.2999 126.439 51.588 126.791 51.588 cv
@
106.262 57.7608 mo
106.875 57.7608 li
@
106.875 57.7608 mo
107.695 57.7608 108.356 57.691 108.88 57.5279 cv
@
108.88 57.5279 mo
109.405 57.3888 109.883 57.1324 110.316 56.7833 cv
@
110.316 56.7833 mo
110.887 56.3404 111.319 55.7813 111.638 55.1055 cv
@
111.638 55.1055 mo
111.934 54.4532 112.094 53.7545 112.094 53.0328 cv
@
112.094 53.0328 mo
112.094 52.3565 111.957 51.7052 111.684 51.0992 cv
@
111.684 51.0992 mo
111.41 50.4928 111.022 49.9576 110.543 49.5152 cv
@
110.543 49.5152 mo
110.293 49.3053 110.066 49.1192 109.815 48.9561 cv
@
109.815 48.9561 mo
109.564 48.7926 109.268 48.6768 108.972 48.5826 cv
@
108.972 48.5826 mo
108.652 48.4898 108.31 48.42 107.946 48.3746 cv
@
107.946 48.3746 mo
107.558 48.3502 107.125 48.3267 106.647 48.3267 cv
@
106.647 48.3267 mo
106.262 48.3267 li
@
106.262 48.3267 mo
105.909 48.3267 105.621 48.6163 105.621 48.9683 cv
@
105.621 48.9683 mo
105.621 50.9937 li
@
105.621 50.9937 mo
105.621 51.3468 105.909 51.6353 106.262 51.6353 cv
@
106.262 51.6353 mo
106.852 51.6353 li
@
106.852 51.6353 mo
107.24 51.6353 107.536 51.6578 107.741 51.6812 cv
@
107.741 51.6812 mo
107.946 51.7276 108.128 51.7979 108.288 51.9146 cv
@
108.288 51.9146 mo
108.447 52.0304 108.584 52.1939 108.698 52.3795 cv
@
108.698 52.3795 mo
108.812 52.5899 108.857 52.7994 108.857 53.0328 cv
@
108.857 53.0328 mo
108.857 53.3116 108.789 53.5435 108.652 53.7779 cv
@
108.652 53.7779 mo
108.494 53.9879 108.31 54.1734 108.06 54.2662 cv
@
108.06 54.2662 mo
107.9 54.337 107.719 54.4068 107.536 54.4303 cv
@
107.536 54.4303 mo
107.353 54.4532 107.08 54.4532 106.693 54.4532 cv
@
106.693 54.4532 mo
106.262 54.4532 li
@
106.262 54.4532 mo
105.909 54.4532 105.621 54.7418 105.621 55.0948 cv
@
105.621 55.0948 mo
105.621 57.1197 li
@
105.621 57.1197 mo
105.621 57.4727 105.909 57.7608 106.262 57.7608 cv
@
101.134 63.9141 mo
103.135 63.9141 li
@
103.135 63.9141 mo
103.488 63.9141 103.774 63.627 103.775 63.2745 cv
@
103.775 63.2745 mo
103.775 48.9683 li
@
103.775 48.9683 mo
103.775 48.6163 103.488 48.3267 103.135 48.3267 cv
@
103.135 48.3267 mo
101.134 48.3267 li
@
101.134 48.3267 mo
100.782 48.3267 100.494 48.6163 100.494 48.9683 cv
@
100.494 48.9683 mo
100.494 63.273 li
@
100.494 63.273 mo
100.494 63.627 100.782 63.9141 101.134 63.9141 cv
@
109.016 63.9141 mo
111.126 63.9141 li
@
111.126 63.9141 mo
111.341 63.9141 111.526 63.8199 111.649 63.6456 cv
@
111.649 63.6456 mo
111.773 63.4722 111.803 63.2677 111.732 63.065 cv
@
111.732 63.065 mo
110.364 59.0816 li
@
110.364 59.0816 mo
110.306 58.9093 110.192 58.7847 110.029 58.7086 cv
@
110.029 58.7086 mo
109.865 58.6324 109.695 58.627 109.527 58.6915 cv
@
109.527 58.6915 mo
109.251 58.8009 108.974 58.8839 108.698 58.9488 cv
@
108.698 58.9488 mo
108.408 59.0177 108.085 59.0601 107.729 59.0904 cv
@
107.729 59.0904 mo
107.526 59.107 107.357 59.2081 107.246 59.3795 cv
@
107.246 59.3795 mo
107.135 59.5518 107.11 59.7467 107.179 59.941 cv
@
107.179 59.941 mo
108.412 63.4845 li
@
108.412 63.4845 mo
108.504 63.7462 108.741 63.9141 109.016 63.9141 cv
@
74.1298 63.8756 mo
76.3685 63.8756 li
@
76.3685 63.8756 mo
76.6151 63.8756 76.829 63.7457 76.9403 63.523 cv
@
76.9403 63.523 mo
80.1293 57.1705 li
@
80.1293 57.1705 mo
80.223 56.9845 80.223 56.7838 80.1298 56.5953 cv
@
80.1298 56.5953 mo
79.0194 54.3702 li
@
79.0194 54.3702 mo
78.9086 54.1485 78.6967 54.0167 78.4496 54.0152 cv
@
78.4496 54.0152 mo
78.2001 54.0147 77.9867 54.1471 77.8754 54.3687 cv
@
77.8754 54.3687 mo
73.5585 62.9469 li
@
73.5585 62.9469 mo
73.4559 63.1514 73.4642 63.3765 73.5848 63.5709 cv
@
73.5848 63.5709 mo
73.7045 63.7667 73.9008 63.8756 74.1298 63.8756 cv
@
86.2074 63.8756 mo
88.4608 63.8756 li
@
88.4608 63.8756 mo
88.6903 63.8756 88.8871 63.7652 89.0067 63.5709 cv
@
89.0067 63.5709 mo
89.1254 63.3756 89.1361 63.15 89.0321 62.9454 cv
@
89.0321 62.9454 mo
81.8456 48.7179 li
@
81.8456 48.7179 mo
81.7343 48.4962 81.5219 48.3668 81.2753 48.3663 cv
@
81.2753 48.3663 mo
81.0267 48.3658 80.8153 48.4962 80.703 48.7164 cv
@
80.703 48.7164 mo
79.5775 50.9322 li
@
79.5775 50.9322 mo
79.4823 51.1217 79.4823 51.3258 79.5775 51.5133 cv
@
79.5775 51.5133 mo
82.87 58.0015 li
@
82.87 58.0015 mo
81.9686 58.0015 li
@
81.9686 58.0015 mo
81.7206 58.0015 81.5062 58.1344 81.3949 58.3575 cv
@
81.3949 58.3575 mo
80.4135 60.3355 li
@
80.4135 60.3355 mo
80.3119 60.5416 80.3222 60.7657 80.4428 60.9596 cv
@
80.4428 60.9596 mo
80.5629 61.1549 80.7587 61.2633 80.9877 61.2633 cv
@
80.9877 61.2633 mo
84.1156 61.2633 li
@
84.1156 61.2633 mo
84.3646 61.2633 84.5775 61.3956 84.6884 61.6182 cv
@
84.6884 61.6182 mo
85.6332 63.5201 li
@
85.6332 63.5201 mo
85.7445 63.7437 85.9574 63.8756 86.2074 63.8756 cv
@
50.0302 48.8985 mo
50.0302 57.1324 li
@
50.0302 57.1324 mo
50.0302 58.274 50.1439 59.2052 50.3944 59.9513 cv
@
50.3944 59.9513 mo
50.6454 60.7193 51.0331 61.4185 51.6019 62.047 cv
@
51.6019 62.047 mo
52.1039 62.5831 52.6737 63.0494 53.3119 63.399 cv
@
53.3119 63.399 mo
53.7069 63.6285 54.1185 63.817 54.5531 63.9532 cv
@
54.5531 63.9532 mo
54.7543 64.0157 54.9535 63.983 55.1244 63.8585 cv
@
55.1244 63.8585 mo
55.2933 63.7345 55.3847 63.5523 55.3847 63.3424 cv
@
55.3847 63.3424 mo
55.3847 61.1427 li
@
55.3847 61.1427 mo
55.3847 60.8873 55.245 60.6685 55.0136 60.5611 cv
@
55.0136 60.5611 mo
54.766 60.4469 54.556 60.3204 54.3827 60.1832 cv
@
54.3827 60.1832 mo
54.1117 59.9703 53.9037 59.7408 53.7445 59.439 cv
@
53.7445 59.439 mo
53.5848 59.1358 53.4711 58.7862 53.4027 58.3663 cv
@
53.4027 58.3663 mo
53.3344 57.9478 53.3119 57.4347 53.3119 56.8297 cv
@
53.3119 56.8297 mo
53.3119 48.8985 li
@
53.3119 48.8985 mo
53.3119 48.5465 53.0233 48.2569 52.6708 48.2569 cv
@
52.6708 48.2569 mo
50.6703 48.2569 li
@
50.6703 48.2569 mo
50.3182 48.2569 50.0302 48.5465 50.0302 48.8985 cv
@
59.2826 48.8985 mo
59.2826 56.8297 li
@
59.2826 56.8297 mo
59.2826 57.5274 59.2597 58.0631 59.1918 58.4371 cv
@
59.1918 58.4371 mo
59.1224 58.8331 59.0087 59.1583 58.8495 59.439 cv
@
58.8495 59.439 mo
58.6898 59.7408 58.4623 59.9976 58.2113 60.2076 cv
@
58.2113 60.2076 mo
58.0297 60.3468 57.8168 60.4659 57.5722 60.5714 cv
@
57.5722 60.5714 mo
57.3324 60.6754 57.1854 60.899 57.1854 61.1607 cv
@
57.1854 61.1607 mo
57.1854 63.338 li
@
57.1854 63.338 mo
57.1854 63.5484 57.2777 63.7296 57.4476 63.8555 cv
@
57.4476 63.8555 mo
57.6171 63.9796 57.8178 64.0137 58.0189 63.9508 cv
@
58.0189 63.9508 mo
58.4452 63.817 58.8568 63.6344 59.2597 63.4215 cv
@
59.2597 63.4215 mo
59.9203 63.0728 60.4901 62.606 60.9921 62.047 cv
@
60.9921 62.047 mo
61.5609 61.4185 61.9486 60.7193 62.1996 59.9513 cv
@
62.1996 59.9513 mo
62.4506 59.2052 62.5643 58.274 62.5643 57.1324 cv
@
62.5643 57.1324 mo
62.5643 48.8985 li
@
62.5643 48.8985 mo
62.5643 48.5465 62.2763 48.2569 61.9252 48.2569 cv
@
61.9252 48.2569 mo
59.9232 48.2569 li
@
59.9232 48.2569 mo
59.5702 48.2569 59.2826 48.5465 59.2826 48.8985 cv
@
38.4013 60.8355 mo
33.5043 60.8355 li
@
33.5043 60.8355 mo
32.8202 60.8355 32.2499 60.8121 31.7719 60.7887 cv
@
31.7719 60.7887 mo
31.2929 60.7657 30.8607 60.7428 30.518 60.6724 cv
@
30.518 60.6724 mo
30.1547 60.6026 29.8344 60.5098 29.5848 60.3931 cv
@
29.5848 60.3931 mo
29.3104 60.276 29.037 60.1373 28.7865 59.9732 cv
@
28.7865 59.9732 mo
28.3075 59.6705 27.9208 59.2979 27.6244 58.8555 cv
@
27.6244 58.8555 mo
27.393 58.5098 27.1752 58.107 26.993 57.6353 cv
@
26.993 57.6353 mo
26.8959 57.3829 26.6654 57.2262 26.3959 57.2262 cv
@
26.3959 57.2262 mo
24.3236 57.2262 li
@
24.3236 57.2262 mo
24.1205 57.2262 23.9457 57.3097 23.8207 57.4688 cv
@
23.8207 57.4688 mo
23.6952 57.6295 23.6532 57.8184 23.7006 58.0167 cv
@
23.7006 58.0167 mo
23.8724 58.7247 24.1151 59.3697 24.434 59.9503 cv
@
24.434 59.9503 mo
24.8666 60.7428 25.4589 61.4644 26.2113 62.1173 cv
@
26.2113 62.1173 mo
26.6444 62.4888 27.077 62.7926 27.5101 63.0489 cv
@
27.5101 63.0489 mo
27.9432 63.3057 28.3988 63.5142 28.9232 63.6778 cv
@
28.9232 63.6778 mo
29.4476 63.8404 30.017 63.9342 30.6552 64.004 cv
@
30.6552 64.004 mo
31.2929 64.0728 32.0453 64.1007 32.8886 64.1007 cv
@
32.8886 64.1007 mo
38.4013 64.1007 li
@
38.4013 64.1007 mo
38.7538 64.1007 39.0419 63.8126 39.0419 63.4591 cv
@
39.0419 63.4591 mo
39.0419 61.4771 li
@
39.0419 61.4771 mo
39.0419 61.1231 38.7538 60.8355 38.4013 60.8355 cv
@
38.6835 58.4625 mo
38.7787 58.1319 38.8583 57.8067 38.9052 57.504 cv
@
38.9052 57.504 mo
38.9745 57.0626 39.0194 56.5958 39.0194 56.107 cv
@
39.0194 56.107 mo
39.0194 55.0123 38.8139 53.9639 38.4042 53.0089 cv
@
38.4042 53.0089 mo
37.9935 52.0533 37.4232 51.191 36.7181 50.4698 cv
@
36.7181 50.4698 mo
36.0106 49.7472 35.1679 49.189 34.2333 48.7686 cv
@
34.2333 48.7686 mo
33.2987 48.3502 32.2728 48.1407 31.2011 48.1407 cv
@
31.2011 48.1407 mo
30.1766 48.1407 29.2421 48.3267 28.3534 48.6763 cv
@
28.3534 48.6763 mo
27.4647 49.0489 26.6679 49.5611 25.9833 50.1905 cv
@
25.9833 50.1905 mo
25.2772 50.8419 24.7064 51.6119 24.2738 52.4967 cv
@
24.2738 52.4967 mo
23.9486 53.1817 23.7118 53.9063 23.5668 54.671 cv
@
23.5668 54.671 mo
23.5297 54.8648 23.577 55.047 23.7025 55.1988 cv
@
23.7025 55.1988 mo
23.8285 55.3516 23.9989 55.4312 24.1942 55.4312 cv
@
24.1942 55.4312 mo
26.2147 55.4312 li
@
26.2147 55.4312 mo
26.5106 55.4312 26.7611 55.2369 26.8344 54.9503 cv
@
26.8344 54.9503 mo
26.9364 54.5509 27.0931 54.1783 27.2821 53.8243 cv
@
27.2821 53.8243 mo
27.5389 53.3389 27.8749 52.9156 28.2626 52.566 cv
@
28.2626 52.566 mo
28.6498 52.2169 29.1049 51.9605 29.6068 51.774 cv
@
29.6068 51.774 mo
30.1083 51.5875 30.6552 51.4942 31.2255 51.4942 cv
@
31.2255 51.4942 mo
31.8402 51.4942 32.4325 51.6119 32.9794 51.8438 cv
@
32.9794 51.8438 mo
33.5267 52.1002 34.0057 52.4268 34.4159 52.8458 cv
@
34.4159 52.8458 mo
34.8261 53.2652 35.1444 53.754 35.3954 54.3136 cv
@
35.3954 54.3136 mo
35.6234 54.8961 35.7372 55.5011 35.7372 56.1534 cv
@
35.7372 56.1534 mo
35.7372 56.6427 35.6683 57.1085 35.5326 57.5513 cv
@
35.5326 57.5513 mo
35.476 57.7042 35.413 57.859 35.3407 58.0147 cv
@
35.3407 58.0147 mo
35.2474 58.2208 35.2606 58.4405 35.3837 58.6305 cv
@
35.3837 58.6305 mo
35.5033 58.8199 35.6967 58.9254 35.9222 58.9254 cv
@
35.9222 58.9254 mo
38.0682 58.9254 li
@
38.0682 58.9254 mo
38.3573 58.9254 38.6034 58.7408 38.6835 58.4625 cv
@
199.715 38.9171 mo
201.716 38.9171 li
@
201.716 38.9171 mo
202.069 38.9171 202.357 38.6285 202.357 38.2755 cv
@
202.357 38.2755 mo
202.357 23.9698 li
@
202.357 23.9698 mo
202.357 23.6163 202.069 23.3287 201.716 23.3287 cv
@
201.716 23.3287 mo
199.715 23.3287 li
@
199.715 23.3287 mo
199.363 23.3287 199.074 23.6163 199.074 23.9698 cv
@
199.074 23.9698 mo
199.074 38.2755 li
@
199.074 38.2755 mo
199.074 38.6285 199.363 38.9171 199.715 38.9171 cv
@
204.796 38.9171 mo
205.456 38.9171 li
@
205.456 38.9171 mo
206.482 38.9171 207.348 38.8194 208.099 38.609 cv
@
208.099 38.609 mo
208.828 38.4 209.513 38.0738 210.15 37.6309 cv
@
210.15 37.6309 mo
211.199 36.8853 212.019 35.9303 212.612 34.7896 cv
@
212.612 34.7896 mo
213.204 33.6475 213.501 32.4127 213.501 31.1085 cv
@
213.501 31.1085 mo
213.501 29.9669 213.272 28.8722 212.818 27.8707 cv
@
212.818 27.8707 mo
212.361 26.8682 211.678 25.984 210.811 25.1925 cv
@
210.811 25.1925 mo
210.082 24.5396 209.285 24.0748 208.441 23.7711 cv
@
208.441 23.7711 mo
207.576 23.4688 206.526 23.3287 205.32 23.3287 cv
@
205.32 23.3287 mo
204.796 23.3287 li
@
204.796 23.3287 mo
204.444 23.3287 204.157 23.6163 204.157 23.9698 cv
@
204.157 23.9698 mo
204.157 25.9483 li
@
204.157 25.9483 mo
204.157 26.3013 204.444 26.5894 204.796 26.5894 cv
@
204.796 26.5894 mo
205 26.5894 li
@
205 26.5894 mo
205.433 26.5894 205.798 26.5894 206.139 26.6124 cv
@
206.139 26.6124 mo
206.459 26.6368 206.755 26.6827 207.006 26.7525 cv
@
207.006 26.7525 mo
207.257 26.8223 207.507 26.9161 207.736 27.0323 cv
@
207.736 27.0323 mo
207.94 27.149 208.168 27.2652 208.373 27.4283 cv
@
208.373 27.4283 mo
208.943 27.8477 209.398 28.3839 209.741 29.0357 cv
@
209.741 29.0357 mo
210.06 29.6881 210.219 30.4097 210.219 31.1324 cv
@
210.219 31.1324 mo
210.219 32.3433 209.786 33.4151 208.92 34.3233 cv
@
208.92 34.3233 mo
208.464 34.7896 207.963 35.1153 207.439 35.3248 cv
@
207.439 35.3248 mo
206.892 35.5113 206.185 35.6046 205.342 35.6046 cv
@
205.342 35.6046 mo
204.796 35.6046 li
@
204.796 35.6046 mo
204.444 35.6046 204.157 35.8912 204.157 36.2457 cv
@
204.157 36.2457 mo
204.157 38.2755 li
@
204.157 38.2755 mo
204.157 38.6285 204.444 38.9171 204.796 38.9171 cv
@
179.823 38.9171 mo
181.823 38.9171 li
@
181.823 38.9171 mo
182.176 38.9171 182.463 38.6285 182.463 38.2755 cv
@
182.463 38.2755 mo
182.463 32.2232 li
@
182.463 32.2232 mo
182.463 32.0826 182.502 31.963 182.583 31.8502 cv
@
182.583 31.8502 mo
187.941 24.3424 li
@
187.941 24.3424 mo
188.082 24.1427 188.099 23.8951 187.988 23.6763 cv
@
187.988 23.6763 mo
187.876 23.4571 187.665 23.3287 187.419 23.3287 cv
@
187.419 23.3287 mo
184.935 23.3287 li
@
184.935 23.3287 mo
184.723 23.3287 184.539 23.422 184.415 23.5968 cv
@
184.415 23.5968 mo
179.302 30.755 li
@
179.302 30.755 mo
179.221 30.8678 179.182 30.9884 179.182 31.128 cv
@
179.182 31.128 mo
179.182 38.2755 li
@
179.182 38.2755 mo
179.182 38.6285 179.47 38.9171 179.823 38.9171 cv
@
178.552 28.4928 mo
179.805 26.7706 li
@
179.805 26.7706 mo
179.966 26.547 179.971 26.2569 179.813 26.0294 cv
@
179.813 26.0294 mo
178.143 23.6051 li
@
178.143 23.6051 mo
178.019 23.4268 177.832 23.3287 177.616 23.3287 cv
@
177.616 23.3287 mo
175.16 23.3287 li
@
175.16 23.3287 mo
174.916 23.3287 174.706 23.4547 174.593 23.6715 cv
@
174.593 23.6715 mo
174.479 23.8888 174.496 24.1334 174.635 24.3355 cv
@
174.635 24.3355 mo
177.506 28.481 li
@
177.506 28.481 mo
177.629 28.6563 177.812 28.7545 178.026 28.7559 cv
@
178.026 28.7559 mo
178.239 28.7579 178.425 28.6666 178.552 28.4928 cv
@
155.304 38.9171 mo
157.305 38.9171 li
@
157.305 38.9171 mo
157.657 38.9171 157.946 38.6285 157.946 38.2755 cv
@
157.946 38.2755 mo
157.946 29.1407 li
@
157.946 29.1407 mo
157.946 28.7877 157.657 28.5001 157.305 28.5001 cv
@
157.305 28.5001 mo
155.304 28.5001 li
@
155.304 28.5001 mo
154.952 28.5001 154.663 28.7877 154.663 29.1407 cv
@
154.663 29.1407 mo
154.663 38.2755 li
@
154.663 38.2755 mo
154.663 38.6285 154.952 38.9171 155.304 38.9171 cv
@
151.791 26.5894 mo
160.792 26.5894 li
@
160.792 26.5894 mo
161.144 26.5894 161.432 26.3013 161.432 25.9483 cv
@
161.432 25.9483 mo
161.432 23.9698 li
@
161.432 23.9698 mo
161.432 23.6163 161.144 23.3297 160.792 23.3297 cv
@
160.792 23.3297 mo
151.791 23.3287 li
@
151.791 23.3287 mo
151.438 23.3287 151.15 23.6163 151.15 23.9698 cv
@
151.15 23.9698 mo
151.15 25.9483 li
@
151.15 25.9483 mo
151.15 26.3013 151.438 26.5894 151.791 26.5894 cv
@
125.209 38.9171 mo
127.21 38.9171 li
@
127.21 38.9171 mo
127.563 38.9171 127.851 38.6285 127.851 38.2755 cv
@
127.851 38.2755 mo
127.851 32.9566 li
@
127.851 32.9566 mo
127.851 32.7672 127.778 32.6055 127.637 32.4791 cv
@
127.637 32.4791 mo
125.637 30.6895 li
@
125.637 30.6895 mo
125.444 30.5162 125.184 30.4762 124.948 30.5816 cv
@
124.948 30.5816 mo
124.712 30.6876 124.569 30.9083 124.569 31.1676 cv
@
124.569 31.1676 mo
124.569 38.2755 li
@
124.569 38.2755 mo
124.569 38.6285 124.857 38.9171 125.209 38.9171 cv
@
124.781 27.4561 mo
136.946 38.4405 li
@
136.946 38.4405 mo
137.137 38.6134 137.399 38.6549 137.635 38.5504 cv
@
137.635 38.5504 mo
137.871 38.4449 138.016 38.2227 138.016 37.9644 cv
@
138.016 37.9644 mo
138.016 23.9698 li
@
138.016 23.9698 mo
138.016 23.6163 137.727 23.3287 137.374 23.3287 cv
@
137.374 23.3287 mo
135.373 23.3287 li
@
135.373 23.3287 mo
135.021 23.3287 134.733 23.6163 134.733 23.9698 cv
@
134.733 23.9698 mo
134.733 30.5733 li
@
134.733 30.5733 mo
134.733 30.8316 134.59 31.0543 134.353 31.1593 cv
@
134.353 31.1593 mo
134.117 31.2647 133.857 31.2222 133.664 31.0484 cv
@
133.664 31.0484 mo
125.639 23.7857 li
@
125.639 23.7857 mo
125.447 23.6109 125.187 23.5684 124.949 23.6729 cv
@
124.949 23.6729 mo
124.712 23.7794 124.569 24.0006 124.569 24.2603 cv
@
124.569 24.2603 mo
124.569 26.9805 li
@
124.569 26.9805 mo
124.569 27.169 124.642 27.3311 124.781 27.4561 cv
@
106.501 32.7623 mo
111.237 32.7623 li
@
111.237 32.7623 mo
111.59 32.7623 111.877 32.4742 111.877 32.1207 cv
@
111.877 32.1207 mo
111.877 30.1427 li
@
111.877 30.1427 mo
111.877 29.7896 111.59 29.502 111.237 29.502 cv
@
111.237 29.502 mo
106.501 29.5015 li
@
106.501 29.5015 mo
106.148 29.5015 105.861 29.7896 105.861 30.1427 cv
@
105.861 30.1427 mo
105.861 32.1207 li
@
105.861 32.1207 mo
105.861 32.4742 106.148 32.7623 106.501 32.7623 cv
@
106.501 38.9171 mo
111.237 38.9171 li
@
111.237 38.9171 mo
111.59 38.9171 111.877 38.6285 111.877 38.2755 cv
@
111.877 38.2755 mo
111.877 36.2916 li
@
111.877 36.2916 mo
111.877 35.9395 111.59 35.651 111.237 35.651 cv
@
111.237 35.651 mo
106.501 35.651 li
@
106.501 35.651 mo
106.148 35.651 105.861 35.9395 105.861 36.2916 cv
@
105.861 36.2916 mo
105.861 38.2755 li
@
105.861 38.2755 mo
105.861 38.6285 106.148 38.9176 106.501 38.9171 cv
@
101.351 38.9171 mo
103.351 38.9171 li
@
103.351 38.9171 mo
103.703 38.9171 103.992 38.6285 103.992 38.2755 cv
@
103.992 38.2755 mo
103.992 23.9698 li
@
103.992 23.9698 mo
103.992 23.6163 103.703 23.3287 103.351 23.3287 cv
@
103.351 23.3287 mo
101.351 23.3287 li
@
101.351 23.3287 mo
100.998 23.3287 100.71 23.6163 100.71 23.9698 cv
@
100.71 23.9698 mo
100.71 38.2755 li
@
100.71 38.2755 mo
100.71 38.6285 100.998 38.9171 101.351 38.9171 cv
@
106.501 26.5899 mo
111.237 26.5894 li
@
111.237 26.5894 mo
111.59 26.5894 111.877 26.3013 111.877 25.9483 cv
@
111.877 25.9483 mo
111.877 23.9698 li
@
111.877 23.9698 mo
111.877 23.6163 111.59 23.3287 111.237 23.3287 cv
@
111.237 23.3287 mo
106.501 23.3287 li
@
106.501 23.3287 mo
106.148 23.3287 105.861 23.6163 105.861 23.9698 cv
@
105.861 23.9698 mo
105.861 25.9483 li
@
105.861 25.9483 mo
105.861 26.3018 106.148 26.5904 106.501 26.5899 cv
@
78.4725 29.5513 mo
79.4838 32.0704 li
@
79.4838 32.0704 mo
79.5809 32.3121 79.8002 32.4644 80.0599 32.4727 cv
@
80.0599 32.4727 mo
80.3207 32.4801 80.5482 32.3389 80.6586 32.1036 cv
@
80.6586 32.1036 mo
80.7103 31.9913 li
@
80.7103 31.9913 mo
80.8187 31.7613 81.0346 31.6231 81.2889 31.6226 cv
@
81.2889 31.6226 mo
81.5419 31.6226 81.7601 31.7598 81.869 31.9893 cv
@
81.869 31.9893 mo
84.8744 38.337 li
@
84.8744 38.337 mo
84.9867 38.5728 85.2133 38.7115 85.473 38.7032 cv
@
85.473 38.7032 mo
85.7333 38.6959 85.9501 38.543 86.0477 38.3028 cv
@
86.0477 38.3028 mo
87.0629 35.7716 li
@
87.0629 35.7716 mo
87.1312 35.6002 87.1254 35.4259 87.0472 35.2594 cv
@
87.0472 35.2594 mo
81.869 24.2828 li
@
81.869 24.2828 mo
81.7597 24.0533 81.5419 23.9141 81.2885 23.9146 cv
@
81.2885 23.9146 mo
81.0346 23.9146 80.8182 24.0538 80.7094 24.2852 cv
@
80.7094 24.2852 mo
78.4882 29.0401 li
@
78.4882 29.0401 mo
78.4096 29.2066 78.4042 29.3795 78.4725 29.5513 cv
@
77.7177 38.3394 mo
78.8656 35.9049 li
@
78.8656 35.9049 mo
78.9442 35.7379 78.9491 35.564 78.8803 35.3917 cv
@
78.8803 35.3917 mo
74.2689 23.94 li
@
74.2689 23.94 mo
74.1708 23.692 73.9423 23.5387 73.6757 23.5387 cv
@
73.6757 23.5387 mo
71.5209 23.5387 li
@
71.5209 23.5387 mo
71.3012 23.5387 71.1132 23.6388 70.9906 23.8219 cv
@
70.9906 23.8219 mo
70.8685 24.0025 70.8451 24.2164 70.9286 24.4205 cv
@
70.9286 24.4205 mo
76.5438 38.3057 li
@
76.5438 38.3057 mo
76.6425 38.5474 76.8602 38.6998 77.1205 38.7061 cv
@
77.1205 38.7061 mo
77.3812 38.7139 77.6058 38.5748 77.7177 38.3394 cv
@
86.3085 29.4566 mo
87.475 31.8975 li
@
87.475 31.8975 mo
87.5873 32.1305 87.8134 32.2686 88.0731 32.2603 cv
@
88.0731 32.2603 mo
88.3314 32.253 88.5477 32.1016 88.6459 31.8609 cv
@
88.6459 31.8609 mo
91.6635 24.421 li
@
91.6635 24.421 mo
91.746 24.2174 91.7225 24.0035 91.601 23.8219 cv
@
91.601 23.8219 mo
91.4784 23.6402 91.2894 23.5387 91.0687 23.5387 cv
@
91.0687 23.5387 mo
88.9398 23.5387 li
@
88.9398 23.5387 mo
88.6742 23.5387 88.4486 23.6905 88.348 23.9361 cv
@
88.348 23.9361 mo
86.2953 28.9342 li
@
86.2953 28.9342 mo
86.223 29.1104 86.2279 29.2867 86.3085 29.4566 cv
@
55.309 38.9171 mo
57.3109 38.9171 li
@
57.3109 38.9171 mo
57.663 38.9171 57.9506 38.6285 57.9506 38.2755 cv
@
57.9506 38.2755 mo
57.9506 29.1407 li
@
57.9506 29.1407 mo
57.9506 28.7877 57.663 28.5001 57.3109 28.5001 cv
@
57.3109 28.5001 mo
55.309 28.5001 li
@
55.309 28.5001 mo
54.9569 28.5001 54.6688 28.7877 54.6688 29.1407 cv
@
54.6688 29.1407 mo
54.6688 38.2755 li
@
54.6688 38.2755 mo
54.6688 38.6285 54.9569 38.9171 55.309 38.9171 cv
@
51.7958 26.5894 mo
60.7977 26.5894 li
@
60.7977 26.5894 mo
61.1503 26.5894 61.4374 26.3013 61.4374 25.9483 cv
@
61.4374 25.9483 mo
61.4374 23.9698 li
@
61.4374 23.9698 mo
61.4374 23.6163 61.1503 23.3287 60.7977 23.3287 cv
@
60.7977 23.3287 mo
51.7958 23.3287 li
@
51.7958 23.3287 mo
51.4432 23.3287 51.1561 23.6163 51.1561 23.9698 cv
@
51.1561 23.9698 mo
51.1561 25.9483 li
@
51.1561 25.9483 mo
51.1561 26.3013 51.4432 26.5894 51.7958 26.5894 cv
@
24.1327 38.877 mo
26.372 38.877 li
@
26.372 38.877 mo
26.6195 38.877 26.8324 38.7452 26.9428 38.524 cv
@
26.9428 38.524 mo
30.1312 32.1715 li
@
30.1312 32.1715 mo
30.2255 31.9845 30.2255 31.7843 30.1312 31.5968 cv
@
30.1312 31.5968 mo
29.0223 29.3712 li
@
29.0223 29.3712 mo
28.9115 29.1485 28.6996 29.0167 28.4515 29.0157 cv
@
28.4515 29.0157 mo
28.203 29.0157 27.9901 29.1471 27.8783 29.3692 cv
@
27.8783 29.3692 mo
23.5614 37.9473 li
@
23.5614 37.9473 mo
23.4589 38.1524 23.4677 38.3775 23.5883 38.5723 cv
@
23.5883 38.5723 mo
23.7084 38.7667 23.9047 38.877 24.1327 38.877 cv
@
36.2094 38.877 mo
38.4642 38.877 li
@
38.4642 38.877 mo
38.6928 38.877 38.8895 38.7667 39.0092 38.5709 cv
@
39.0092 38.5709 mo
39.1283 38.3756 39.1395 38.1519 39.0346 37.9464 cv
@
39.0346 37.9464 mo
31.849 23.7188 li
@
31.849 23.7188 mo
31.7372 23.4972 31.5253 23.3673 31.2787 23.3673 cv
@
31.2787 23.3673 mo
31.0297 23.3668 30.8182 23.4972 30.7055 23.7174 cv
@
30.7055 23.7174 mo
29.5805 25.9337 li
@
29.5805 25.9337 mo
29.4847 26.1231 29.4847 26.3267 29.5805 26.5142 cv
@
29.5805 26.5142 mo
32.8734 33.002 li
@
32.8734 33.002 mo
31.9716 33.002 li
@
31.9716 33.002 mo
31.7235 33.002 31.5101 33.1339 31.3993 33.3585 cv
@
31.3993 33.3585 mo
30.4164 35.3375 li
@
30.4164 35.3375 mo
30.3148 35.5421 30.3246 35.7677 30.4452 35.961 cv
@
30.4452 35.961 mo
30.5658 36.1554 30.7616 36.2633 30.9901 36.2633 cv
@
30.9901 36.2633 mo
34.1185 36.2633 li
@
34.1185 36.2633 mo
34.3676 36.2633 34.5809 36.3971 34.6913 36.6192 cv
@
34.6913 36.6192 mo
35.6366 38.5216 li
@
35.6366 38.5216 mo
35.7474 38.7452 35.9603 38.877 36.2094 38.877 cv
@
.003 lw
4 ml
257.695 41.4141 mo
275.695 41.4141 li
276.686 41.4141 277.495 40.6055 277.495 39.6143 cv
277.495 21.6143 li
277.495 20.6231 276.686 19.814 275.695 19.814 cv
257.695 19.814 li
256.704 19.814 255.894 20.6231 255.894 21.6143 cv
255.894 39.6143 li
255.894 40.6055 256.704 41.4141 257.695 41.4141 cv
cp
@
257.695 66.6143 mo
275.695 66.6143 li
276.686 66.6143 277.495 65.8053 277.495 64.814 cv
277.495 46.814 li
277.495 45.8228 276.686 45.0142 275.695 45.0142 cv
257.695 45.0142 li
256.704 45.0142 255.894 45.8228 255.894 46.814 cv
255.894 64.814 li
255.894 65.8053 256.704 66.6143 257.695 66.6143 cv
cp
@
257.695 91.814 mo
275.695 91.814 li
276.686 91.814 277.495 91.0054 277.495 90.0142 cv
277.495 72.0142 li
277.495 71.023 276.686 70.2139 275.695 70.2139 cv
257.695 70.2139 li
256.704 70.2139 255.894 71.023 255.894 72.0142 cv
255.894 90.0142 li
255.894 91.0054 256.704 91.814 257.695 91.814 cv
cp
@
257.695 117.014 mo
275.695 117.014 li
276.686 117.014 277.495 116.206 277.495 115.214 cv
277.495 97.2139 li
277.495 96.2227 276.686 95.4141 275.695 95.4141 cv
257.695 95.4141 li
256.704 95.4141 255.894 96.2227 255.894 97.2139 cv
255.894 115.214 li
255.894 116.206 256.704 117.014 257.695 117.014 cv
cp
@
257.695 142.214 mo
275.695 142.214 li
276.686 142.214 277.495 141.405 277.495 140.414 cv
277.495 122.414 li
277.495 121.423 276.686 120.614 275.695 120.614 cv
257.695 120.614 li
256.704 120.614 255.894 121.423 255.894 122.414 cv
255.894 140.414 li
255.894 141.405 256.704 142.214 257.695 142.214 cv
cp
@
257.695 167.414 mo
275.695 167.414 li
276.686 167.414 277.495 166.606 277.495 165.614 cv
277.495 147.614 li
277.495 146.623 276.686 145.815 275.695 145.815 cv
257.695 145.815 li
256.704 145.815 255.894 146.623 255.894 147.614 cv
255.894 165.614 li
255.894 166.606 256.704 167.414 257.695 167.414 cv
cp
@
257.695 192.614 mo
275.695 192.614 li
276.686 192.614 277.495 191.806 277.495 190.815 cv
277.495 172.815 li
277.495 171.823 276.686 171.014 275.695 171.014 cv
257.695 171.014 li
256.704 171.014 255.894 171.823 255.894 172.815 cv
255.894 190.815 li
255.894 191.806 256.704 192.614 257.695 192.614 cv
cp
@
257.695 217.815 mo
275.695 217.815 li
276.686 217.815 277.495 217.005 277.495 216.014 cv
277.495 198.014 li
277.495 197.023 276.686 196.214 275.695 196.214 cv
257.695 196.214 li
256.704 196.214 255.894 197.023 255.894 198.014 cv
255.894 216.014 li
255.894 217.005 256.704 217.815 257.695 217.815 cv
cp
@
282.894 41.4141 mo
300.894 41.4141 li
301.887 41.4141 302.695 40.6055 302.695 39.6143 cv
302.695 21.6143 li
302.695 20.6231 301.887 19.814 300.894 19.814 cv
282.894 19.814 li
281.903 19.814 281.095 20.6231 281.095 21.6143 cv
281.095 39.6143 li
281.095 40.6055 281.903 41.4141 282.894 41.4141 cv
cp
@
282.894 66.6143 mo
300.894 66.6143 li
301.887 66.6143 302.695 65.8053 302.695 64.814 cv
302.695 46.814 li
302.695 45.8228 301.887 45.0142 300.894 45.0142 cv
282.894 45.0142 li
281.903 45.0142 281.095 45.8228 281.095 46.814 cv
281.095 64.814 li
281.095 65.8053 281.903 66.6143 282.894 66.6143 cv
cp
@
282.894 91.814 mo
300.894 91.814 li
301.887 91.814 302.695 91.0054 302.695 90.0142 cv
302.695 72.0142 li
302.695 71.023 301.887 70.2139 300.894 70.2139 cv
282.894 70.2139 li
281.903 70.2139 281.095 71.023 281.095 72.0142 cv
281.095 90.0142 li
281.095 91.0054 281.903 91.814 282.894 91.814 cv
cp
@
282.894 117.014 mo
300.894 117.014 li
301.887 117.014 302.695 116.206 302.695 115.214 cv
302.695 97.2139 li
302.695 96.2227 301.887 95.4141 300.894 95.4141 cv
282.894 95.4141 li
281.903 95.4141 281.095 96.2227 281.095 97.2139 cv
281.095 115.214 li
281.095 116.206 281.903 117.014 282.894 117.014 cv
cp
@
282.894 142.214 mo
300.894 142.214 li
301.887 142.214 302.695 141.405 302.695 140.414 cv
302.695 122.414 li
302.695 121.423 301.887 120.614 300.894 120.614 cv
282.894 120.614 li
281.903 120.614 281.095 121.423 281.095 122.414 cv
281.095 140.414 li
281.095 141.405 281.903 142.214 282.894 142.214 cv
cp
@
282.894 167.414 mo
300.894 167.414 li
301.887 167.414 302.695 166.606 302.695 165.614 cv
302.695 147.614 li
302.695 146.623 301.887 145.815 300.894 145.815 cv
282.894 145.815 li
281.903 145.815 281.095 146.623 281.095 147.614 cv
281.095 165.614 li
281.095 166.606 281.903 167.414 282.894 167.414 cv
cp
@
282.894 192.614 mo
300.894 192.614 li
301.887 192.614 302.695 191.806 302.695 190.815 cv
302.695 172.815 li
302.695 171.823 301.887 171.014 300.894 171.014 cv
282.894 171.014 li
281.903 171.014 281.095 171.823 281.095 172.815 cv
281.095 190.815 li
281.095 191.806 281.903 192.614 282.894 192.614 cv
cp
@
282.894 217.815 mo
300.894 217.815 li
301.887 217.815 302.695 217.005 302.695 216.014 cv
302.695 198.014 li
302.695 197.023 301.887 196.214 300.894 196.214 cv
282.894 196.214 li
281.903 196.214 281.095 197.023 281.095 198.014 cv
281.095 216.014 li
281.095 217.005 281.903 217.815 282.894 217.815 cv
cp
@
308.095 41.4141 mo
326.095 41.4141 li
327.086 41.4141 327.894 40.6055 327.894 39.6143 cv
327.894 21.6143 li
327.894 20.6231 327.086 19.814 326.095 19.814 cv
308.095 19.814 li
307.103 19.814 306.295 20.6231 306.295 21.6143 cv
306.295 39.6143 li
306.295 40.6055 307.103 41.4141 308.095 41.4141 cv
cp
@
308.095 66.6143 mo
326.095 66.6143 li
327.086 66.6143 327.894 65.8053 327.894 64.814 cv
327.894 46.814 li
327.894 45.8228 327.086 45.0142 326.095 45.0142 cv
308.095 45.0142 li
307.103 45.0142 306.295 45.8228 306.295 46.814 cv
306.295 64.814 li
306.295 65.8053 307.103 66.6143 308.095 66.6143 cv
cp
@
308.095 91.814 mo
326.095 91.814 li
327.086 91.814 327.894 91.0054 327.894 90.0142 cv
327.894 72.0142 li
327.894 71.023 327.086 70.2139 326.095 70.2139 cv
308.095 70.2139 li
307.103 70.2139 306.295 71.023 306.295 72.0142 cv
306.295 90.0142 li
306.295 91.0054 307.103 91.814 308.095 91.814 cv
cp
@
308.095 117.014 mo
326.095 117.014 li
327.086 117.014 327.894 116.206 327.894 115.214 cv
327.894 97.2139 li
327.894 96.2227 327.086 95.4141 326.095 95.4141 cv
308.095 95.4141 li
307.103 95.4141 306.295 96.2227 306.295 97.2139 cv
306.295 115.214 li
306.295 116.206 307.103 117.014 308.095 117.014 cv
cp
@
308.095 142.214 mo
326.095 142.214 li
327.086 142.214 327.894 141.405 327.894 140.414 cv
327.894 122.414 li
327.894 121.423 327.086 120.614 326.095 120.614 cv
308.095 120.614 li
307.103 120.614 306.295 121.423 306.295 122.414 cv
306.295 140.414 li
306.295 141.405 307.103 142.214 308.095 142.214 cv
cp
@
308.095 167.414 mo
326.095 167.414 li
327.086 167.414 327.894 166.606 327.894 165.614 cv
327.894 147.614 li
327.894 146.623 327.086 145.815 326.095 145.815 cv
308.095 145.815 li
307.103 145.815 306.295 146.623 306.295 147.614 cv
306.295 165.614 li
306.295 166.606 307.103 167.414 308.095 167.414 cv
cp
@
308.095 192.614 mo
326.095 192.614 li
327.086 192.614 327.894 191.806 327.894 190.815 cv
327.894 172.815 li
327.894 171.823 327.086 171.014 326.095 171.014 cv
308.095 171.014 li
307.103 171.014 306.295 171.823 306.295 172.815 cv
306.295 190.815 li
306.295 191.806 307.103 192.614 308.095 192.614 cv
cp
@
308.095 217.815 mo
326.095 217.815 li
327.086 217.815 327.894 217.005 327.894 216.014 cv
327.894 198.014 li
327.894 197.023 327.086 196.214 326.095 196.214 cv
308.095 196.214 li
307.103 196.214 306.295 197.023 306.295 198.014 cv
306.295 216.014 li
306.295 217.005 307.103 217.815 308.095 217.815 cv
cp
@
333.295 41.4141 mo
351.295 41.4141 li
352.286 41.4141 353.095 40.6055 353.095 39.6143 cv
353.095 21.6143 li
353.095 20.6231 352.286 19.814 351.295 19.814 cv
333.295 19.814 li
332.304 19.814 331.495 20.6231 331.495 21.6143 cv
331.495 39.6143 li
331.495 40.6055 332.304 41.4141 333.295 41.4141 cv
cp
@
333.295 66.6143 mo
351.295 66.6143 li
352.286 66.6143 353.095 65.8053 353.095 64.814 cv
353.095 46.814 li
353.095 45.8228 352.286 45.0142 351.295 45.0142 cv
333.295 45.0142 li
332.304 45.0142 331.495 45.8228 331.495 46.814 cv
331.495 64.814 li
331.495 65.8053 332.304 66.6143 333.295 66.6143 cv
cp
@
333.295 91.814 mo
351.295 91.814 li
352.286 91.814 353.095 91.0054 353.095 90.0142 cv
353.095 72.0142 li
353.095 71.023 352.286 70.2139 351.295 70.2139 cv
333.295 70.2139 li
332.304 70.2139 331.495 71.023 331.495 72.0142 cv
331.495 90.0142 li
331.495 91.0054 332.304 91.814 333.295 91.814 cv
cp
@
333.295 117.014 mo
351.295 117.014 li
352.286 117.014 353.095 116.206 353.095 115.214 cv
353.095 97.2139 li
353.095 96.2227 352.286 95.4141 351.295 95.4141 cv
333.295 95.4141 li
332.304 95.4141 331.495 96.2227 331.495 97.2139 cv
331.495 115.214 li
331.495 116.206 332.304 117.014 333.295 117.014 cv
cp
@
333.295 142.214 mo
351.295 142.214 li
352.286 142.214 353.095 141.405 353.095 140.414 cv
353.095 122.414 li
353.095 121.423 352.286 120.614 351.295 120.614 cv
333.295 120.614 li
332.304 120.614 331.495 121.423 331.495 122.414 cv
331.495 140.414 li
331.495 141.405 332.304 142.214 333.295 142.214 cv
cp
@
333.295 167.414 mo
351.295 167.414 li
352.286 167.414 353.095 166.606 353.095 165.614 cv
353.095 147.614 li
353.095 146.623 352.286 145.815 351.295 145.815 cv
333.295 145.815 li
332.304 145.815 331.495 146.623 331.495 147.614 cv
331.495 165.614 li
331.495 166.606 332.304 167.414 333.295 167.414 cv
cp
@
333.295 192.614 mo
351.295 192.614 li
352.286 192.614 353.095 191.806 353.095 190.815 cv
353.095 172.815 li
353.095 171.823 352.286 171.014 351.295 171.014 cv
333.295 171.014 li
332.304 171.014 331.495 171.823 331.495 172.815 cv
331.495 190.815 li
331.495 191.806 332.304 192.614 333.295 192.614 cv
cp
@
333.295 217.815 mo
351.295 217.815 li
352.286 217.815 353.095 217.005 353.095 216.014 cv
353.095 198.014 li
353.095 197.023 352.286 196.214 351.295 196.214 cv
333.295 196.214 li
332.304 196.214 331.495 197.023 331.495 198.014 cv
331.495 216.014 li
331.495 217.005 332.304 217.815 333.295 217.815 cv
cp
@
358.495 41.4141 mo
376.495 41.4141 li
377.486 41.4141 378.295 40.6055 378.295 39.6143 cv
378.295 21.6143 li
378.295 20.6231 377.486 19.814 376.495 19.814 cv
358.495 19.814 li
357.504 19.814 356.695 20.6231 356.695 21.6143 cv
356.695 39.6143 li
356.695 40.6055 357.504 41.4141 358.495 41.4141 cv
cp
@
358.495 66.6143 mo
376.495 66.6143 li
377.486 66.6143 378.295 65.8053 378.295 64.814 cv
378.295 46.814 li
378.295 45.8228 377.486 45.0142 376.495 45.0142 cv
358.495 45.0142 li
357.504 45.0142 356.695 45.8228 356.695 46.814 cv
356.695 64.814 li
356.695 65.8053 357.504 66.6143 358.495 66.6143 cv
cp
@
358.495 91.814 mo
376.495 91.814 li
377.486 91.814 378.295 91.0054 378.295 90.0142 cv
378.295 72.0142 li
378.295 71.023 377.486 70.2139 376.495 70.2139 cv
358.495 70.2139 li
357.504 70.2139 356.695 71.023 356.695 72.0142 cv
356.695 90.0142 li
356.695 91.0054 357.504 91.814 358.495 91.814 cv
cp
@
358.495 117.014 mo
376.495 117.014 li
377.486 117.014 378.295 116.206 378.295 115.214 cv
378.295 97.2139 li
378.295 96.2227 377.486 95.4141 376.495 95.4141 cv
358.495 95.4141 li
357.504 95.4141 356.695 96.2227 356.695 97.2139 cv
356.695 115.214 li
356.695 116.206 357.504 117.014 358.495 117.014 cv
cp
@
358.495 142.214 mo
376.495 142.214 li
377.486 142.214 378.295 141.405 378.295 140.414 cv
378.295 122.414 li
378.295 121.423 377.486 120.614 376.495 120.614 cv
358.495 120.614 li
357.504 120.614 356.695 121.423 356.695 122.414 cv
356.695 140.414 li
356.695 141.405 357.504 142.214 358.495 142.214 cv
cp
@
358.495 167.414 mo
376.495 167.414 li
377.486 167.414 378.295 166.606 378.295 165.614 cv
378.295 147.614 li
378.295 146.623 377.486 145.815 376.495 145.815 cv
358.495 145.815 li
357.504 145.815 356.695 146.623 356.695 147.614 cv
356.695 165.614 li
356.695 166.606 357.504 167.414 358.495 167.414 cv
cp
@
358.495 192.614 mo
376.495 192.614 li
377.486 192.614 378.295 191.806 378.295 190.815 cv
378.295 172.815 li
378.295 171.823 377.486 171.014 376.495 171.014 cv
358.495 171.014 li
357.504 171.014 356.695 171.823 356.695 172.815 cv
356.695 190.815 li
356.695 191.806 357.504 192.614 358.495 192.614 cv
cp
@
358.495 217.815 mo
376.495 217.815 li
377.486 217.815 378.295 217.005 378.295 216.014 cv
378.295 198.014 li
378.295 197.023 377.486 196.214 376.495 196.214 cv
358.495 196.214 li
357.504 196.214 356.695 197.023 356.695 198.014 cv
356.695 216.014 li
356.695 217.005 357.504 217.815 358.495 217.815 cv
cp
@
383.695 41.4141 mo
401.695 41.4141 li
402.686 41.4141 403.495 40.6055 403.495 39.6143 cv
403.495 21.6143 li
403.495 20.6231 402.686 19.814 401.695 19.814 cv
383.695 19.814 li
382.704 19.814 381.894 20.6231 381.894 21.6143 cv
381.894 39.6143 li
381.894 40.6055 382.704 41.4141 383.695 41.4141 cv
cp
@
383.695 66.6143 mo
401.695 66.6143 li
402.686 66.6143 403.495 65.8053 403.495 64.814 cv
403.495 46.814 li
403.495 45.8228 402.686 45.0142 401.695 45.0142 cv
383.695 45.0142 li
382.704 45.0142 381.894 45.8228 381.894 46.814 cv
381.894 64.814 li
381.894 65.8053 382.704 66.6143 383.695 66.6143 cv
cp
@
383.695 91.814 mo
401.695 91.814 li
402.686 91.814 403.495 91.0054 403.495 90.0142 cv
403.495 72.0142 li
403.495 71.023 402.686 70.2139 401.695 70.2139 cv
383.695 70.2139 li
382.704 70.2139 381.894 71.023 381.894 72.0142 cv
381.894 90.0142 li
381.894 91.0054 382.704 91.814 383.695 91.814 cv
cp
@
383.695 117.014 mo
401.695 117.014 li
402.686 117.014 403.495 116.206 403.495 115.214 cv
403.495 97.2139 li
403.495 96.2227 402.686 95.4141 401.695 95.4141 cv
383.695 95.4141 li
382.704 95.4141 381.894 96.2227 381.894 97.2139 cv
381.894 115.214 li
381.894 116.206 382.704 117.014 383.695 117.014 cv
cp
@
383.695 142.214 mo
401.695 142.214 li
402.686 142.214 403.495 141.405 403.495 140.414 cv
403.495 122.414 li
403.495 121.423 402.686 120.614 401.695 120.614 cv
383.695 120.614 li
382.704 120.614 381.894 121.423 381.894 122.414 cv
381.894 140.414 li
381.894 141.405 382.704 142.214 383.695 142.214 cv
cp
@
383.695 167.414 mo
401.695 167.414 li
402.686 167.414 403.495 166.606 403.495 165.614 cv
403.495 147.614 li
403.495 146.623 402.686 145.815 401.695 145.815 cv
383.695 145.815 li
382.704 145.815 381.894 146.623 381.894 147.614 cv
381.894 165.614 li
381.894 166.606 382.704 167.414 383.695 167.414 cv
cp
@
383.695 192.614 mo
401.695 192.614 li
402.686 192.614 403.495 191.806 403.495 190.815 cv
403.495 172.815 li
403.495 171.823 402.686 171.014 401.695 171.014 cv
383.695 171.014 li
382.704 171.014 381.894 171.823 381.894 172.815 cv
381.894 190.815 li
381.894 191.806 382.704 192.614 383.695 192.614 cv
cp
@
383.695 217.815 mo
401.695 217.815 li
402.686 217.815 403.495 217.005 403.495 216.014 cv
403.495 198.014 li
403.495 197.023 402.686 196.214 401.695 196.214 cv
383.695 196.214 li
382.704 196.214 381.894 197.023 381.894 198.014 cv
381.894 216.014 li
381.894 217.005 382.704 217.815 383.695 217.815 cv
cp
@
408.894 41.4141 mo
426.894 41.4141 li
427.887 41.4141 428.695 40.6055 428.695 39.6143 cv
428.695 21.6143 li
428.695 20.6231 427.887 19.814 426.894 19.814 cv
408.894 19.814 li
407.903 19.814 407.095 20.6231 407.095 21.6143 cv
407.095 39.6143 li
407.095 40.6055 407.903 41.4141 408.894 41.4141 cv
cp
@
408.894 66.6143 mo
426.894 66.6143 li
427.887 66.6143 428.695 65.8053 428.695 64.814 cv
428.695 46.814 li
428.695 45.8228 427.887 45.0142 426.894 45.0142 cv
408.894 45.0142 li
407.903 45.0142 407.095 45.8228 407.095 46.814 cv
407.095 64.814 li
407.095 65.8053 407.903 66.6143 408.894 66.6143 cv
cp
@
408.894 91.814 mo
426.894 91.814 li
427.887 91.814 428.695 91.0054 428.695 90.0142 cv
428.695 72.0142 li
428.695 71.023 427.887 70.2139 426.894 70.2139 cv
408.894 70.2139 li
407.903 70.2139 407.095 71.023 407.095 72.0142 cv
407.095 90.0142 li
407.095 91.0054 407.903 91.814 408.894 91.814 cv
cp
@
408.894 117.014 mo
426.894 117.014 li
427.887 117.014 428.695 116.206 428.695 115.214 cv
428.695 97.2139 li
428.695 96.2227 427.887 95.4141 426.894 95.4141 cv
408.894 95.4141 li
407.903 95.4141 407.095 96.2227 407.095 97.2139 cv
407.095 115.214 li
407.095 116.206 407.903 117.014 408.894 117.014 cv
cp
@
408.894 142.214 mo
426.894 142.214 li
427.887 142.214 428.695 141.405 428.695 140.414 cv
428.695 122.414 li
428.695 121.423 427.887 120.614 426.894 120.614 cv
408.894 120.614 li
407.903 120.614 407.095 121.423 407.095 122.414 cv
407.095 140.414 li
407.095 141.405 407.903 142.214 408.894 142.214 cv
cp
@
408.894 167.414 mo
426.894 167.414 li
427.887 167.414 428.695 166.606 428.695 165.614 cv
428.695 147.614 li
428.695 146.623 427.887 145.815 426.894 145.815 cv
408.894 145.815 li
407.903 145.815 407.095 146.623 407.095 147.614 cv
407.095 165.614 li
407.095 166.606 407.903 167.414 408.894 167.414 cv
cp
@
408.894 192.614 mo
426.894 192.614 li
427.887 192.614 428.695 191.806 428.695 190.815 cv
428.695 172.815 li
428.695 171.823 427.887 171.014 426.894 171.014 cv
408.894 171.014 li
407.903 171.014 407.095 171.823 407.095 172.815 cv
407.095 190.815 li
407.095 191.806 407.903 192.614 408.894 192.614 cv
cp
@
408.894 217.815 mo
426.894 217.815 li
427.887 217.815 428.695 217.005 428.695 216.014 cv
428.695 198.014 li
428.695 197.023 427.887 196.214 426.894 196.214 cv
408.894 196.214 li
407.903 196.214 407.095 197.023 407.095 198.014 cv
407.095 216.014 li
407.095 217.005 407.903 217.815 408.894 217.815 cv
cp
@
434.095 41.4141 mo
452.095 41.4141 li
453.086 41.4141 453.894 40.6055 453.894 39.6143 cv
453.894 21.6143 li
453.894 20.6231 453.086 19.814 452.095 19.814 cv
434.095 19.814 li
433.103 19.814 432.295 20.6231 432.295 21.6143 cv
432.295 39.6143 li
432.295 40.6055 433.103 41.4141 434.095 41.4141 cv
cp
@
434.095 66.6143 mo
452.095 66.6143 li
453.086 66.6143 453.894 65.8053 453.894 64.814 cv
453.894 46.814 li
453.894 45.8228 453.086 45.0142 452.095 45.0142 cv
434.095 45.0142 li
433.103 45.0142 432.295 45.8228 432.295 46.814 cv
432.295 64.814 li
432.295 65.8053 433.103 66.6143 434.095 66.6143 cv
cp
@
434.095 91.814 mo
452.095 91.814 li
453.086 91.814 453.894 91.0054 453.894 90.0142 cv
453.894 72.0142 li
453.894 71.023 453.086 70.2139 452.095 70.2139 cv
434.095 70.2139 li
433.103 70.2139 432.295 71.023 432.295 72.0142 cv
432.295 90.0142 li
432.295 91.0054 433.103 91.814 434.095 91.814 cv
cp
@
434.095 117.014 mo
452.095 117.014 li
453.086 117.014 453.894 116.206 453.894 115.214 cv
453.894 97.2139 li
453.894 96.2227 453.086 95.4141 452.095 95.4141 cv
434.095 95.4141 li
433.103 95.4141 432.295 96.2227 432.295 97.2139 cv
432.295 115.214 li
432.295 116.206 433.103 117.014 434.095 117.014 cv
cp
@
434.095 142.214 mo
452.095 142.214 li
453.086 142.214 453.894 141.405 453.894 140.414 cv
453.894 122.414 li
453.894 121.423 453.086 120.614 452.095 120.614 cv
434.095 120.614 li
433.103 120.614 432.295 121.423 432.295 122.414 cv
432.295 140.414 li
432.295 141.405 433.103 142.214 434.095 142.214 cv
cp
@
434.095 167.414 mo
452.095 167.414 li
453.086 167.414 453.894 166.606 453.894 165.614 cv
453.894 147.614 li
453.894 146.623 453.086 145.815 452.095 145.815 cv
434.095 145.815 li
433.103 145.815 432.295 146.623 432.295 147.614 cv
432.295 165.614 li
432.295 166.606 433.103 167.414 434.095 167.414 cv
cp
@
434.095 192.614 mo
452.095 192.614 li
453.086 192.614 453.894 191.806 453.894 190.815 cv
453.894 172.815 li
453.894 171.823 453.086 171.014 452.095 171.014 cv
434.095 171.014 li
433.103 171.014 432.295 171.823 432.295 172.815 cv
432.295 190.815 li
432.295 191.806 433.103 192.614 434.095 192.614 cv
cp
@
434.095 217.815 mo
452.095 217.815 li
453.086 217.815 453.894 217.005 453.894 216.014 cv
453.894 198.014 li
453.894 197.023 453.086 196.214 452.095 196.214 cv
434.095 196.214 li
433.103 196.214 432.295 197.023 432.295 198.014 cv
432.295 216.014 li
432.295 217.005 433.103 217.815 434.095 217.815 cv
cp
@
250.495 14.4141 mo
459.295 14.4141 li
459.295 223.214 li
250.495 223.214 li
250.495 14.4141 li
cp
@
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnduserdict /AI9_read_buffer 256 string putuserdict begin/ai9_skip_data{	mark	{		currentfile AI9_read_buffer { readline } stopped		{		}		{			not			{				exit			} if			(%AI9_PrivateDataEnd) eq			{				exit			} if		} ifelse	} loop	cleartomark} defenduserdict /ai9_skip_data get exec%AI9_PrivateDataBegin%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 17.0%%AI8_CreatorVersion: 23.0.1%%For: (Ponoko) ()%%Title: (wordclock_faceplate-and-pixelguard_ponoko.eps)%%CreationDate: 2/18/19 11:18 AM%%Canvassize: 16383%AI9_DataStream%Gb!Q;kBb!)e*+=CmK(cuDO?U64!?j3&4f+n/O8M([f-!(rCAPK)`Pp2p\iD*ZWXNON&2GIdu7hFVUgOQBXXA*epg,IGfY[EE$H5-%)2U%ZYZ_F@qKOB%iZgeK+@QEQ'FPHQp]FkW&.%2R7>;()#_!fd;'?:\`:3g-KS!PB+Y&FJ,RIjjf#,CG]\;!$ol.RuV:UV_]o*`V%J+m$akPbUsko6_G@\B'W/]P=Y^$P3I(u[j@6O`F[%^X-QE``gkFMo"=RE%^VJ^W>)T*%XR1OL2/'pmiMA%^]OmK4H%Z*g0!#r.'f%i*X^l807KjF>Cc5g'J\/R5_(lnPLB(B"L4^hp9lSY*24DY;aWg4l<LE!jIGG1dk1XM,E69pd(#?c0KVb=nMGuQB2-i(HDH<[0/j0%>'UFu7oElJU;D-l$_X<C)\*7IOC8b5Jb/tPP6:mu"u%8jL``iT:NR]Y0cU-10c%e-d?nN[SYZ">fft"3(eLGMqj2_05:jfrF#D^)%OYW$8/?ti!U[`q_`;Dg.kYF0Q5_:'WZ41.;oOPT>gpCB-+<;]H&<?icB"@s9Qp)[lDT8a/Fc5L\(XUJF^]?,r0PnZo!Up=?0I'>t%KF\nkieS:1rFKD)8.Z8l!6g,(#'ck7cR,tuK^2sKQ`"Jk';&[.%gs"0*l9?M">F4=:XIS*@.(Q)f^8i6m.]NT2]TW>l":#-U;#dp%kXBYP9!=S#6?_9k$F&.inE"+B@G`(i1N1(T%i][[bkGFT%9h(Y&>l/<]F"7GMZ\3hVq6\uEV6Xr30L'0?u0Y=L\iq<-?j"%%Xu51%VpW>^$f`bn*s)H#qlu-a5MJ.t_1BGM@jCj`r0$lus'PZTRILeidANVC:U@)d`f'LZ!1%K"%Bm5(YPPVgH%#ltT)A]HoDs54!+Ee8%^9%J]i0+Tm#6TTm,(ZoF5k%Ab;0fT2"2I%be,)A]o_aNL\6'^fn[#*@rJ_$2`dGE@:8Mp?VmetkHT>1]B"R0pkJAT(!.-V/N#R98%p1#*Vf,2@^65rkq@5g'XY1JRF=OF20%!%DsVm-,L#EB_oK2m$t5"t&lE=J_2JA>]Fo3[C@p_u4Ui8stS*9mH30q6Pgc#bk.6R24%%Lemg6Z=s@b>)ZOXh%:+no`Q1j./'(sBfBWo1U'[jKT^)>`h.[`r6)Et.Q5rJT@jS("NJGi[ND,TZsIXC%;9QOqjT=Hf_Lhm,JZPT%BJ#oanp8h$<g\:;/W]kfMt,*NIp/uS>VTTE&VK*Gk^`Y@Z0s`5r^qZ#2L5f2`XGsGA%i7aX;Xodm`1:R5'Tm_TY;Nd%cS<sJcCpB%$L24Q(rjE<*lJ,q$k8?C',8*S83@Fj#H0>$&k4T2&B)F6YhgdefCA7(!Bhq1p>=e$$%2LOO8]9ZM"00nd7'$>n@2a_0V'$ur2fU;%0Gsar']B#8GQE@jUX^VmXhOj*_jD<MD/eYm8W?o.K'e$rB?"h+#V_$ar=4haDueP!^r-J+TgHOA$\ShD,d:+tGa\hn+jC([)l30b%J6PYeM852F&r%ifD@3r8N5ePDCH)tpfiP8(K4+ZhpD<mn4B)=+op*"s1O\K:o_eW2^qB0kC^@#qVuLAD\"ChY?rbCaHn[V\=tWk6%[21B:H8[bLa$@:^@+-Aqp]'-$\-%+EX5Oc&EqFUq[_[t&,,!0M/c;sT)p0,pemVeMH@PSOh#e2n%01f6&NBZ`^Gt_"iU`U,]+kl'%Cbr4A441P;V:6C,(`+4A5o`-Xi(d5g12'TWf\5qh*TLnJ;X1Q,I#IZ:4s&r+)rL3]dspEA1"F\;Rb(\lYSc\7I*J)WhmC`TJ*:5(%Yj$Y)MrF/[_!>/Ws0ImThrDVqXq.WkW:PQ'd*%ILqRQZTq(M$Ursu/Pp[dQtYr;Rl08&(i2Z2GbMpGl0rqa.>:`f5cH=m!As0N%q%gVV;SeR,n4pHLej1(a0<@1%rEK]3,+BoVE(fk<V#1GZ,lIsB7pTT?rW?sLJN7DlXdkbdCnA?&/V+'\_W`s8D7C;!XccsXNl-:<(V%ZY-a"oF1-b2ua'D!@&C"lN99i1E28PEVf`LZ2\n^QK*CC"O*]Hq[pQI+6F.OT?tJ]K#[9db2H)21!Fm$F"eP7`c?Pd3PZZ5g3Ni'%P/?p3,;i&RqakDSjBTYs<adZj"?-$BqV_&p6%f:_Je\Ktok_$k_fRS:Q9po#EFiaoc(b74F!'h$0I'?@qn]j>O,VG,DQ[S=0M6fT%-`7d@`D%pek95^AGQhBONu,"c3fBTo:2R\6_'(LN1%t?Sqo,LO#e393'R0Ht)WSe]\E?"YR0HotXE)T^Hjb\uloQ]4kXKGf_f54'%-.NPrn;N`S6B?E3$fE9O;JqC3BtdXsh^aFWGSW'[G&+TDDB-HZ33t!sOdUT[6NNk.&odfgCaU+pDR8JM1WTs]d:VNN*t_!H\`o0N%I9ZDho-9kTMaePq1tMQ9r>=sbWX`RR=qBf^_]DWe/RW_8C"Tr[DoT/(2d7==9T2t!Ym8<LWnI#8CX$"mA-PgM^]i!VFFU^QoRR,`%rXHZf7UTd,S5tUN36=QC'Wf^Bh3e1OCj[9'[:f1fqLdI1[cb.4"-sC9"N\cQFFWsRJ(G7+4G#t\5O:Qr+SUTq^A_V9Dd]AAat/\t%$l?5ZkUZ:8rrN=oJ;N97&I`+cT3Xa;$"F5KMc)C-_FUmY%$M*G:`[%AX4_@tfUQZq_I_X2Z8RXbP.VVcZcenKe@ljb@/*@@YNq/J%/h^8%bm![I\/LA,b0B/+Kg0:1L[,\q`kcWPfR4)q6cK[g;-.m)4^K\FJ*i:X.msQ%OMa&'nQaY=l1hGU-3O'NR`uL^nT9LViWqLH%f%\/c4opr^)FF\jJT.1-N)93H_;q4*#CZ+%iE2XNEf9UZB!AXS],<+D)Z0M?j(Ck/\EI"l+Y!?5)aI7p\r<>]s's:F>`N)0+4&up%m'&=<ntWeZp5#5MPrhm,Oe6uq^h=%I]S_=Spj'NA*d&<pGm)bZSVW/P;*F8)5`r&Gjt'UXEZos%;X!R8T?HP/If]GT'3H(YD8AW!%l!d-7;Y^)'7aN:/F$32'330gJc]#XhkjQgO#rrR\l35DCg$S%sS9KYU'CDTZ=b(cqlW$7/2A1n,iAqN`Vgqs_2"65pA!1cNE)?5j%B/esV.ef-Hq_nE3;1f'>i=Mll3)V+-:Z3.idP<I0)`5,Uli;SAWM%t>Y4IC+B$4+[aZq8Qe5rNHYd5M&LU-s<=?pj]i"1UZ9BXV<%;'F@?[jhD,BR$SM)f8-.hD!+bL^E#!lq]C$<#oMP59)%PPD*UYAn[@YatqAN(<sM=A<h";(Us^mX\Q4*`ZRrR_5qE(r&q8C`J1K/%ip5!GL'(:U(n/?mH*k6CM.o^L&=L1DNWXLQ-f!OK-]>OQ@_o*t(AKIh(%>71/->p!bXDMMr7ShCCO-L;BlXH3amNkjPdI)b__jRq%O3RbDrK[%^o_N5c2cfn%gN9k@5Hk(e*UN15'.13=WSVI?hbR$b(n-_@^>[nq@ReYrb17J-3AIl7HCR,lk[gmI-WAn^>;<!;FJ<?:%2i<0QK^'`fe]#r5'K:V]i-CfUO+ZDq8QEaE?lGi7A!,mnMn7!73&u-:(g5,LB9RCr.A:a7SIn73@&=GaE"so9JI01Y:bb$g(kuB8%r_r12s19?IJ7#fGZc8f#kV44KD@E5dl7I5Ofk(6(2&B&PZl(Z"rP_)A+?OAjT8\?!45m/\DOa:J_)o;]?YOY7s2es_N,sq$&!tiL%R&+FX)*Zb)o*jAcZCLg-RNIUA5<lm"D@C&B$@^e[;ff:=II)Ej8fJ%[8?YhZ%TY@kgC3>/%kbsmJ)gDnWuX@n9pO*8QTj9"?gjn&%>+*$TQG_hAEtsc:lOR)`dl%)bXuYA+(E?R9Run'5"mnAY,/B;X\SgWT:WE$!(kk))%i^P]W1ITcQ2m=TdE-FgJ;_Q#Jq=uY`-q7g%AM\qZ(P8oFjQ7LMT#&hXhZ@IiI4b3Y>R)2TG-D[J7%H0-!M#%B'c%59l@!,#?M)J\43N#I6P6PARnAn`X$V+\;oaiU3/M8T;ad<F%-J4";[$nK-,&\hA(`N=g[-t2!l]W5OmiKr62r/X>irLV0'4>>jr,'[)^hTUo0u3m\3)H6n/c>QS)o9k^<X.$rnHrH"ger7\lM6[L%Qq^L]R%h7':M-*T9O=iNAd]>)TH!4A:9,<uLXf3'`ot3@nd=r,_sKMS0m"_P#omDV[!-8b,_1X8'ptd[N6CON*De'hA-T'40QtfB%(8qXQ[IT)J=F[9j$`;<j-&lW1\(N<eJ#g'3cPAio;oLrQ%;,KKJ"te`;8OOFe'u96?*h=]G@j:93)e.A5j.mJ]c&O[c#tdD>GDX;%[-/Wr`nFjV!k09VI9OnZJaI,:-9To0LBh@d-Ys9',P4M0;Nt'qb>aKg)sjB`'Y=B_cP\G8e42_Amq.cKE(<J=\[q&?)iO>[rQ)*t%T@MdW>+F*@%Z'C;B)uo6TCpTudP2q309q(U%YL</bbj1;,Dc]:l.LVRr%VNVkffT90S:.ParKktX7<!8gAFub"?fjpb3i6*/CP*1%JsG%H%&NZN![Q^U6'Zdp\?`,[_^aeI.g9So%$%!1%%/TD-(:,&R$fY:>g%u2,p=qjiCKiMdWrK(SgXT"f1o!Z=M6#"'NB3*#O3"+%$HhU8cqno'j%N;\<Rs?I!$g<J;,fm-L]n63LCM-fInjYRYn"*c/IXIk8TgM(]_%Gu:'a`hPd-*@3kIEgX3g4a+Y8;k`QiXis,"PI%erG]nE>Z)()9"")6b)q7Lad>G,XE_U)H9TDL5DCU0G,-nSrhp/c(u=oKGmX5(]MpCO#/+$l!c@]aGch`LG'5BaWA=,;Q>Lo@PK(e%Y84tc\\=>hVA_\FjtcI'5nNl%7;QM.Sqp>ZqsZ02r:s-eg,ViJ[X<AlcThFPM"<]\+>1845o_27_&<ZFZdjP#rr=SUStKGJ)#.L4%iRc[lYWH!<&(VQd`tZ[o'&u+'+57LD%jY?7XV6)dgR57umpWI(^HO>Y;afgm%_l&t`injK#lH_o^*Z3#`!1U.Qltb9A>o5!"$S`?%nE[-kR^`0W*q7hd)k#u:lb#Q7:S%pkFZ)D;^&$\hVPA^$YO:4t%pk3?RnJh,/c==U?bP.]f[^'foYI/=+GESr2"QtM9,R;[$7o!A%F6T<7oH3@hg.\i*=4EI]bT)d0U)\@h.DN?XI,44l\STEB"'RdtfmtI?Onl6uXI5sgn\pTK+XUX%1;nAac,^UF'T$HbA,1qRh^tr/%cTejtKhbHDBf;Yk]q'@0Mg/2"kq_D`kJL\]J!ha?PLo`k-I4Q!B-.K;>%g/>ZO,(5h.%LX?\?BF0MMAm(O/'7nSLu43'5Y3GZ1]9%H5gD)-2#]BLPX96&'Lk3n+C4>'XspEIPV<-j7#dO?g^U(*mNEiD-&po8U[N!Oc_#rmEAH0<]WOK!^;6U"iDG8k1es;4ZVREF2]Ut%4UkW[=gS`[B:m@L@N-Bnh:ZhO64oO$n=P4.o?n<3NpZ'R8"ip3P&,@UX7U3`g)I-0j_)f()=QS$m/'R2Q&&CgkPhA$2]5kL?qj42%Sf`j%68^hi4br)sa8?$Oo%0H'L0m,"`DP$#Ybi1m"d)skXFjp-^\]1;oWX.^kM\$u*i>8:^g(1n)[Bp=:1`sfHkN3fmR5bm8;=c@%;s)-t8Rt`FcS=[KZ?,gP_o)KsAgc_0beP)b9V]HXJn3_/^pA,$6/n_(m&,]0/#TF`6Ca>7(3)d[/r%E7Gm,e0($k)#Ds!R"*CBe"%hRj5?@cs87i%$JAD8_0rCu#A+p1,Y/"a:IgCCi%&>I5:K]Pik(H,L;%Hm$^N@u\!i*die@`KW\OXfiN"rQP6b^4Fmmpa<BrJhCgl%#dt,$&]22i+N0sF+T^>-$)'KD0-lAHBI&ge-BN2,/0L'%nqB17LL>juW9l0m`+#Pm&oU2d87I:`O]98a6.-k;*g3qY(*lu9-BNh%%o8+0^)`.'G4X?/1hqCFIEOQU\fr-+c1.]]P7e)m7RV9<iZjshtUqQJ4OnW1($F"odRmH-$AatV)^BQgATN,nQU\;]Zr/>)rA@h3t%OgtoQ+Nm;gMl`tn4L-!AD3;L:0:7i1s'RU#;U6[ob%rjoVX:8&SW9Hln':cH6D+,c-3AO#)Q]gODkpnN<U:4E6Y,k(MV7lfV?G`.%RaTZ2_j(%E,#-$oEFC>H(947ska=9X(G@:;F5M:$F\i)$1V#3-H4?Z_)CtpOT8+V.RPb+rV0UNID/,ag^p:F..C6!>>Keu\4uGE7%K/^-G5o%T\d0Z3C2Ss;@/c.X$j7gHP3Dog)2eOV:Wk$JAF6<&J4DM$I^6%L/hl,/^0g"dbDKoYHpM5324J"Bqk$S&Nf3gJ>lKP9n%B1kuNVJ?%L@eZZG(ACmZC-`r5IOtSr\[7#SHWs/0BnKO9)9ctI&4s(eg&2\je31FBjinU`><`"fR\_)\Ioq/kT;IqMp[2GBm.3Ck%no0C'XB&Q;;RX.Ip.m2>l*%2<53]L><bsL+$N4[@o@'&*p%^'%Zo3NMKXG=D\#j"qq:7V'SPdtqhKR5Uq&(f%aJ_ngm.8V_c"C6u%Ch1ob@#NO=%pNM/F;V*f4Onb`4h'T)gT/R4[Cs?9#IZfW,AiWai5<"G]_Q@KYOg"VgV%n"hQah4-X0lKrSckse"1khPP/In0s]Cp%@r_D#bd"F&*N%0V+0+A00?_>+I6UNGJc)jpU56_]'5fn10GSRqIm\QQ2YYRA49MSHG[31CNmH&NcnR"eb)SmtV&]B^PK@N7NJC8Y%g0Jb(bN5*IrjD>Xo@qL7=nBm.c?:Z8k58O1:X3,0'ju$!(SQB&Rb>8X521kG7<LCj=1gfD>m8)#G.lPZI91&Erc/G`rD2$mf)9RT%f=_^(dlH[(n^+l1IOLQfm`[Wdj0!V^$hrCsRs+O#40/8Q3TP8M:%b0ql>cI?.1`"#<]lH"onOp,bKW0"iQgfSFDHPBpe>9^bJF,$%CKeEs]j>Kum0uOt8T1o?IIfWSIb*@Vi03YZJ%e'mkJ$fBH^MI@5'Q;Pfgj^"$X[AS!Ea_F/]X?a<IV=MqG5@fDc'[ir2(+skkEZo%"+Oup%f"M._O&"Ufb=AZB'IJL(bst+f"M?e_i]=7M5GQY`WQ/Z>2%TPBPWcV6O,84!*oW<R'l-+)lslWEVcqR_`>\nIInCmY(J\l%^s["7<N*<ElZST4nYk9'a4AoIrfmEIi,+f6O,q;?+MKFsm=[:E=:l83r$KjCmj:m>VFj68Ce52Qj[k7b]i@p^Q1XOoDDM&*[#q2F%gI/JUQ9@7r=E`bcYj;GZ\SE8m^BI>_Hoc*R2#UEe@-F/SJZZs-Ug1'%S-i]^"Y,l02lP>SUIPb/NWlg"GAKRs-V4KZc;>)8Zi&ER%44oGLoAGF2]7RX,e1K"s\'SWYYR*Ih;e5)Tp.u(?SeAeHF#AN(naTO0S?fO\iKrp'1&O2CJFst0oL)rjc:]FG1Ef"q`Uf5;Ge/aU%?DABjotg4+=?ho3I-r/AZ0r`?1YqW>kcJBFf_<e&8(:rW4=8LkZcCdA=FBIj5+RbhTD.fQ2r7+rA$1qM>3Sh<d9b#e']"uT7*LjE%U1;TpTGspo\VdZKq_OW<fOhRs`P(.#4<CQMh0='@Y/U8u:F8hTqVd+BReJ1m6,K4,335Y[[%)&taB*SW,l/UhA9QIj,i9qe5KR8Z%J"!Z-c@8dOQbtTOZpEs+="8,`D<R\J?qpMJ/g?k)bHZ/!^FuF5#5M<>dQWUF_.mPJ.91f19_WCmb\Y"c)d0p-2Tqsa/n_WgM'TD`%f<UUH^]!S@&,p9&<uK>R\NtAQb9IU31`u4A^@F^*"^oGrXi'?"f'T7@B_X#^aOKF!TfpZ?$;8u[;Y7Uc`JR6bo=*BM(oE5+iB1Cd%*q2cN2E&0?NRqmR1i84^:QF_\mOA#3eTq;R;]*U!ftQeYd@G<bLSkR3El4JjQ)CaFhe+<k[%:d6<;QEu3Q%J=;\)F<*LoeR8LjU7%GmfuiQ0%%=VWrNR4]F4E-slj+*B_khG&FMBe%W@nN.2m`^&?R^"mQ"+?:)31l(o;A=:NiJ+#i;_48^tC*[cDhoiB-UY:hEN;St`-%2&ggjIF.bh3]F6ul-oSLHAt/'efp.>lX^#OBY&pMF#3LZ'PY9?&hcuUojQ\aHpt<ko/-0rqQXU]hjgYMBs>;t-U5kbpQ3qt7fUE4%D5tt]D-,PRL\>9X4RBSm/\t2ZgDk=H+*cuil-Fh8,L^]2rRDQa^Fuq=nd"lpF+$._PHU%pf-'eON"1urZuu*Aq)R*G\k(Fc1K_7"%Q,oWQHtehWldnSpMsOC)Y:B,Bo/-oeRQY#aRI(_0=Kj`#:Yjo'Z?Z.>YH[isf>i?m[hK(>rHP(0epgKF)Z<%.p+glkf4orhW)Xe`%Y!IIQWpEpol`dY35)/C$@Xgdk-GQ=B+\If]XUjT^/>7W7/c)%W0@CC(+/5t[r`%e/LS+B<Js[*/;4LT)[b_.s`5n0f=ZoGoraflV%R+(\dr,b-H?CI";fr@pSf&n\d)]!oBTC1h0Al=T5_m[NthT@*roA/l4^Ndu:KGL*\2I;j+bLeT?fN9c@n6B[=GD,@aX<%1C%K0s^%m0WX_lV`:Y>>GL/`sn&0c'qn3pUs_AOcmPl%=Q7ugUCYL6mIA'9IG5D(>X$8o/ilC-i?36UUMl9Y@a.GRUb!+cXgWmi&og;_4:pC%Il666+k72JfcMprEl#)<i/a8TFQnk)QroFJ;H3"dZuHC7IiK13J+hK=;&dtKj0Pi.Z_X>[qTm#pFIi`dkl3Ad4tQE6c!m1WB-L`@%^fLAf`5?j%_WfDdnL5l*\ErH.E/=ERK-*8n5*6:3\7:*YTKD!Kpeeg'g$=YopB:DIPE.@/iqVNppka:d5f@%(WQ\-t5;/Did=13_%mDP$'EHecb9bAaMLa$0?]ag!DGAR6a*1Q[VigJ*-X7%.gGT7n:`:Md0+C=[X8,^hqK0^SEd`rYLL[Ug#k;%*6?N#lr.<sk6410Hc%oR>uS_)DE9S_g)phDfAVdQf#dP+GCEP^!Q(@\L[!RkM7"-X0aMo,Z)gk;ofWBJMWe>fko]_a7HX)]G@d4#iZUU"<73]HM2!E=[I,%33!O;Q:3pL;#kU]jpT,<:X.hESALt^SiZ-a)tbFfG2V.X^9%cq't2n:ZOuSd/6Pp;?%r6qrNNp:h8fR!m<MO^"Ep".m!k*\U)Z5(%@sQ"9,-&u($fqgur6Y6\J-YlRnBsB9+kVQUS*i<nc`j1=mK$4<hn%]:'-;.ET4&-WWrf*Q-C$S7"br6YD;^,8dn30Gl0``P<'Zln%;"_O=QU;*lIi!FKPf?lL_q*mR*pKHA[^02h)`a_diS/!b$nV'I"t;Ve!jlVNNB\m8V9G7P_bXAU.G=MbF0DPZ3MZlFcBR'OXOZ!F%?#H`WhRkHk,.3c[jKfJES+PkT00uC/^r^3l2SB^R^toQM8?U9N2.DD^88EC\A5:7u@",p7"cI/X4X#N[nmU.H]<)+Oo?MEQO^=\@%ReUHVIX,9NMF`C!T8&n&$=!We=tm!bM=)SUSNP==0HAfqZ:>Dhc5u:ZE_(b.j51$;d(RWGN>9`R#L.tMMC_Y(DA'>+QZuL?.@TRG%EstqpPGMccbguUT3N[tAO6/U_/U=.;1he$nJfP.q:6*_KZR=%X[GuC#(/;G.7R(%Og!=q=K_53T/I/s+7-Zg#=r=H2Q"mN)[)%`D%XQ>N;^&h3T*1W(1?V3jFkd.</Q66?5=L?%a,k4N/lEWr"%sC8Ol-m..TF+4S]P+)'1]]/5@sohc.j+4TLFgl>I5Okig6fTndeAD/%@c>\rdFQe/;''G>YVpQZa/D,K:!'2e[+3?hp5Ijp*GZC<Ma(e6OZpgk]s!c?<u,MZ3\O*e10?NC^R`.gVh"CqKQ_PIY<:7Umq,]3%LBq%Y]qQ=aAAth%eqP,@5h]qHg"EYVM_nE'RZKqhRfu>->6ZP'@OJ-skQQ;QdK/<k//m\u\aO!hiqAb7+<G57rH:Vm&?4hde+A*u%#-/1`oj.[Q-nQ0f]<s65+l12pP*$qRd5tL,W=DrC$UPB;CW6pAeAi[8@hD>0U6cs;H7qPk,>/`/1la_E77[MZc\ANK1IqgF,lJuX%C4VP_5?L4YW-#+_EkLQ1[tI<6Dr<R;ifHW9HkQ"=f&Q4#<kXLi4\B0h":@lXf/dqu06u;t_3Q[L[o6se*TZ'tOroM:N(r9_?k.#@%[$?"83t=m>;B`-^pNnh08`-\JVRF=@pc_e17QqREL2^5m>P[Zns(+F.Pu*Dp-ZRo<;"<.KpF;1R^E$:'*ou05'VilPdr8,[piWNC%.m,_6m+WWZ2CsF8FO)"W\[RqT,(2O$2-)iYADXdNDViO#H2D1op^uVsT:&7Bo_+5Qhq#!(7If!Eqq@p?pibN2;_N003JoEO\_*7s%YJG0b*Wh4;9/mf)/&!%,#*#oD`GC@4put\(RnZ'W`en\-Ghds$;_3d`(2$%of7=!lNOnm>7iW&&\*hk7?(?82p,u#LA`<;Dmn1a9%B@a0-''IMJ\[V,'6rj!t\7Pfg0^X"ZTabN38=uD.Tkft["]S__HuFS-D]8/3_B%S1rk?66556[aGV\qKr::+\?.]4\ER#G4,n,R4%?Vg34P;_CnB[+_7"3`7E&2>sAQ[!5d3]k,7'<EP\F(f+iDIiVEAMS4K!61YO,<iG`(*,AcCboXr]AjV4CEZUM,<gBM5Y@Hhc->68%W:s)$Tt5YR6jco?0;aO>c2CT[E_*b6!YsioDQFE68;NLH=9M/^PuL,$FC__G:Io]ll*r@mqh0X<Z)qU5_'@2X6qEjh7APIH;-XS[%B8n^]_f;c2KYYrYpejB2kphbDPhV<E]e:EWj#\Y5KtbH(*pFp/P=*Lf@LUtr?'2p]7A>SPg*<eq3?<m#oZS\#p49K6INL/l>I*Y1%%a1,L43G57b-n?;$)>j&0]i(iP8>Z%k0Ki-&<T"*gi(52*:3dd5Bib<i<%*K88p?[oL&Z&*:]Qu`&<Y'/*H1RnL?fRfZ*`s&]B_Q%J69<hq.9C6$g0`05]$,"&2V.LI"DjHZ<$CSkBY;q?jp]i_5TA$B[I:D6kh([KO2ec*G;Io5BX5D_1fP%a6"7q,qg8+G:Cg]\QK#A%D:"\4\9R;C2SUM6pVQ^H2?=+1PXe@IX-NJ_=n5:f9Cm+"Y"JsLf;[WC%TrJYKA5F"nJ&6j"=b:`j5!)fksTW=P/BLhf?#lh;j*.P%`W-Pjj(&(%c<nJ"Y\MLWq)CR)iqT2*gJj\-k_\Vp5ra@0$&<7.MZX-bMfW9n/+oC\!iCb++1t+WIkta!5I]p"2s@/%0TFqm>WLfO%%u>q;hSZ0?M'Wp#cBIJNoKMKb=&qGk`3lq6r@HA`!WmVZ-SAk6)^B_EB_RcTP#n>9Sud_G_pOL*oU^,@a"(J]6Er,W.[aD1m*IeV%<I(*o985pS>HcB<KSK)]J$Qn>f+kl[EU+Lm\E:,;Z[^!]=U%N7IIhu^/(bX0iOB04''@q_"5Ra*'W0!Y_>4po6&Pg[a9&VcKL$=Z%j.EL1;4_ulSBM+hjCsQE5TSl=qLFFSSa0PBpN(AUNeo/j]'fElp-EgJc'YDcH/P;*DCjR\_\lqaalpf0.8D9USa[/Wc;P;OS2^:)%J41XcKts]Aa%cqe#0*spbP!HP+7/%m#rig8:S?`rdskt`WD&0GHqHkR73-$F.LI8CSt:^\M?\X+`H]mtUA4uDbf=$i0hLP0Bm0*0%+pG4T.oB!OXf#$&/>o=ZahY4M8b&g&C*,)XFK&I,HDAh5@I/U5Pd3l)S2ssI(UckNr\MGYh<#Nuhb)^tA*4Bt@X;W??X)C($j)Cs%JMgL&i[g3Q@HH,N^cLaUb[hL;Yj3p:=HC08`Inlk$Ar[gM$QEDb]2IZUd@VN`@eEU$^\ATFTjdkC/5GTNfEt:grE-5>Eu2]etU&Z%Ao7OY>HjSI6_-41<7X\_\_\1)GcG8Zh+4*hm\lEdAb*s?O>dUVg-S*#,7k7HMLH@;\K`S%^gP\c'<uD"=[uT[U7f3d-(^f76#04&%0Qd7:@?m$0-Kc>RS!p5tGPqXVn*UBD5r]g2.RK0AW^]OT#hW+/1YMk&:esnT+?\TQi%e<NF'3#^NskkojXut/r-dB&TY%[J`*!4*%VChk+QO!TUpdG*F(npnKU<Aa*A1>Ub(CA\Cg%)mH\0:XE@seK]jpYkq=LPibl]5\KqrF9f#Io7Ugl5EK$X>T5To3#.93dSs(ethY%9>&1L96fk@0Cb3IM9@qoU?Ib,KEQ7rl./s'knK:Dm9,8BUYDbMQGiL/@Y@,`PZ8WjrKa.^P.q.+)P/hb@C>So*%N&JC7,Y!9$I>@%dq-<">PuVE#roJ;VH'gUq^bBZA%3a,Mi8G#,`Gd*:Eg-r5;-qZ6L%B.W$;iWU.BphPYN4Nr%Xm"%JW1a0N$ShIQEnF9'\nNm342a%p"l4g+<S'l;M7HN)741#KSCCUf?9@W&RI=OVrH&3<h3.Ql-*#=JBq#]]QoZT^8hHkLfL$UXA;gr`1,>njT7]3"jIXV-OnO3A]k//%*#5"o-gS*MiF\?\R(WMj"eI_#*oFBk/e*-edhD964[/[=[i<aIaQp2R@uURupPQFH;!1L?;OIq0NK-^?$)`Zee+n8f<-ijNSq1p&%,Pg\d/)eRN5WL6o"fh^fL7O28']AFeXSEQ]M>%5iXUADr'sO4Dit0t7BdUf!ETM/OU,q=@BdRuqEciVm=$g<)n%q4O78j,F>qcb`%5YQlKDH2P%RleqAg2?=:B]s?I&e,C!Z.53XD/6<1]LAPd,4GTbh'?1q,gid(P[Ia"Y=);pqdA:K+OQS0(Pg#5Kqg9J%/Sr<^A#dc%;:uKNU`@F'*5Cj_&Pne4K4ah>"e.i1X[@@aKhM'tZOh].Eu#^Mcbpd,=6Ei)9lOB)#[1ie)OEBcdpS_JeKpu.+U`NGqq4;R[d*[;%F\Kr)Y<&5oG3_b->!+HWhBZf0f*DNc7:b$Y,Dqi(;,)V'5Z,['@GmZfeCX=>icnP\iDhbWV81R^=`X=JC>'5XcRm\%i0dYpjV[W*%_nN*&Rj)g6a4GdPO+#?+''hkQ*n-knht4M2#-/Z#Hu:UHn'C&8Qo0NhG&7NDW9Zcu>)\$-e%So4@LScrm<]+-:)=uMrQDS,k>lF;%T'8R"Ei#cFHfmK0nC]*ZJ8eg/[:."I1Crf9L*8d--;1I2X%\A3PR=jLE"05:f!a4$f"\fN(Kn?9]I9rN[]\/_.CM6ol!!*#c6\iL%TA1ntb#20BCB-M%IXN30*U.,rV3<.b(RJ5U_(<"$c[2OVdQZbF?f\$AWV5PKS3*_uF%tFCj]qlMnQiB3Qjf5VA_TOZg:K:ip22!$%K9`Z'4I,BN`+`RT=$0W"Da6FO4[#)p$VJf:m\hJiME!q(QZ1'<pk=R.m(tpMZWQ.2-0n\Rf03+d\!nMseOtrd7)bW@^0p&-<c8H'%EB7Y]ka59MmSH9K?9r5.hPZ+r%&p1WNg5p>f?gKud(sJ5HdpEICJCd[Nq4f>Y+\dtT]<$UDm#dt7=)&.PH,J3VM7jZJrW(-j45,0%oa89/mFuJ8FQsT_:laA,L/'4m`;.dNqj!N"d%.3m@6-.W+]56BWnDGs*jj:,;m$4S=O`O?7%I6?P$7jLJMRaX<D;LtW_$"/+XZGK%@Rb,4C=5\qqYeL*F?Q7sE$_&#+f=l'G*Y`)m4u<ZQ\]']o$!g1LO(BdZc<<on:&E[qs]eS*gY<*dE)V(hM]B$fRGn7Fq[BKP_cKu%-,3u'j;Ob6?.+U8WHCh<BT<=k>r'IiQo;ioV0UT-8,X9#gp>V%%&0=#U)5_Q7XB31NO+tLK#lH!G.ct,Mqqo!+g3D>]-J+ZYpRl)%\Kt3tXAAGgf_cNs7QD2Oi.`(jpdSE*$8%f4bsn3ln;X"-faRAP(8'oVao1#VDQit[%LC_j8j8to;3>SMoIR+*<"GKRZ`iHE"(J7r%Aa9VlnR4dk,KJr?N?h1!IbhY83=L7tSs%d'<<jkM!`LqeY,LABBPF7MlM(SKoe0oScq:i*c(pL)YN%SL;4".lV(O%s2-.9qRP]'C%0?>=Sji%g*)08XKr6_DJVP7pQ!AH)I,KlV+Wt1RuM2YWQ`4M`TR$OM@IupStl5_:M?7'tA`O(Xld%Hc%H7%21Gf?XW"i]aE]s]J!%RfK4t3Z#E0N`WEM4.\j6!Ffrpkef@YKu$"2Ebem@2dX"`ZSs=h"1rSdh&MtK71`Y^i=(6)_Ft=%LSG,fqLV$oC!DJ-%/!H1*fnb'%LF$haK+(BEP]PfJr(:O@BU-T[mE*H%r*VdYlWb,5:eBc00P:aE,rJ_kr?Z?YEi"hMmV88n;1><I*[d+3a"rM4C>*iX7=BWI4][5G%\^QH9/P9'VS3<a1:--9S&juOI58dL^q<u3&-`?H9>HP)-10qb>F@hQSXB'mq;+*m]_N)8BSM]Y=eN,":aS=%*1<Yhi6q2aJ'I#</%.jHfY$%kBDmLt^+/.nLK:[CD<7&G'e$mG\gEJK^nHu40#GtMJi[3IF24_8:c7qCOqFa-R9K.ndo3G15<C<8*485HnZFJb;l)Hfsn%)LpS<@Uo4*Wt&.S=;IJr6,]71o8UtuH'/R"Lbi%QH7_D(kUIT9L3-BO1)O35EV%NoF'#U>YM`5Z5,K<*3Xs0'>uu7A\RCsTR!!I9%g8r^Z+mRa,]!;Pa@;[M7'm`GIW^0J+i]:eJ?;7YbHK8W3<."5qb'LS@cg/3?*_p].l)s\u&Bh2pW7po`3pS>7XG8mg=bnQeY-&gC%W/&!h,5'*)3;I=*He6/L9?V\3_]>knlUs*WeALN7LZG=Y315'f*P:`F%jsQ7SZa'FH!?')A%TF[*i_04RmX+0C8I"<"EnQUj@SpO%f",lG[48lr3GP2T=K.\hl15%7X/aPb31a@!k-QD)6)@=])pV_=\R7%BU>L@G=esCcK>huU!O59RStY9-Ot8rN*n-J^S]e76kWt,&%T[KoQ\oNj4-DCcsh((@nZXFX.D:U\B[N9?a_\u>.jYUAR=tl^KLo"b[!%?"58,([Wku3&Kjh27.Y\EbTJM51DQ5g2^J+he(8'EqU%k:nMiH7![2Aa78,j\iqiT5F_1ag$bb(07J,m@/F-AY`C,V"RLbfmpnM'rc-GWC[!ChP2806FfTT.]aGu7n"n\F*g>*KHdNh<B:=f%]70)5beFo>/3mpKR:[^NL0g9ZfN+&Kl-HfOV%c["Mqu,^:2sV.=pfI7#@<JOIVgO(4N6_o$E)@V]Wi0rTY".3Peru&6sNk%Vf!=Y%C9'F2Rk'hr#bRD.84[qo0!D=>Fc.M,2?p4B4W=Z#f1B7?3J!o'RK9X^_NR<DM2iERhFl;R>[U1VoUN*sk4U;?eAG[l[Y:J`3O#Dq%FjA;/^,-'p(]g)2GK+phF%Ef$?nTNZ<N#X]X5D*f7u(n5Ce9$9?=UBZ_S<RXF0G+ALUk\mo:DclaTD-=8uI'SF?8N5JsR$*2S:fN%/u14(0'4F^`_rctHUL&^Df,rr6u(_;U:AkC@9@pnL7\W?"&kQZ&QpV!]<tWgluo8]a=gd@P%(oPP]DHu]MuMHK_/KV_Ck9d$]n!L%1Q/be8#4RB2gEmFnQ&"c!>p/*T0oa5%J)"mF[&&@Pq),KZ[#1a4r#U73Zi*ZB1oW>]CkKj*)cc"^@HM0;Q?r?X47is[$?bc.j'%f%0.&!LAOS`RP`WVLYnC0A*.$`\a6+&&fp?XQTF2t>=]TGGZ#KAr27=g/3m3bH.EX=!ggM@+VeTkD,m;o03fj5`YKkSWCUUWscA"W/%*K@3hg]^Og[<o!`lCHAZ-1Q!CRQ4Fch]sR^rNa$*Si=d5.7A>$=l[kO]l[.GOh<4e-DTV@&WqXDHLKURQcR:"@TZQ>_d(@iR[9"!%)s2O$ZCTFRCI#!p!kk5:1mq7<99RBd%I5<)f!pIuPjBm$J@JB4SQl]%]*YrJe&g.gS_]]SF#BLn^l,sco7#53Ej^##:7f+sRSJ.C%nt+BR9%*:EeT<`=X`[^oaZ1FuS:"g(S]F@[C?`ZPruT^4Ej^"0''?W;3]Xt.E;+*.\QZT)hWs!tkr?RW<(k8EgYT-&:9KoN'Sj5#%24`Oh1/[AL<n#1ZMVbt6:9I4o6%A<$9d_lLZ6pUK<)"`A9;cYV>uOHF#Kh!/0^WU9SNFJC<msW+6&r\r`RJbA$RqsJRSH)dDQ0Ls%X/0<MhsOWA-W`qgIoG2UeT>g3c>,meXelbnjg\Nh<&8QC24^9)Clf]/G&oO3>V2Md]qSS-e&fjrar0#:<mqA1bLb2,o.(QtTsOYd%H0>.[C-&m+8^FcYW1$K:,o$Y]V'8q+!6XZ<rYG/Jh5'!U't(3De5qP3.+[3k[2-B9r*&jFa]fSU^9:<+]a:/%e`j2=gUlk44P4H6%PhE)V(?[(1W*JF2/l9'b9>&NQkGgSVjdkR9cmi*(CX>Z%!g&pmVU?pT</Sl1"P8QXr)6@$MER[n<n^,3jb+qmOm)c8r$+@5YY2.0%;jPP%],_<o/4h:6FZuPb20ZWA(H5W@G?ce9(Z"=.;c:3hm]ucOCTk:4S.ZrodG8AB2jnILZu;C085m%^RQFhWWa9cph)s-"k"bBU%E1<bp,BH8cM-7gojluue-QSI@#+\6Xk380oI#aE,i1eMd$gA?]%kl#3Ad[e*.k6]]EE[:`J:3SRiOHNM%GjeqEP-'=>Yu-%dN,<;%3kC2Vo[OU04D)#p.uN8YWTo>K](ULA[ADB&\["Io,9-Q4Ca]9W="^e]Ca]9W:I_g>IQ8YKmS`k*koGsX*g=IO\Yb[D_PoY/BrMc+%EY?nkpE\VUU.P?U`4Hf92P`nXbe4=Be\+]]KV2lB4.5q;4V]?;[sE^qpneA:be7)KU_GkQ1+'pgEohD6Hh=NXn+s?kUt&7bW(`>F%HRs6@K'lM@!3E8.'lh&!L>Z'+a!S(B%=UhErO0j=]nHm[G76bs\)*P]U"n[m!;8H62'`*bSZWDl]F6I(Pj\I@7+G1iM[LEXh!Brc%@I$,#:iaJ0p%=T:gi1;B;-o!$\`&S)ZV\BrmZM.[I)FcoQ&f"t'?T$oGPa-X]A`14S+83$V,_HV;dP1phJgNlrhFj=\-=X$on:0k%G?S-.3X]`\eC0oZb-B:[/S<:2mG$G(CHo;V>6(h=I80Gfl0=OpcZc<\#>ffWk?K`\1jg^(?8smS:V=%s9<Ph:^7Dqi:G#*,o(r'9%_fN6p,7\F!Z:nSsY%?8"W/+#'$7Dt^qbf6tFVcbQD_R,0Pck>(BY+S&P"'N<.&Q`PEsPIcW`5!_MCH!^EHI^'^TsuNN(L.-WCJK(%=U*&\26Q>iMjTmcC1Yjjk.!gV<9cff;!C0X[.!]N4._]+hREC4\98R1Cl\4VrYjD6j[W5uT6&PncZP<H9mLr_ED??.MAnMZlPVCQ%)V;;P$q619ldGSH7'KU6\F,K;!5W@t#N8eGLqoL/Yi;brIEg!@FNRs:bF$>H7OIP@]LLN1D@1d6f@\fkp1J8rgLI)hX*C#IY)m,j%B2KOQ-!hB3("L4hbcOW7(oe5+_\PgnF<pNuK"<5h1-GF&*PiGPU,g`"<;B%P/]#$)/+d/e"^@VA"c&u1L/:@.2nq9t8/]OqhnrJ7%pa/W-YW5]UdqSpFHFTM/BVPaAeqBjAdHQI://1_*S>nNnoqdq'9SVhp^e^"K"f.C98ld_)9(d-d'r6*_-!DtMMsaoqmg;TQ"]9!1%'PUj)Pg-g"o']LM)/2"`b_]u_!oJ<aT=>NXK.H5RZstP.hNCF)3Zt0SY"2G\4$^'lHCm@"8MKE>.Eu$UDV)t.cErK+,WHZ8BAt0Z%C;;:T%Edm/S()G9=]E)Akq#.F;uOVfr0[pkX-C5\QHa1YSD9jJZtX`00"JV(Eu*-QQWb\>,mEtQc:gb<3]/`,d.CD9kt%r)>Eu(J%UT'$@GYl7/09)K.Xf=IR=^&INU!fpH4KZf=`)La1eedF^WHCcr8pnU(=fZ(IEP7LFBgO#HZC`k<=BoEUN\PV3.tCpTZ!jS.=/IC:%0>@=_j4-\SO`Q!e,g7:Gb?rqdSUYd0m%OUBPiH9,HYci7AXUWFl5<"$.Q04H%\YcD+O%6"M]=*WF?7BeP")5dXP=h>G<#jgG=Nac%T=[3&X;'iQ"a;G>ejY.?IdT>DJ*G'Big:(`4Zddp*hp&\0@a?!elFlo9`'bS;(80(h'P4qEg\DP]OlT(hFaY!EiKo)F3]>WFdq+,%W&h#";5]YBolUrM$DXAHU3"MK8iak;MTd^!eYRfMQX6qi"LlUR!E6bb=L2A4MGslJr+=u)#C3abGnVm6>+SA8VQk2f)9"FU/h\,R%RJ^$[fNGbhU,./DNHt[)E^^_9hASZ,Wk>hKn@T;&21Qldr8K1kQ(;Q9nRPp*J9ku22/cl(!ccVIHEu4#\uPi(ec<jbe#Tqb:bOun%FJ\sd5eT%*3dbJ'.R:[)J/Z%<l;`?@[Q!BEP$Z;OjsZ)o&,q8Uq(t*7UM<HZV0lGo;;C>45$#N7s5coL,kiV`9:,2uglHjG9DL2s%_HhX?TCa\BJ*0]nOV[iG0'/;)Pk<C\;R)d\hIrMjFkOHWQ^nS.mCds8&TrQ'hpl@,8ac7M:L;PLHIdMJTBacC\*#3*mW1:NY'^+(%c\B$S]mf7UqHZp)Gsa0:9MOMHp\MuLm&+(d,e'/s+_b'H<kiE"\Lu3/<3G;nls;pL>Q&HR^QQ4\n$]a&hL#4NX6pfUGIZ7#4^VQ'%L8ss\IX:<1DnFUsZl[LBAn3ptML5:sKmRit:<ailjBb(DR8g1Y]2Q7%GH7?r35;VCrRA6GhCN?BHi<Toa*2UL]AfrA=5Co@Z-&9F%O7/ALG_0t!h5WP;(Yn>S/M6F2YFg,d$6+Q2rE__]U]TLL7d(<UqONaHFK;&!]Ei[q[-mTc^XZ,o@d*B0rRB(XXfAc*P]q/ZnnrR\%o!eI$]_3*.oi!dOAFJQjia+he-m#MD^\hD&FXS1&n`dd>:]4<YPs)k)l5mr[\,%h"ljiddWScuRY[4UDQ1+CXYU]$X<S##krUe5e%XaC"aZc;[pl_io0^>&,L;nplOZMXF">s?^6po_<^:CK[<bb'8ob2rBoaT^-G3`/E!]mf5V205qn*U`T!^XZ,tHduI3YBm7Ai9'$g%me+3Ue>B;8ookUb9(oTo^Q7iHBU7q3I('p0F1;#%RWHI*l_b<>jq;F=9U2+9p![u*qX+%RWQ2EbGB-u=YFf(qfZDa.d:-25l_j0Z%Z^J_?hs73.[S']`[J0O>;+tULj9>;Sl1?KE][oq\p>F3iqOJLYU0ISV=Dke'ml7SX\,$D+S%n2o5P9V1K9ijEo3OZS*?,$uDS"Fq%gb3A\nnK+5Ej),3k(:V;5e?FW;npkD4h'VJHi<^laVVn$HfCBaQ/\--%e#:tJZ[mJl8cd>QCjb>W5q)"hS\Cfn'CGoPUTk%n.SHY%;[b/lh$@ODB<lNU*+CMnm9?1gKDMWYl8Zm#OY9npd58S,,!`8p&GJ]6K)46n+PR%M;^%Ii=ODmb<eu8#YosF">06l'/\9o-VT[q(%3pin`$8"q$8b;Y;U6*_#L]F']':."_+_uG-DX2l@]^l^DprHn-3S3sfq.M$McBI.bqRd[f24geVl0GhlfX;d[+3Rm:8S3EGYOs8q%FWO[J[b'QLA$t\-[oPPpU+45g-#U1'N]^nOq'[#LLT1*%>^qbYbg\D5S[%<mUP8Ku?O6k-Cg6<t_Oa#6WM^H!q\b^H4CtSBoQSqR%mm:r#^$NsMe6j(0I+41QJ?SC>htuO\b$brjp@dgMGFrYqfj*/\^[!DM/q%stpVP&2b6EjG`o]66n34t32eI1Y'BPAsYo%M3iU1P>%9iqtWO\QpFqm^6U]t_Q</(tNr`J0S?K6]1<7^/2c`#"1Q#LA.+^jNQQ'iU<P,]g/m<n&lGJS2BufO3T-Q4Fg9/U`MXEq*[@<snB)%"Cb)c&i%Ot5%NMkj#1t,B"FJ8\#DuGA4lXkO/7MZ2gWQ!c1>-4/O=abZE7U37B?B$YU0_l1&u8s>95>BJYiNjc\&HhZ1F6*-mLQ)%WoS2+hBefNhKnU+X'L7J^i4&s+"Z.=YYKTtd%M?'$2*a-0GgFlkC$lj^h;gp@1FW-$tp8YJZh?U;tgY&:2pBM7QnssTZ'*.n29Un%J!T]hZM8JHJ1[G^N5p7c3=<_Lk-7^/"tSTY-`?H6Gi(a"E!p$;h8A7\YOKM4E.!&l(V\Ot-NYidi)MtKL%PTaQge/,1#O!P4MhmJ%Ecc]fA*u:o$C1f%<ItB)G]O"_pF@)B7I)s7Lt;t&ogK.50QBJ6^3J9W6VB,M8M;1n+a^&iTf7kF-@T()[)@^h+sbnN#B]ahA?ie_%U=MgjUph:D(GgrjJigXk[/OD9KYa5L_umsK!&qRVWJ,9M9%J_]jigX8Bq-%2\1*LTj=1GK=+1IOE+^?gGWA/PGc^oH+MO)87u4.[%^1J8G]C2FbZ>m+mZL=P,$:ff@p_WB?^(T[5hiFK1c54='f./9eGU=JB=bWR%S!P9ASp<mp*Ved[)?1/]*d$AsCi:/'o`j7iD6Sbe%LuTkG"d".7;W-k&#Hp)1_0LM(+)@qZn*';*JD4I8m#5SMG=)'K1UgnMo5,?;c[Q&p=PgU32,U7tK]7oE2<tQ1^E=o!/W2;boBkK0%<7q;Crc"Pq/m9&!FF>O4K[!YR7.#RjSMpfOKH39ClU&thGs]BGUeH8EEo3uo3o^]1F1LXY/&^]%rA&n`#8%=6ViS&E5(;[@cB!1+%qA.nT_CBM"jemW7kK\)P$86/uC4_HNm1J(k-aR`jD$rm-=2l6jOH7'0gr.$ek>LHhY>kUhE$-(FKe;sp\m$p+@U%$]/3URpS$:>(%P?FQnm)&1[8krudnP*1kaOi[I@n<]I*IJ6-T4cGFn/t7XdZUSKAkJ1Sd]u.oYbAD0jX*0Qn1o^[0HD1dA"FG`NlSQc,ASk11a=+%%P:2Hbh4LmhVf_Xk$RfH^18<=D8l`UC>u#pjdU(Qn#BL-g@%LPh<]REi"j@Tq("2"2j9W8hRhW=5o+<@?S7fi<"4RWc/F@s=%>!3'%<*<AHLbKr@",mA:@poM:-/m17*nMfj;ak+"S:p!4P2p%1EVKsjc7LIk:CAEH5Q_@p3n3,8&D5)[G28`VS<`h&iZ@q/n4sD]i403l%ebN=(+J..c&b5_bFi=5fZGF!Z`1&#]nBVC14LY]SPGUL!#Pht,U1hkW7mk)3"qJ\]W#I3rmL4[5B5W&Q+W4.DaS*BTo>GD0s%]rf%ohP)NiRa2@IS_=5q&H9M@m&p9RL<=PElFCUri(&-&\B-rOeubO)\);E[u#6Ymc8\cJiQu)4I227):DuuAq"'0F_7?7OKLa!Ni]8i%9h4*cN&cH%L=Q'AQsVU5[Z*:6Ub`+*'b#NC;]i5W\18I_ClhOJ&FpCf,.=i@*,nD24Km\koCDc3N6FV4R8p7j96>6C5iDN;bb&<4%bku`&@ba:a3UF9h&"h<W``N2;dm)715XKR8OqUD*a[km*qY,7df'KrQ'!IO`Q?hWlp<o*c4<rGk>j"kX6:?Vb8':Km,WhTojpoF)%[SWH%M/C\5bS6C"i$7D?$S99!75?Y$$EUssX4$D\$d%Ml1G)+6^r_qj4!&ZU*Lk]tL?KYf_0XMU2$Yb[BM8P8s3Rqh3*\*I1#'gd%8,`Cg=5"b0@ansJ59c]dV@:FW)7n3ki.W!"@o.P2&<AUJA?@BD6+eB0(ZLr:J8ef-I)96cY^%43as&SRoW\C$l3?SIMd8R=0t5@t%E4<iDel/rClg8&Alo.q8l<`gY9:3?42GlqsIT#JR/nD>X_$Xd3FC6=AY0$+5)![8U<ZEp"P=;5N_Q7=jkZr%Of,D$9D\VLuKK?Fe%I\@Ol>_ho`%c:E_85,>M[FdpcL!oNA;I;7cK2lO!15qO)h_JfZA(m\i<gIi5h99@1HgN:u9sD,cN9;J!P=mMNQ;76P*4TmW9%(%3%'?T3+-'sJ#"/Vf+*O086F8Kj\5^c]H5HgQ3/DV=G",k!^L%4aIIX5p(I95nBYV*fT5j[S%4WGe':Wc2U/_hCkjWuW;rdZXdF&\Hd%$,#cqiA^8E.J#1XT"Rp`YH9b[@2u0-@._Oi?k$u]ol@Lu\,3K",L_mN]O25NlY[VE#WQd8Z(bpUH8/WS2%D0om3eD+5lUE-V`o02%=5hFZdt\Y&(BN5K4QH#r^&a)I`=`]XH2Rf?^j6W\&0gFsbojU>E7A;ZSQFGB)lh+i4h%'Udp"K5JH^CQc$4G*kp@]kYhmEL:q%LU%W5?6-AI2sV_-S[$DtCnUaK$Y,c!UtG`eimB%]#pRb"L-3>Vp%N=5e2%_ArJVig3fT/gWLd"#7h@SE4%4_M+1]Ug&0U"6Dfp^n8X]%:_`%!oC_Y$]70r%,[Ub5Vbp4ap[P.l+jfi^Fjk)UY@oOt>A#,to8#a5(&]=0!.a.^.r[.]=!ckW@(f1j?AR9BPo'+_F?2:gY<FbV%TRD#^XZ@0^s',FGe8/b46i'.o(CZXm0H83M*/p$-00lUc=5M:j)A5nFlFM6,iQ78YbiJBC3KPc0p7du+CI59inn%[jEYdhYHgVOO%;oHoTaL<a;*Sb82?F7AJ*:<uNlm<dcBR*mo\<Q'AhFZ;-\1ZjI.i0"`0J^fZDTm6V3G%37</,Rf9HAm3]aEbJG9daoK$5C0hP^Rl%g(D['[gOF*'tA2Q!3g]8hC@O_rX$CmPq6`C+Pp#+F2uY".*d=/BY0dS"#IRW)lL2YSGt?Wr@H6DUSiF7O*hHgq?>TpQWTL(3AHV)%G6kruTYDr\HSNP_j'sh[p&1BtK2ld3iHEEr`uD+(E[C_((p(1?`lH-8U2gsNM3"bsFRD"][MaiG(H*:cN3=GgW;qGJC1"sJ8C*A.%V[b!TedM5?b7o%_cDWZS];+3>?btomICr?OKAEe%%/(Bmgq(&/^;0=,j42_jNmX$:8"MA=\`BLbX$`U;T)]jTDMQ0NXm>_EA-T,Z%\8>dDJ%\m@-*J:@IJ>E"YEr`8&!r2'h)rI;_hC,?pR#=\iBgo<*qQEr>^0c(4m)L==PjSS/2t2PGH@qf/i1,ka-/.o0(AWMkEh*H%Xj"Y1H"!S`9r'H_94;1qXSL>i?ej$Xg^d\b+-PAW"r/A\cg!jC;EHDGD#!?uJ?`ku<p8#G#]EW"Ep:7=e'Bo\4UF0l4@Ah&h9d[Q%SH0j=H,a)uV?p^gY!jRC2!q(4q4q_E8%:pV`m5uV>>pi_jZTuA!D*"i!!'uYm6#R79E[`W/KqS`R(;e6@SN5g=BkZ8Sk+f[c1kqR%/cVn>qe+HEqj7Zr:HtjASTHM`R0#lQ3oQo%@>%RH&'I#@b7X`2UTg/7nZZ\-KThofE%^824,UY2GP\f^Dlu:=E%r^"%Wq@@\f^o$%(1n&4@!0b+qr7oTTY;M&eRqu:@=l2WM!mNJ$7Q0^2p:@8e#CX5Of,+;JYi@&ohAtgl&UYrYg&:5?U>C`PF!L#hG5Bs@tFRj&n)j8%n3feY![:_gO`-fsV#NgafUKGD!+.Ge(ethY+Wd&TGTsZ!@Np&X7,X/I,mMSXW0#q:R1e?Igj_Ra6pSiLLJ8:$`$;ZQa4Mj(duace%Y0ZapAC`q3"J8bX%q+4sSYop";d^md!78=P*BS->_4@R""oul*3XGFA#gF*X!WY$eGq\F)@BarqC'%47Q!F"A/]0!#5$hE!4,ddi%YK0ZU!3?qt#P"'Eon&9j:*0;^EE_+p]@->TDTma9S/7"eKCoX@Gji44_I/tBeL^g;;,$Fp_"nk.C`e<1KRI5.#ku;Gl(M0o2YrK"%'+!T-JVAaW^4JO/`\prl%q?7F?b*\VkU<Ou5rC*bZ8OD?V22A\T.+,<nGjuDl[pOm,)YJ\>:8#XpPYSGMQX.8mE-bm"qcm<@$Pmb%hfQAHOZHVDb9pj4T#^K/BmrB`1<=__`"^roA6D=p0ORn2*%:oLkoE70S%D_dn2saEb1KE=^(@L.RMqTSq6;0#!kJ%_*sEbk?e1^B%%_sie\D8'fd-/@OPF">N4tuh%N=nTOd!HEr%)#Nq0lD9-i#5L-4]4d>,;UrR!-9h`ii.*W5p,YA6S]=!pY&:V6+U8-S%1SY5f.lL%^APp]]?uY@noH*APEK4C2[<9.,:M'`IRP<g,+.Y?`RP:&k?bf&(jVLeCprQ2]:1Qu4$LY=-/qW4;qYkt:6f54KJ_GOUSL/)81.Vo%Pl4:W_:OL4Xk:!NlW^6qm+:ZCba*:@*#>Kj-c\7j@5iaHr>*ma$L8^`^,snD4pc!RJI4Hh;Ejo00.,'g6+,,)"VB86':+N>.jca8%Nb+q"@@8O*K#]XoMQfbg#UW[I<q5eC>SWL*Zij#B)H[_<K*\Wl,O?4*gBak_aIt9DUWm^c"1I-UO/pp/dLa\3$BOkXZ!j?KI)WVt%cM%j.40]7fGB.U$F(5^3djnWCKfc9TOYEt&\H9S<nio$S>8Pn?*RD1tE;VZ4JP]0OAA`?B4h@*n1_jeh'n\@]m#E&j.Hc$[iHVd%%JKMH&qnu+:o.ZX)K7*7r.lIc4W3>*+>cHk4OY%i2l,j#/=6#`P1i_s4iT#h*Nb"^Z*qou5_"+e?!*>`eSq%C0IIL:>2;VQ%fm6r:%GGoSe^RacVYq/gQq1sMbN.-hkaCDp=5VSMm2^Efk/Z_Zc'"G<[QEVEfa+Cq+T3]o(]ZHHJ'"3RV!;@qk5F.LV$*IQLR6:/^?tK46%9ttjmR>#@BXM95<ZNG.*%9DaW1:Ia4ooAnY`>5&NJh,F\LgjY=)_7Jh7J"1OIT@K$pj',7)_S:f4Ejm];@,f-:eiLRAc&PO!?NSX%P(J<h0@8C)kCs^V/1Pne(S:/G\=%[6A(eAY4,&D<.u.b8[#]%G+8Zttq;kE7#o$6]b/Fa4YS2Mt'C(X@N'%?"MSg$7,V<8dYm<,o%#EZ]q&#ROsk_@:[M(SO7N*!/k0p_DO=hIC0_Xdq82$q6e5Zkjf_b,A#Z%*VM7[Qu]:N_kk9[;h6Ykf!oA9,EN7g"CA3%(\mJk;ti%JrLk+'jmi%r1B?"(a]=(&4qV8rq^%XVQ9?*10YVZL'N>q=i@Q,C:):6j72I1YC1"G4=nOR]eO!g-QD;Z0bh]fL[3@?aBTc%p^RW4%*%Z;QklAT<4@FGrC`.HZ-_-eFbk5X6o7M3qdOYGI;2@"#Pm/bon:,!7Lcj/>'IF4_&GI?rJ9=0r`/?h>CrB'1QkVh)`]LSUJ+S3Q%f"j9H*=69rPHYF2SEM*[fi1S#Vsl;S.QkH@EpIqTQ)-_&dEHs?o9tRaUI40c"5T6>V^"K\8'-Z]Uhm9.P_<O`_3&=@9.&_4X.R26%'$QQ<YSe,479iYrlIq\@W9?V.\?hZ/EgSA:4`D0'Y1M]ZU:03N9`pc"P6hX_[^OuU%Wdhp'd&b2EY$?(rG3o<=HsBae*e+pMGS9_%WO+n`/PJ/R\@JdTLR2/,gt+='JbWqKp3\`=&Nq]RYhJeZY+)\hoCRY!^VS(-MRitpqNc5fIuuo4;-c<WhMh%ZMLOOD44Ob[Wn?j\%f.k(0O1J(^Ks]%$4b=IObk[tD$>pZA&tb,Zj9/-IpAeOL0t'n=hF,02>(VG:'HoSNK/mZ[4O#TMPRB&/EJi^E\3C#]d;fNYS#Tk2%CK3T`OWK$\CB7e3$s4<-3W@_;EO683Vt1ss;Eu(OmZ^M#q<"q9]<q%`N5,C+MbI1FB'qBHrgo,uEO,n;Yk%93.!]NP4DuSUgkNOW%Q+eJ2d6=kB'RC(@ncik^@3<6rMPDT:Xf"o54!*R8$dZ([oZXsVd3jtWmgIfa:h;1[%sL:\T]nZZ>D"hk%E_*ep]O8E<dP:in6!2V%K=Mom$3&D0A3b*440LFO^!&3@i+nf`R.CiQs7D!OAq,?cj5h-0TD=:&G'&7a+[hBt)P4E=rksR<,tR,9IlW#,;^tjC/OJT]5\./D%INX:P<rQJ,rXXA:(4S@a;!%).:)\/SZN!7r4I0r::OS3%1ch%;6VcJ(InB(\04B>3qc;#(N'.;J?INu`qq2m"9bglN(IUoA2mg*+%'PAMq;6q[OiV^2*mYJ;l7!(Po>c*piRleE=Z8S%1pAEKrC;Rg/bsS92"_n(ZdeKk&M(Hm5O.D;pju,`_.0I/7Q(ZgV,ia*ZGfuth%iL7Qn=70$-dW%;_k@g"1iRMCA-nX7FBaO/EJ[FdFI@PYL5e<I%Q1i&#lY7KRH[%+<BC3Bn[01-6LmpC="3@``8a\i$B$9CSp>N&!%GMn-B\2$\W86*CI:YZ6b_"iRlH1IR;EtCpn1((7)2M^q7*9qd=KBkK\-f`KmbQhZ-q[B'Ub">K"D?;ocQSja0hAgXN/""]5(*&[9%kF=3aa^>,ukD09T4Mm%i5K6uQ7iU-Db4a`Q'75ZV]762s*K[#o_a)&NV%1g6J8_K5$\pa\C/EXl2`fjddb.*&['Ml4F>hH(3]k26%(L(:<'-/LFDGh36:*:H+#_$?ih@IX.\Xjgc/lP&LXZM&G4@,[gioH^([k@+%guO3UB0^F#alk8Vo7m2T`W\EkCVj)n*@]PSDDEi5%'r=Voa(\lPDD@#%Gkh!7Dq\QN53-QH8S7@27*+^57hU1V8T=I'*_F^BOar^,*Z[Wk&ha_"7tc?(.O%/hVnU[im:>la7]`u/AM]+P%GDSs&]5Ft.cGn'2qnmH5"99:?argiBW!5R#^hLh/N9*YCg!?$Y8:Iu>^s:+@LqY>,^1A-JL'.L@<i%:%j2SWi@5%Zi<[e:sGC6k.%"1m?<c-:TX&BoQ1(NZFgL2dLpo$Z(5!YB=I#QS3CU(-,#Qe+hHLQF0C+S<s66cbPU!4]EimY)@nM(b-,6S0)V*b$GRbA3KfTn=l+%1_`@i-b`P'V4,O?8kZOQBaf4tSWtH&kJVa]mPT.RD5Sn$ViSmJP'r!GFt%!**cih$R,4\!4RndYK,f/1D&<o=G;4_0`B8=o0MXa-%aQFI(k#C=ph0mYHOV)s&o7[9tn%Q^_>^@]g5U3b7+HChpAKSi/q&2l8KNtLu&[E>.V9YF]K$/;M7V2^e^`eEoB>GfU`RnB%^Vafe%GN^(MQauDRYR-<)-QSbded=V?/EJX0Q<CjrKG]@1'J:'/E.,q#P7;H_UE+NA!a\IDpk)m">gL?P\H<LjLV%LfHP,ZO^aR6J2g:+&%"?c%$fWT"]O6\.e1]Q_#7HRF`;acai#bmF$+?pP!(HBQhIF_N;,7$.6!]cu75BHV`#tnD4l]dosaS<J9bkZor&8DnecK@s-]IuOc%-I'L.O,*5eX!m%I2]!ApSVhY!Iauka-CDlbIC5f9pIPlJc9&4pI;HRD*c2!DTN4RVr5"a&+%PfdRfs0F_TKn>.;SH6\_(o"aNUJb%(d%+aI<re40Q(V)8=tK7_>qV*I+>4n0+*M,i#-&J2Gq:C5r0EN-_%Q"n+8I3Zq7tY=)Vo"1A0W&i\i3?mGldO.rdUmp,'BT7'Z(j%6m:5CgRui`WXS@IEO)55VA:,84RJ6hWHY)P<*D%c+Qa=rZ%GVuNApE*lZpqa71'7]/]9V4hIFpT.u[KSqm[cu.#@'1-fjegfmmH@%1Z$=jQtS$UQ+H"f`uVOnq!Oo=(\]##-7&]b3m!?6a!A9]h!@s*^\8CnH,cKO.Z?8an&rQlo4-Ui-6D2aP)V'5!o3j<-8,jH)g#]"%0qhQ9Qn_^QB`!2fG*P/?PqCLrkJ=<Aa1?lU^[o:EElYaH1AS'X]?2/[b,1kG*ULB:T:"TR@"g\,^$KJZgmp9(Xl)c\]K^4?K0V(I%T$16srnh5>J/R$i;=H7:)[mZ?4ClA4!UqB8T9]]da(E"gce$1UCc1&eqkLmqcS[j(0%RqNdo]oo:h)7rYkIudHCpT7pTsOm:]G9j%^dmeTEjM,f7Z8=G*Wr/B@.XRU*fLTUEO5rNJC[K*HeJRSks<DK^\4;h_q8ofrNC*(I3B_ra:NoW!uMbBK1=?,Ud>)%%>5%F,d:+4%)&54g8+NlkVir!.HG*G0:?G^VaaeD!#<;\eZm^L/^Anb$LBs%e!u)Ki_\ch[dtj^;BB)Ju23)'ol39B3,>eLb$BlVg*!T@MhuJ1m%$3rm`M@,HbV#dJB*srqj;)B,QCU6!=6\J;Y_6a6Yd/X4%89*m.,D0cEBPPgjX]k.WMj:BdS:lk3Vm63?cNT=4I:4m)!^bjJ-jZ1h%&GAs<)+M^J&IsP78-pj6$\ndL.MtPUBHRT7"FYi/-pRsQb^W)%`rX_1%&NGi#U]qh(8MHMKLh7/8-$)>4@942")<S4+IKhB8RVWE%7U\J1J,t0;Ne](!f]Ogl*u,+e6<Fd&hrX?(!FHBc_DpJ20L<!hUqNUVJD)Cm#_dkT!%sqN&YHOodS5Z*U;6mp^j]r6b]*om[^<B:%;5T%h^m``9f#8Jcg1>(4">%]g70,UWEEnA;E((?4&IaLE.KnU;kAq[iI3_JJ!!XbYQYAb]89V;SHNGLiBF$lC+BTTLP[hNP(8)p@%!]1Lu+=Sb5K46rf0IXsVingCbF"SLgERo^sMTEe4W0Ag2OH3eI*5t10$#+$lUUUKFSg(>!TTP_79:2H/p%7iE#j2@+K`O1;"rIXA%0MYGuJ1(PZJYD;4&LGn8ERk2QO_YO1`.T_fn`X\.Np.1MGnD2jMFS0O(.Br<6;ZaJ9b9j<;QbZ8D9`B4N_<0;)i9,Q5Ra/J=Z&a(%_]`&\Se2&P6Ut-J&9;V'12Xht_5IoUCbeD0;(Z<tl"P2`0o-3nJV?Z:\Ip>Fr7F/1M%jT>cA*jfUtt$"16B!7";(dZN\c$$Ou9M?%o6o1ZL*qN%G\f_O;,V;GFgX6MFV->0fCOY8.AZPe7uFW2kJNNndVa%L)5p2Q!lp<'TRo/FF:[$K,g^C9HGchh$$[0Ig7YC?%7XgB%-DH%-A6T0b*&JcTFU/n9+e\pVK)dS:L_.ol'\<BiC)Iq&_DVBb&==dq(@W1)=CFDq5jO%<PRlg$"N/S%'at:K"d0&m``SZ4oQ-BX%6(kg.D1M-_TEKWFLBdN<idLmn:YYrc&.Jir'Hm[?YRStZ,*IK%)+>PhJP@;b4Gb#bkN3t`iY(nr,`]Gd9Fr$f`tlJO$*YW_KI@8(%KPeN+A&)mfqp5o+Jd>jq)?>C^e,["5KU@o&271X3D1F8T&C!^!'I8WhNeF)h.@sEE.-&cqJ.SU9Cn*9cG_1^\2Bg-H_DYfYN<!f,%kDU>g%>Dc[&OaOR(2/N_/KpIEN9Mm,&dU1,ksuJlQ5KMrfF9Y;*f)4?5hfI`DD#CV9,-WYI4$6t-'k?c0U&q)(Pq7!oX)/+C^+g_%2.[&5Ak1!cn@[$A5gOH7BlbLR65S;i,`lO^&DAB:f-:KsL*D.q$W;L"8a)QDQM469)?cq_s!@'gZ6S%>VU6!#%N7VbhCiq0DeC%M%s49I:9R0c49),.0He[sh5m<DoJH,rW"ZeO.2#lH_rr<#9pr#^\bB8e\G.;O2IsZkbgLsIkT@<r9.XoB99a\CkfQK-5=lY>_Io;%I%TX,9<(Ja&kATmg)PVAZOqE!$R%pWkZV%Y<`g@,'Upl\/01]Cs)/X.,?l9GP-qn%OH#A,m='_/qJHl_;GTTI`3JWW.^lYo$/,f9+f%5+of;%B\b,+9bl1IU(Xu8HnT6FFZ'bBm0:l."4]i>($^j\u`(Kc/XH_bHDaUTCHo?:Yi<Lkc(1:od_W/@Ke^9%-h9c;l^?sWZ;iS%P=AZ&c.Vb,T61*sB%KeNkRFJr7u/bi'1I\C'(F_P<e*;Lq'EZ=Z9G8>5!M$<H/P'ShP[[YP%&MNs"_)^i@JC8"7KY.&t0ne95k'>%[IM^umXJ,*lTa9DYm9TImXLB*bHG[#5P^mms1Yp;mBk("5k.4adct=ODtN@(L[?pZ,9j5(WZ(nLHlUp?\a1Md.O\'rC[3XI]7fR7%_'B5pTllqaC]mJOZsi^_.'M.8k*(%K3On^tU1*HIc=>V!<]>F^mt"*6`GTgA$#LApe:6!;S]CUgd*2:$iL[Sl/5;9!^SVu6`kMqb%j"Ma/T28#Tg-mjgK@Z]i>(V)o%J1A,P<oq5L@@=^fAVrVBb]`'dZ6$D27h$)a$SsZ%Po4rJC$!f^8CZ>d=L52S@/$V0V6>]g.>W7%Ip"l4anR^$VfLIdZRI;(#A^BD\\:kS@sgbE&IqPV-094#k<Yjo^SVr5cH";XKB<`80ThWgF/T`jlUXlFSKYfMmBqiRO>*9LqZO02%k^Q;e\t"6fh894TA[ED,Vki2f!"J%8]FQ(!)uZsc^^fCg$a?i&';Ot.3`*IC!,CTjDr/MGbN"g8!`0Wmhjf06h+nKd#CrCLb#?6I%!$mdFnu'bK>O31dG/FVuLC0K$Z'@:P3S5`K!0VqU3NpiT14+_8Bt53qO@&gEH:@nJ&o+BN42"S*E<;;Vnm(&'JVKM(9UlKU([%5!%O;+M6q3TK;=lI6,8<lu&aQ-drn/:f.`p#:Dgh4aJ4qBbD)1PA%I6M-]Fk/CUC&sJ#o3C.B@/8/>#^OEp##B46FIqn[![a5/jd5V7%bPAFg4J6ILi)30+RaIfg_LRrH%H&Dup`?B5f'E0uM%c/oR.u4Ej:$<&9KR]Q7EeS:+[X<q#YG`VF*Xr<#5k`c%QtQu]aQkBY[K6A%:pL+"_\0me.((p$/6GZk=Dn2j7uEOW.+!Ct\DeJS.-:$6%Q&)d*R+e5S<'H"FD.Npm(C)>Enp>lB59=186?53@iI,MEPeaHR.nqN%,L6k=1i8,T@O(#uZ(pl+bLfKEaYhJjPHO^,'B!n;UT8q!J44&!E>u.p6Xsk+Qn.dA&"(1bNA^8INPkrIKS">BQGaLT*=`,>@^-fd%1PR`,:t;WMV**=qOX*VTJL'I8(!VAB+3`E0_=GX6-'?UU^;]N!CSUS/gsk7hjERQ;NpYV?d#RB,PJE(!q`<*:nE)PhkApQ5F?b0W%:rHHCHjai16V,@C+^?Lad6sc&d[NlB=E/V-Ng]>D7]n^FH1Y2+S7^tic>.Mi];^eB@,4TDS#Ml-N&TRPI$2m.ins^F,iKK)pN<.&%_1r\1K&q\YfdrR0FufRX\dJ+n$FEXo>[NjbTVrDLck[W3:h3*Kc40spRSi!),Q>qN)W$1YcOGE6-GhB4!g59^H*>0M)KK=qZ=c@?%":Z&bLQ[6$@NmEQ@*F04RI#7[cI`eo02nXhb.QsWLaNT.hJk28Mnmd9D\S7Xf$'u2q\uh.Uc90pOi'(dM_QOYc&echJI"(P`nu:e%<k:[9\*ot-=#s`/RlNk>m!LN&6K=I\`CTc6"]2'<YY[+t3+3WSEIS5SPAo/Xm:+L7em'P_pGZQR:eMqj<V0ILRTfslJp'?9EDXFW%UN]W\62luJDU8fkf>t=AD2t&dipf3@i\<VC_>m:AKq\T;#u.t#Ii2NactS]TX"LT:ms=4Wim1*0m7'mb6X+rKTNPKKl,D!,$U1Lt%X>_JK]`,<,2YqoB@N2QCX14AsomG%)*>!/71%90m4N4-fO]*f@1+H03pI>IG2fYgu-o.FhFeF!^B,.B.F8f`m5G6FWUF4jN-2e1r%B'G#5bPO>jP;dG]JU0NC2*+h>k`eA_iO$6o6$Y4Vdq@aReQkQJMLS.&=Zbaen*<71,&AJI4eM=cFIS/5LhPC<SgN"k+J&)GL_2U8%T\4_8n&,njmg)/mK0A@GAHa>!l>p:,K72!lE'u)5YeILGC,>Do!\F(;6p&@<.j1C'QhPWqH#Ynh+]4m'0;JF%gBeK\.mPe-XNd=2%EBD"_"4U>.]XnIFjm>I%cFD&e';W[",79#dd]:Ot#p['@00?rOMd".$FrYM:S$4-o1H,u[bqQW=#ng&cTgN!DO-b&(76BHLmkmOY%SJ-nmZdnDehG(6DbcHH#s)@E'f^C/I'`WV@;7&.?n\,Ji08uF`#Ip:bUY@URmj;-D.0BhsnjImnUBs1I7[ZR/8B2d_Wu\>i=G?es%GJRT'%;t%'WsR#YE&k,L<VW,]0o`KIrG'2A[Z"(&5['.1mT1(,fer,,;1e@u1B.5iU.BXTjaA!U':fam<CjOaQP6/C/36a'VZXV>%:)k_^rGnWGEqFT`#FZIcSEB(GS:;F4:KO7[Ee6/#TGV>]GB\]:Ya*RDU='=&Ch-6Ag)N94S0P3CYR_,:dck&?RHEeESCcs3FDpJ)%)Z[OKok!V4qD5t!5oH;*FJ/DQGHRlcr1!G'TQtN;U%p`%k?g^Qj)P2CI@sVfj,^Fnp<*b?oTD6Y0D&P"Gr\a/3I8=kUT)mU&XFC$%1[gYDUk$ShaFnE8SE\)U"::_M;R&=+O^DEi'Zjd(H%.(40d@)59PJfo3?`]i%c_KGhJd#iAV@<q:+X<n49-*(H*mNj@_q20._LB2%hn[u2?VV<[A+Fl:+T(bN@Y^2obD@I_^L'`8bq8I1T0Vq)b6cR/of2t,\f[7PPS(,9:41;4V6o,T\@>ZTJE/NJo"eYK#%F;0/&SJ:%gFQSh=cnG;bS>qrNc#[_f!NmS&#Z8kiH")EJ9eD9Xj`f$_[K':TTtn0<3nUI:u7QkE'39BhoPb[=Rmdi5KO08QDG";$RMST5k:=J%hNuX*_3iRQ0o#T$IL$+(&7.lbVTXV\q=@:!<^L-OB_[+n.aSt)?3_1'--aRf=a.@i\f@^Q^VnPtg)MEJ`9#6(:<]B^%S;_)RmQ>C%$'U71_IE\*cMVD!3\m9.MMA=(]`/KWX&)pTQhr)H68>Bn2&JeqOq5($jWCM`QFOR\UYu<T3`8b1c`BA6\RN;".>92\TI;$dXoS*<%Z$RM$m28[QUt._,oM;@GK=[QtWQIO/r\![*6j%92">lbs=)=;*!2D\EAl7#l'THP/*,>Yf>B9)PNbn,!a2I,-"Zla7Kc;Me;1d@O%n$Q4YlNC\XfX&\5`e;eM`LdJNU-M!L@nqOdgW^DT!Xm9I'\W+0c31LlB,71@:*R[@g_gbiRj,/=&pSPE?UiKK-_>lYe&"QTLD<j(%N*;RnJJbp+*HErfe-dF=@h#iBPb>m4-?(_X=#bh>$;;C;9ArG2cssbRlE!+,fQT<Q$T`u<1&NaX7fX5_RJ7f(MPY;*J2&+(q+]Kg%UYu-LbIEcq!@0KU/33]n`AgDR^kp6]c&m(=]QR"\q2#l:YDp/5RVck;5Zi\I)j^[-,omp@5WTcKc8BWXe2cue:VI`>KJQ%ZMbQ#-%*q'8-XM"/gYkI+kph'3Z:?0YZ*2'77YE=O)>Pen35d5V^;0c4Q$7:mHR%A#,pdq1(;$12In*9u%ShpcSHNt)-UJ#Y@d6a>H!t?^;%i^P%GVW<d+?j`,dB3jeMVLX?q;P]^.VFa$??lne&5QcuV5fON,>%,Gs$+q55POgH&$`+Rt^:i:We0ZEmgg15Dk-f*[HZoT6'Uf.]%I-C+7SIf0n?>RLU9fn=Y!Gup"k;Bh?PXci\`]1(RoFt[:PB26emPt@+6Z"Qk17G)"3C("ejS(,lL;XoZ<f_b6?9Qlk5o13B2-AKs%@l'I@<T1Vj"r:m%8-'8-MortBp1'c#l+Cm79M0Tll!ZYsQIJ]/St^mD?/B@W"&K^T1u=8Pq!cuHo7UDob8LH-Zdf&.I;=k*f56%n%__+_uEX.$?NhoC,K#*ipZ,16LZ:WEnA%_jC+;+(G,&_<-_./gt%NO+OUTC8!&QpXm3sHNjV46&uC-HY^pict=Bu&9ZI@Y'PFPFT[%NX"N!YHp9S,tma]F['fdJF<k!?0Vb&r5;<O_]iHAApfo_S,0!J=-**h;#qLX+$m38*bbst/gL]UA>C6tJKVc_B-rKMU0S=p@Nd8Y%qdlP<$<?M'/;(N22<a>q?;kB^QN@,&9f\U"=?H4.NujoL:hele@#.q..X*o3APSc@Cr)iOjg#N$8\ICrW9"<8aOT1\QdP#N0H;l>%[SrgW!)Tn[2gf,f$'Xt3,2bhi>%CcnSO/g@$sinoI=eUt)T?N.2U190K!,"IDU>E;f9VYJA3K`57@H3$!t&)33SIhl_[#WT34.D3%'pFHd-BKLGR9YgEEHI8AUB_ZRnQdf&X[tbZLM;3P+qc!Ed-7(PRH'&5'Bnsof@5"u7l<]mEF,DM)_hQ`P"!9tPbO[MoRJrWR,Xet%i(ibgX0ZT>ggPWu,Z"/0=a^a]3/l0nHT9#@l0Q^g;oZ"m(L9,]*q/E66J_hu,UDJl?DE/K8poh5ePm%ERg,?lj9@gSIR63=kX=t0%_2Bq:E0p<ATQu[kW*NiDS<'FlWg?FLRtbskYU0D$-Rha0Noh-"/,Sfs!4Wt("SO`$l@fDg0%aITpN6[G?oUD3L'%l6=:#(9,.rrK%A-Br*Wf,u`f;26`XEtR^ms>AGFFYbTd\s/POH-llH<j.^(4#R>(k(Rr->XW[S\5eu!9_$C3`M&rgIC9f7a6m"/.-&uq"hW3=I+[Y%UY24I.`d^3Oir+-f5sKGX<ENK<5hXn]T/Mp[aMUOjp$(#n(T*oU,=,T]CUZD)DE2NY4o8.(@brGV?dJG&EIsB6V3,A<nDaum+2+H%/!1Xe.*U4MTMmF\XrSaJpR3<X#"*_+LW6(Q#&GfVU>$*nJEL.Kjh9Ia3+^a#V;0H7@,mIg]4a%qU^/r+",F"X[k0t2UW7]b='/f:%k@VS(>-b;pcb"JOAl6?]+Z!dAkj,V:8:LqQ0jD2leK/-KlijI_TpEi"<7XF][eQ?dMEH"S7*:,hA$#hj8[dC.\g!\]B2Iom`GX'o%OeH3Nb@nZ-fL-_'@:H=tV?kBp:EsuSG'@WiC6/+;CW;_S1j]^BXTPW#KJm>SisNK,Ph?thK_6XR1PT&P*Zdeu1:s5LMjPDO^]@l>%YfSW*TqQprpR39[_1X+B;a6-oI(5B60_*3PMnot'pZnA1'L(0DG!'hYFI*\H6U"`np1bq%fHW;pBiQV#3GR4#j*erKq9Ga$fIbq@%Q3&BeK!f-PPeM=&4O3]b(ceHss*h$N(rEA2gfBXS)Brf@@*X(Ebi3(^D>bbk*LJ'8;RAiKmi2DmZ,(7`\BNYro1ZboemCK!0'D9Y%P#[0D;IPEpOC<8Am&.ZNfm4UnBSRuMCG$"s5X,0rJ?6rJKI,"o$nJ-H#s\RC/oOLinC`0Ml]o(r#EB3d/?Er(PWQ*f1IFNh03="#%`eX)hb,3Z;0+)*M`'Y'Y5)gbQ`bp[d]0W!]KNqg>S72Bc.8L9_HZ#og>W?5QM8?t;PYq=^=a>arbPt"d/FH[q;_-<8GSu#HJSE:"%G)tbgZDF(D)B]t3G'/(ONh)0a,HimGhs]D++Mi5Ue\r%a;+&[#D(=`IBF49CC-!%;0,k"?TgpHd7Q,KJ9u-tdbi$#=.]*=Y4k?.^%p^kMu"u`ik(`L"1Fa-iU*?7WOF#L6+.WP%U(-^`ISL'f;;,e=kJXm"F][qZks+<a:eL=,Cd,ht'fETh5nF.GEjD.nK5rNhG2L]n4%:dBS#Kt])#6,squZ@0;]?t3/B]nZq2:IMrr12&</lU3Nn$&T?jA:`I"6<RK8WQY+(dD:#1aFcB"F6t*c+1T:/eKWfY[b46"m>/Lr%!WkdsFGskAU2;"i/1WJa-)RUgVIn3Sk'Wep8m.)if)s<TF4YXK$;[tb.KCrLGIYU!i%gWT1*<[h4f;08OHolrV&H9A+'JpIJ+(Sr%e)mQ"csaW;@-*RQ36&i[))QT>+;sO_abF_28SGeF.@:7>J:rW]RnA&2$KCdiI09_\QGBM?1E!$hJ8%W+e`D4I2421dPO[161m+Ui%iHE]R5bH8$NB.@YgZYKiE<%>`<^q$D7A$pp0U)%0,f$c^m,V!AJ@.CPT[;`4k1C>EHK?s<]9EEA0qYALhql0jo?s[7HJV=PkpHf\%2)o&!O3GaHkG[>lO8!diH%KNp'5G/'j8@*ai3P>b>[Fjp`g)9-6h.R,2#pg-&Hb/S7TG^6(m>[oj%c:>5f89smi2('^/sF&o=Nnt%%iRk<g)9B>0@p:91epVRp!:MaNpbFb7\0^Z8O,VE0n&i<`;5@OHJE%,P348kemCJ1*ok`%pnjuhHhVFhpdn<Ol&7;I@;-juWm)iV%Sltl>Pr4+]fpY*.$9e%N"BMoea&5>8'SD(;?05p_2.Bq?hn<O!Q._(Jj\5I1!X/4KN\<TT4=sb>G`X%6k)1*GJkqLhmkN!YCC(Cq%cLGi8CQ:)s[21$BGr#.,VoD!Y`'NXG,#`WC!j'>((E&p;%(u1CeM>=,j=seHNZ`r=(aN)J1;Ad&DCU$[Qq+b-!,O0V02G%lg]NF%%UH>OWeW'L203X1EH/KsQG)^EW!+mg<@IhAtr5ZhPPMH%46EVBub=Jk$q)1HHYMSY,koA^4=tq965g&HM0M7.FHV7#AADEIln;.4Y%R<acHB(]a98mInGhor8;%3;D$#a]d*-&!b89:,6iFH=QmUhG-V>n]E:lc686+cM^5gD^=Oou8I:H/'.].\-F)F.)kOP@0HlH^uD6%a]dVEO7,1P5*+dRj2R$j4%>2u`Hb6\miVa?Q*N5%2'e5,^7sd!O$)51f`J&T%[S5G!0.Y6`S\nk*!ZS3n.A%&UEkp=b="/_J*Z`)%fJ`ecYhc-H)2GF?BK!u1m:/Pa8!X2p;f>PJAE3V9F&"K?0U]aMmEtB!7&FbDPZ]NM#7@DqegLB!dsn%+hcK)PjK)jbBVAFW$*&.?%HP=t`mk%8^@t#:)oG]<-^o#FVACc&u[+XhMl;j?<UV#k<0fm76+.5EE'qL@NK8:T?b@h+Gp[_QGN:0uXs,!r"<E-4XE@'JF^OM"%%GD\n`?YldDi@p>gFeF$?$E=a6S+A;.qrq^CJt<`XkpkW!\LQBj=LcM@$aVGA\Um[nhWZi2'a>.IA[&J,o#_cu?>-p?(PlYY@b<!(%E1PR(GIAP:EkF,Hr=oH.Qr!m.#5][)(%A38+D*4EDLkBRNPII[:h(fR6Tu.T2*=q__YaRhe=caYc89T3Q5W9r`4VETN>.As88=TY%0%s2MXmqNA9-pUOS#,hG5'+qf^_("#ot`!k%&G_hbYEZ_4@<8"FZp%?SH8e8B^DSB)=k'I"-u0gDt'@-_,'/+lX:KiF_@+>!fa?X%;Lu&9oBSUV0"1Vm9L?>&=9E2D(M4FGC0sXXR$L>L=7iZp2^`r2Y_4HK,"9gcV'X1<(Z&0t`qkRm'3#O;_\odR+6ur2CDH3YJ2D(l%6^'Xj]6pk5#Ac64;@2Hs`\JMm52sIgm.JO/Jn!^>.P*=-G7&>E$:+6OA!6LPs.5;2=gmiS"0B\Ee)'^!30(m+n@]bAB4+<!Yb3o3%$mrE#%/Mk^n=e/JEuZ:#&\+@D2\,S9j6Qa_$&#)G00TsX/0TaH>/NtEjnlJi;[#'#?SaBAL=[j?V.Ug?E#Q"sf7md!AQ5A=6_F0C%)JiH#-3H%[n2EP%:Ki!Q$BY&%C(l!W_Epqqh?jR6d<a`VV@:q\nHZdsX$gVoX[O#G"9ItY`&T="`+P)jVN7QO;:3s[iPQ9If\PoR%gYhRO!ko4u#[!O=VlRYt0N")q8r47IMo\4#EBQF]I=b\H(S+,U*)a7)T=IZ/)CR@0cu-a\VH5`59ItgA?W4b#B+(,:A_D;IP$&oc%D[Lg"A\\WVpk&!Pb(?=<l+/E3$#Qb=;?:/hF.;7H7h!1X5ld58"ZG<QIAU<A<P`4$,.[ut!b&1u(9kK'ErZl`?*VqbMVZErPat.2%Uk3W7k"n.POCd(,(WNL;kCZ5iR>M8tc8I_bFde$_05AWk%@&+ja+5B/(3h]ILto.PUg`gbOP$^pq15rL[1QR-Q]["PVg(_2UR0<^%'L+5l)<`Xsh!&"TqlYbm*7f`1eN5Qae&!uO8mtjS5*1E!J:VF]QX_eV)K*4k^r(g?-n8A,-lC1iN@FFI'u!j^TuL!u81@p1'6_7X%IDNc2HSGoU6*;a&X"[JL7b/Gj"=^J!anerk$u)UNk:"/#Qha(=(mks=V,H>^!kclO<;;T:KCa!8W.Gp@gT^aTKm[NRY_#5T@o?H4%83"h)DIAZ:lN560^c%LCVYqE../RU3ck0YDR#fEX\?6$<C]XFbZ8Hms&%dD;c$7oi6W.'P!_0T'rfT64$&H.9YQ%_MFG=t4PfA.I%!is;'F;+3qoG=a^\KU+&<jVLfn$#]M1WrE&$a#?n*;MTGmCpZ)<03KngmfQj1`"B2ld43_+[!CICh$M-;nu/):1_c'].#Y&(:/8j%Q6MLoW4aLkUk(n=]]daG:95CP<@=b20q\:4r0gVa^k?H*#!?'')/#@o*k]u'!?a<O`QkaC(S4L<K]LZ-+1f*Bi)0drT=Moi$;MCL%"4?0@h\gA^LuNH`dGaF&7d7rkMq\;WBT0gfrIL%$lSlt<<1"kq^<@%l7XcTPf(=]3bkVLNWDU@8Q9)PNbc_aT9"^3s+1os>W&pA@%ADo<W^b[#'*G1<$7a!LIKf+;5QQ(qtB;eAK%MGuL-WE1VX]Z%*(]'Zl0&pZWJ8)0.^f+G@/44%VR`+B2p$88HGg->K%q/u>Ng!)B%`s*<QAUtD8OqJ7GRG0!Z>+LLqO\MtRU+Lj8/-E*e+!/[?mbQ!p=e/7;e"@%G4`IA:L<nX+psVD/>Rm'DA9XO>[@;DAKIUs<G[46]%(cJ#e$=5n_"b9"C.2JaT$pO:K5<I5$iA;m7jhXTMrq1qZp`)JE-HY=IfcBKD.E!Zm!ATA?"iMI$H(+jY2[`q\(>f".I5<8s@$l4Y%)#/nAgXS+8=a?WsdBLB2Rno8o6eHrjfO)EhRPeD)XI*NNdF2gh]m^t1WU[cqr'"En("S1UN)Z`SPTZ@:gjIkSk?;$+4W>C&F+T&=%><b+']PtXmkiVh-IHUoi3(XF.\]h6U#i\.FTG'cUqj]7To8MQhBFZa>#V!!P'e;I6JZ_OA)USn7YB!2<qBoEf:C]$KQ.0*r.oQ+t%_c>:>Ao2ZHAm^<q?DV_gNah@bG_cUUcX\2GBO&:D<bEi#koAhD`Fh;uaWV7PJ#:/./W@e@edu'Yq!5%Wpc#pj3X(eh#H+psVQ4i"%Rnfsel8,nZ"G;F\Lk/L*h^4>^-#=e,>JGsE6.#q$&0Y`Nd)57dZ[0#=8a/(Cba1ZoEPK?DeBDj%/G`>df7$-i$:\j"d)B4A_^uBL%+'TaUG1_oFlD3-E5')X84YEb5@9B(PR8%rq_LC?a9tK/.l,1,<]%u+pfonamUDO8XQlH$N>W?V"fIebb<VUk.q,3(_r;)nhq$B9(%Mn'/Qb[FeM7@0qD\8^S"0!)^&Plo4gc5``*j.nHT&"?igM@0:PR9O.9j4^-ZK^W7Bm_1EbJZ/``1g/o9FuItaPOBdumE-mTi>'@s%W^Q[,=)=U7[h)m0(qa>(\O*CJHdC_fcN2uL+F\;6m(p!oN]X?VdiCO/K8MC[1/'=h'q':L*i_Zg!>lY8]-@hN@i'e'0Jp$\l^i3S%J.Q8\"j$%92ucdL,G2N'&I46UI[R6bQV1ik<:"=L*h:nN&F';f%\]t*3*If>j"nGN,]Hj%.or)Vmr5Y$@cMF9d1,e0R_5K&((-P+%@\MGqqQT=9\6p_KJ9.d\k/[8fj%uHU'F\%*LD@LjQ]/$^=#g-*P,K*(R,pp/hm"XIr-Q=,WQMWpfgaSqV/K-mPs0D\<^5pg%=l[.%kOH9Ks50Q@#Du#c:Jh6%6M-[Q-Q;?XRTTS/MQf^<3M\.[53H9B#N/3NN^EhXE"GnNQs`cXQmJ>UK;]k+U'R!YmPDUQ-fmXhLd8d.%5%bfTl\=TF1fLG!qkO5rRl/S3_H-B=$gC4P6e%h9Pb[Y&^J6Wc?Mdg(@d\;$Np`TQ%RPK?.UO3S,#F;G/_1=Q"6NA%JNX]KXR!\a%'D'rAL[)I.";K5G1<.tJMI9c$O]Ee-8Q,qUGuNP1os*D4Eulad'`X0@;co[f[:i0n%/U^M^8h2`eU[BSs"_/-eR`qJ4Y,$"P($C2%3(e,X>i+)kPe8CE//>,X3SWa9h[HF,4S=jJb?I/uN>O4]`O^Y;,!&U!HNE%Q]n5dB?O*#9'nE+fofhR!kakCY'@NbV>ZIk^5^ETT%0L>m0Zop"C@m0*=+JoC'+p&'']:=pG_1UkM=XV[+B4l!B^0s3'YgmjsB0J@V7A(WCTD8e9^TdnS>]r.-1:eQBAf&lo<UHN0B*tF[%+.rAN-[9,/7(DT&55>>N/_D33Ad_?J05Q2]PNakfU@-&n;+)PCAXE!AU\g`s%R.]r<Vbo^'S1;S;mN95O_%MM`oO<;+G/HiZ7#5K%0uoL\8bsuSlC6s+U'O#8b:_g4[`NiZK+BKm5(&aU:L\t.RX*TBNM&5-&f&uASgOkOW`$/L(3!,6!\"-31VZ[Ah7CM0Y<1Y!8-2W7%ZHr?5dBSF8ibSQ#(P*:I$S9+7,P/lG_>K#'C6O$+:C>Ynn+_7J[i<;F%'fB'>L)f+!an359JT>j2"!^J%IQVBpVp+8*'a=a.3_UH%ZHr?P1X+Q(n@3d?_ak!4noWGKYF#n4H!BZHJQTN]0Wn7r2a.R($Ka_jG\ep\Zb?M\E<M)E6o@Fc`P6f_CQ=ch)AkY%^6bP`c-g,<%$td<SaG.G7>7VQ>):/Oh/Z'V[.9Nd?'fsjY=&B;XH*"1_`Bt4C4&"oSi,_)Bm\rVuT4Gol14,ba]%T"uippl?BKuZ.\4g&ce#=&K%akgEd&\]:D'\VV3_t:rF)E+1H%g-DAR9m;tBMooSQgktu9e?1f\u5'V@dk.9J#$0F%OaA;YWYt`?JQ(o_M:07<M6"R$S:8$1[ja'%0a`8f>Bq.[KM/!bTD<%TWA6E\ro[UC_Dc%YXX00*JH\X4Adp_Dm8VZk/sGb-lC!5=Q^JGOjGL0=$K(X&Y6.LPhp3)u'C2F$(R-sP%\;YnT>OQr*P*m%kCj@6Ia`OE:%]In0RE3l5"MfN<5&B#qPpmJcV[s$)c-^#r\AEICm.Gr48$?j+;'_eo4$Mgb\e7&I4R33Dee\I2%2$g]C%s"#aM;j!g/IFb6ih*le",Y]W^6jRZLGLQb^Z=XhS:;D^D#oN[Gr1)q$VT-AohMKk<hj&_.b#"O>7I@k/;'Cba;U%4Yi9_f%/]$/*CJIE_)kZq;1c6Q0l7-VR65#ZFaLWSGn2`WD6h8%UXPRN\".$bhNE4Fd=j,]Z21c$NBea$Bc7t^"-l;34![Bo#Dn'-+?bdd?%G%$#F@L8$b3M\5RNQpF/6hSZJ=N->XeTlTK>`OhoRAsgXWFI0-J3?=o%LTQ&Hm[ZeUg=8[[`:[Jn/I`SReZ4lb)7qK8hT`8,5&e7%`tO\Q)'[R5/YU$/3<4%q0^FltL)]jAR3D\7N!TVDe;/nrFmsXJi,Hn@T=GToW*imEJB.JPdA=dAl$Rf,@rYNM:J=$6V&2YZb(n)F%6h/>ibb>4cDi'?s<-WbkS_qHp.I_$t9Ha7:c8"mI`VMrA%V[.b"<d(AO7=,-$qBP?'8r*7"J5LG8W&WjRS<BY&VgYrNBPi_5#K,/%lKhi><[^XHI`Yf7R9p2f(kCI1=nVc`'G-Cqd.j,\)-s"Q)B'U`8.dsq`.FhedYKR8e$NE+%g#H*RRcf9^(*Zo6)#pFZoL7gCMYl7%)C.47B>!]D[_sFlNuajiOUgA2;>_!2\GVL3k;'d^1s[s%#XI\3j)[DEm\sSP)*N,,Vh7D=8:K@>H].diCA=Fi,c&^P0&r`+ItY[^%"oF7Um1cbl,W&$AAU`(3JM3'eCSW`b,_aF;`^`5U?Ui)6&B$Lm8gjQJ$9%M8)[YGmGq]4o$;gqh)s8t@R=HZE+p)J2\=?>a?sDPp%8NhcLUA,mH;$<%8k;#9efmaOd9C8-pcH"<qe]]YALSjW!Yp]Uoe_u8)Q2P"IE0bokS71I4XhaMWHrg6d#\\SFDn[2/>6IE2!=tO_%E#f"3N5%;8'cGmF.OB7_S+44GbUZVEe[NS7$QqGi0(\BooC%fXWMc$)pm88aN08)LfcmOo)8?PiCHdd!q`:7-(NF8jhj2T6N@k`T%o"lrF;]M9$R:_GkG/jnK9'AP1mr<0ka`2Q4#Eh$G?eZPAkMtbaec1`XVOnjqX"D*Qi]MV4r#$ZaWbH"Flf\=2BpA;B_BU,bP7-lU%3J8e/Z8`6\*]arQ:)'O(<p8hBb9oPsF$/U*.*FhZ!3P.EbP@L@rDYJ_N1NXVQh2dI+Sn)>o4&Kuhi30;%a8R6$j:EZ?jjAYB&GrE%mq+iYF8k6K_V!1U,"Y%ZP5NT$Qf7nm1:rL:R`a1#U'RPi?@4##.a)=u`7IDC35R')eQNfo?cQiPgdYk[WQGuFB)ES%1rI\J,))c1%<ba8Q28$ep)/Kc'4F,AZ%MnDKSh*QZUgV6UaWdB.AXJI\!h9?V88QIq2cdqr_.UP_'S4cVb@SsjL/3i+ZNXUXhcHFdmbEArX7gpD%m.KMH?GfFP.fO%g-+#1&p/5J2\e8%8A+k)6D<):<?(),8Sf<%HXPVI?=<g3!B_D:.>^ra!R)9ikZaLsdYcD6XA##.:?J6;-j#&Y%%STQup*;s;S4'P/YlP^e5M.T4*1#U>lD'iC7"+M6U(!$.XAg60JKtntE.IV\arL(k,17H$(?O+pGg40of@'I=H]a%F\`o[O'-a$#r%\\HD+g15D/23p5'X;Q/Y?@dgd2h4Xm)H-GgQT7hQK3u9`0C8"HX5V&7%]s7/g)cHd^W1U/%Yh+$gLhO.,@NAGemRYSq(EAFZtdL`%Su,AhESG"V`it?!XA,*cFKC7FL\7@!@Gr+H+K-._>5)?iq3iO4VXc`U)tuDCaBH8F,Bo!WaC91+j;E$OQQ`]X(^klOeQ;`*VU?HJ%efpIB$CH6L9h46TJV%?=?]^FQ>\]\L8a$63&D>*\;4<peHh+E`\b+fSluVBrk4#%D#$//GR>uE&`l5!_/$i?K9@hX)BD#GYg/jLL%`[B*RP#?LL^<0Bob-b%h4,#'bWAg<iHqgoQkU_WANpdji0aOEA`NdQ[62b5i"tRI"<[%!$10oAmDuq_0E4oHN^0@\,V/8jCEdcB3%FmsOA@uf%/EZ#ig`Ib3fKdZ7D8_:PTfC7Fo&?[+U"J*bj'p#`%eBFrX\&g'T<-ppD?A4^GI2;n:nk5I?1f3PC?5$!dRA7";nOs1_%5HSN^<8V)0pPpf+k?]0s\TP6eSNr^<KK)-O4@Kq/HY!*A:eKSQO0l_[>N0U.K4C$&5Tr<$fFasF>\6QDp=,#*+7M$m3V(iSI\5cc%#2L"e;q'Y<*c_-9LW!\Oh<'Ft@5^/HQG\j6J:bfJ&ei4%-DW9[28%5?@tD[LX:uOQ7>4cZ/]:Z\mO&11CurYHnn_4/m/>fW<Kr&f%asr#FUXg=BSOEBLK*0ol4$Wug#/%l;%8N(:AEQ)#CN0&iLKB0]'_h58+Kl;k0grJDl*i,AO[=,^Ga"nh1q_g'^CE(REqH^kUd"*O%LA)o#C_tMEO_bj+Rj>\C=`TStFZ:ZHStr9l89Hqr_-usJr]@gf^+XA8lu55SGA&_FkhG0>UA4I6]qcN,QhbcsH'+r$ol'M++,BU?%0q48rC<G#CRKPH7\+>'G5o_`O5A+YCm:BSK7iUr]jIg$*\#9Oh2d%%j1ij`0PEL?VVl-r;oi_;M]H9.A#9c8$a:=A^PGjg96g$0g%R=Q02H<PZ%TCp;;Cb*0aWMbtU'`Xc(QXjV#2tNfErV(CCXaRG"qDc-cVV.g<:fa/G(+#Uk4!okZRPn2(53^eDN2F]<#])k4h\cJ)%-TIVV3(jI.B,aIHo<bsM-_#BV7e]C-ZLr):em`K9=Fg4<*KWscbP_4_5(aZ^)H,$qQh)k_qiM&d9B_d8Y`&<WY"$i5S]grbccDST%%B1SZbBXPW^![+!7QO4n'Wf'4'&Ps?UPoZss.$'N6p'T$^()E,/:c6Pg1PgRhIZe[1>9+bhca,eJ(;P%r66f@mbff!HcDZ.XP.<8%nck[BLOd>gRH@'1mjWTT1NY8@A'F%g)3>tma8)(<rDYM`N1Od!Qh2daTU@j-q(X5g`XZZA_..nP$>kN*Mn<e[i'?i$L-W+g%dt(^%IZq&bFX$Q_s"_6Z>%X,K;cC6l=;6<sm4ta3ZiKt]7\6LoOte>GYk&3KZaN$o>`sU?'KjY\>\:t<`mW.\bWYQg"=:9V>mPN&\pFN@%_(0FhZZRnllTk']$qNY"j8@*YIO^^Z6CX.l`;J$l8>a[DIN8p?.l/=,"IJd"?==mKaO0Q\p&tp;!D<i4(7dS@l4_,E.j.tUO8!c>%H/fBF#q!0`O2H=U"&BMG>09^[iqc;k0%UW/LHS,nR<jh&jRHr#>odDB2=+LI>(-c%Gb!CD=@$R$MUmuVLj<0\/9X>GnaNi--[98)%1`PWI^()DAD?[>#%NNdW_>T<Nn)AU^XEPPs\e>WlSB(OgSWFY3!a,U2*pY[G5)sK:W:Ni7+Qi6'eZodS:)_kY8-b"g<s#+Uo9`l4%RPu!I6O4b!j7"rIo+]VO8NBsV'7a]Tph4?<3.T@X2!gHY@h7?s[P]h,DGS*2Q=#4K*p5C?(9d%?+.MSFY9*(ZiIijA6Edd;md>:V%=8>.NO`Qpt#F[UI6!46p0'cl!pG;h['@J[jAJ=^:r#j82H+^>u+aK1lPU2.DEF+9-n)r!Uo-),%EV[&iEaV7F?13Dn:)#APK/>CI%1;=;UDt8Od";4tja5K1(bU0-`Re$*T-iqH4mCYBN]kcUD?@[\?4O-G9n1_)YP're_S`5nV+IY<Oq+8]BnH=^P&R<o%%.>RfgkGBR%Wk5'6q#[:ao9c/o^`-XR82.kkI51r[$L`<+.A[]s$YM^_G(2;4WnJ975`pSKbPF32Vl&.DoMAS[2ARU3)8!:d@`3`[nJDdGaWpTX%4jJ4kAu+P?E5LLk3OE\CF9W\3SbslKjH0P:s0C2GINbp$.bc/$=q<&iio3Usc=MJ'B:m"u$\>%'"GcS%KDQO%hB]JIX.N:=G9<Iq%3fj#X3$<.B",_aE>h3\8Ycf)<8G4HR?f%VVq<jW`W_Oa!;#L35J8"$ahUd>>Q2[*mK$4!M]M8Dj7'u2,7g4h:Y?JGk\%/Eom-aG&%m%>Q]"./]&(YJ02pMe+ChYoq5,!/=OF"[&o`8u[fO8smQq3Sqr<&)"DSn`#,oK+iO=ZVoF0d?80%VRQ4@ss:BD2)GV\nm,Z5k2]&%BXZ4FI6uY+Z@f.q1]Ns;0>m[dATeqS23k5&71gs!DQr++3si0_H6.:kZ+q7m(>>]<Zn]u64/K7\7]rtJ()qnnA'.<G\<eHC"Y0;K%D0WBC^ra`MX#TkK0OY.bcUL(nCZJ9]QGAbHgFTJB*=GaGJr]ru$]7hb8gMnG7ufM3bl19B(0YOdS0WaM1VZK0@r-N`5$P47kV;,1%N=c4g/-oi/dFuR!eCP)h:ig'=Vc;gR)VCHh@-?NN=thkpPK(P$`eMM%W,kohMU24sO&ZsQehh-G?Am2Fp_e&,-Mn`rqb2Q/5&2*D%Jlbl@Kj7ebqlBeup6eih,;(K^<+5B=@K!`*_1&;-[a:\68^VLYfa"I[TZBkOb!7[15'*4Sbkr1KTigia75H[WDIIjW26%h/:fn,P%`d8RY<fQdAargjg!Ic,Ig<B;#Z8X=XJD.Un8P7b!N@A>s[0CK`<aa8U#4UT.G>']rCn8#Z'\)<P[c-11"T/GcA!Pi.]Qo6<T-_:D%rYj!nVu]+m52Q6%M@"/`B=;q@MSTXS26fir>u%oS&4Qumj"$$Qdb-6o9Th!q=O=#==hi,t2k6Dj=]6P1B=!M$ZKj*4b'G]CRl/&u%LEoHANEbX6n[a,p<X*6]Ce[O">!>U.(G>=F5;PR,B.2\?fm7K=F'IY__7=.A*GM,pf[a\P_dh6?a:>Ttp51*T'PHd.fR!QA"gC`?%(0F<^:eU+Q>)PE88W&[$25lV:Q$QrfZdS(c@je;?;*%B7o4t=X0etnW?LB`\Oj3nqSo@=kkb<T3T=#-sThANlMVTH7O\@>)Qg*N=%aN6bj,Mt(8qZ)KS_SJ`S;HT0d%=jiZs%@o]@$a!`=aQ;iRa9b_8kCT+fD8nR]UK,S_)+OC2G%RMkeGgPE^p"6#(SVsa_6lsXLOOb%Prr5cM-h,s%<*uNq[-&Z*q.9KFRPTe[HQZ[j!RoY"RJVE:D(+8q#+"6CN(H@N"sCJf'b5?Yf`0cfPtM2/g:ch-.Z4Od6.*s#r1sl%6%NF$^7-5P5b'(M)^bsSXaR[nJ0Z=Co@>U5*sGPr_LiAQ3S[&M#L._;(m??L$,4$QD0RVe?P9RdQMFS&^lg[tEU_?].:D!AVuUrm%ANO9d@Jt.9VGX-!#H'9'hV-$":C(bMS,'7hCXkHEantp1miMgjV-/))GF+>D?\@;R2EoIjT_K9TB,_g4ZE[)k@>GX'_(WUs@&%ai%SuHoo4m]>`b:@d$!QP=T@9m+<O-W6Un6"[F+YLMh6\d\!=Qg=i`$dIUg7:\GJDs]+XDN43T<&/9qKgTf>iG5S'Vr?5&$"L*k<[Kt%krRoq$FmV@Q9P'fAUR)9XSN1Qpo,_FEKUfQRj8-[F59s9F)@\rI"+U(1QFIEZFpK<XSfUW,*DkX*_=6u1.ui2$/CWein"]N([snF%\tYXieJ.c"B9#PeiB+)]LU5L^o4_6\`:=TXooqA'2E[<`<,MCakm`XaOi^lK@UL!\$SbTcA&cGCepD>/L[TtJ/8gjU],3^T"jA.6%*V=4tGJBGU6>\EEEi***r$RiA9bL8O($MsKH`3Eg-j>cL6qlPqYsJOX^9SIE=pFo<Z&a#Tl>k.L3(_MKC,kmGBEI&d8dAli`R-'Y%K%5tf^rPph2Btsd#V4='pB;hhoK`6+7T3jUZaSgIK[07epO7>cCl)_?.t__H1BQ/D?8FMjF\@>-lu3_A:NM\l1ff-]$V>Pk;.LGX%"_0LrWX'mMa^op`VSe!tJ:"eVG=2fXK]f9)2O%.-gb?DMRb,/5nUq'Yf`QJc?`Y9;Z'/;s+kO!9:9`3/424b6mS._T4l2Q8jehJH%oSI#Q>N8"_JK;qP4f02"O0K-Gnjp!&HC0,i'dTFS3E'GjMn7Z4$.I*D@@XZ#<o`[N-F5.mPL'.N%9-FUGiSDCqu(gEXFq8/$FcN,%1`Q(LV(s-C_dmrF`8RfAInQu==]:h(TD?H3#ho[3R^!S8qn7Pmg*(ZCg[MGMOnGF,O+[W1AVF^*j,=/Hrp>]:GoZp&7q[O%Jp$Ka%,9Ma%mJmDFj3OgB,B#BW3UrMA^_%oXjcqo8IpPlhWL[*;YW5(oB974sc[$$2cig3Jn>k7fi5hABBi]$EB&V%TCW-9J!!?,b(D"'m%qhM!*p%Tk6P_%hfeA2RpUqtdQVsNdT`"E^,+bg5i]P7op,q\1u`o&%@0jmp8s)3C>$3GI_P<!K]'Yii.liaLI$Cg%C\@f#9K\NOs%pr"t40ptO0Num?Qd!359g#?b^(#O]IMSZUQXLSjklt_sWP<rLPY4s8+o4pE.:C:h3("MM&[\:OgP%9;Hk"Yu05Y/cDn!rGkTHhGU%$<^V^"fT&GY62n9>XDF@3inC[Hg$bi6kAD?k[&9%'aS#p56i_mcufAdY,>74<^&pPERk.H=:PWkddg%gd:I14X+`KBljjn.[<^J`%_^>/(N0a3$a6-"`,*T5]#g[.4SS8!cP>K_g*p6l7pEN2q+=#'N,8.kjn+g`j]&S\L>=WsEB<3T`cY%]t:<JJg6;9n[X>)iY+9P$;%-,pA\ODS)KK?fg@3Dk7;P`?IXSk7QLN9BcG:*_JJ#rOU)ZMnE[5IAX#7Lr5TX(,!0;BL.L2dh+ui4'Qd_Q`H+`:4h4pFqQ6U_5@J%7[Q:"9!J&cO^oRlO*+U/iN\Ob'+E&l%c*>''SG?_@)ToQEQ\*p5$K_sr:Y0.aDaTrH[H:U*)!El4l4eIV"/9+c5pIrF6k/0l*LA#%G`?:HJ2J4Ns#S5W@C&").&!k*ha,[$$;gq(2gC\bFZLr^)G(-jT(H0hiA&Z@=/de!*cERQ=t"q<&D#D!,c)0n%p=fGO?17jbc_])%c_D\@5gto,k?eGf;p4M_H>4p2*GZ9);FC5=H"qL'Nuu4f$YN]5Ule'<lH-eDT5;?-B%L%U(ki1(d9n%Fq?PT^1Qf#LPFEs&W?](!%r1n5Z`6'cV2GeQ@-;kT?hlM;F?=djI'E\a5*NT8i7VXrL&4`5qA+1TP,p7>`pNW<(_1P-ZIn`KqS54mt\[\-#g>m=Lp`X3gr?]PJ%1-_blk:'7R+=]sDol54P*O?.<WMa!4/BU3ZI5u]'ltfe]`\3brL+0r7_r#ak;;W5m9h2drfC0mm-L[49l0S9K-bd83+iS25f68)q%$/V'N%IlHkYFVK-:CVs,36DBjd+2RPO<3TVi'sJ$fNG[9+75tR9)?I]fp',P^<PMfr#cPP?NYWbmqY-2%gm%@2>-`'@gihCE^Ep7%_H<aq4?o/J"Kcij2.rkd*i*kOp`X*dod--k1;=;UY7,rW)dV%8iB<IL-DXp33BC7VJHYRf2e9-.4qJ_jdcWS[KcW(6#UJg$Z9Ca3%*]/YN"b9'TP075SlfmGu-9qjT0]Xdg+lPPMq$C]KZ2g&>FBSW!]UrA>'9O^n>)eY13=^MRP<tJLP`VK[r8\0sYlg/ToJiI*J^)1u%EU%G=%hpZ*_:3Fqa8?crGoRMi!h,;E=T:.hs3WQJ5j52C>YQaV5QZ8u\XkTa^K"U'*M`'8;eU5AGhLR2+M>6)d$1?LH4>oG;Welj%d]A4c)^qqX0fD3-0OsY^gRTblrGl:<E6mQmSOd'l%VR??Ac9gAIYOD;)*L@=];/e>%SR2u\]h8+8U5;9TP6ua222ot2@"CeAc_G_%_[6Y2+[RV8kb`>ur05Wdil1#pPRsJ1r&W7'qrN@*-U#bi%.:$Zfk%O).Sh(C&s+6n`r$BifhT\ZR#nBss(6\b"e3iGl)N!HgF6Gt%Kr0P!>imDVqrVoa<g8*?rag==K?q/o*qAQ%e8HrEVM+b-hBu7kic7:_OrieM+a>X-VPc?JS1%]K%SR3"\]djLp.]?o;j&d!j7&X$%Af&mmV`\NAaWLfpoW_fEa<AI6eXXqDpWu3)XI1uDH3h8Y16@`rbBaW$k)nR1Z]DreRMZ`k%g#,@NUOFg;VEPU=FqM<d-!1!%Q&+`%6^jHc=oU7iT>?:W9$d:O-L*O6"?C._cf'9m%a'^fOJjKHc5[f;'17BqA,Q.A!>@#62jK\BmeTL=#E"!A%Ullq'KtU1J`_Y48>;:>%=<E=-l'SB1G!4q9@o3FKi7f674V#5Rci8GgO>J9JZ9H9`Se8IqIdnY9GP_*lY6f6r&>.#@KXbBVJY_O$Qh<#Lql+0c&T-,&S"O+o%'B$[>g1?%TK'f6/]-U":Re/S3I"KTU4;$ms#n@Yf/:e$#4Qa]RbJ.Bt,Y^kAXFD,Es6,h51pe\\:D8WfOQqk4BO6O\jY1I07BS8<%TgW!r[9,ZA(Y8d];Na4Z%^1:_,*DP4=FY(`JTHY_DA-\@n;ZP(^_a9\C[S;A"j_N(+gn[p)C?;e!iqd>_CR]<FiQZ%SDs<S!*-`g%aXuE7aeQ0Li+RM`'!2?dS:&o@YSsAIA!UAGmAq0i5qtT<>$2P';I&,,=Cj7Kd.(],*2?KdgLYgO%42/p!G+,PlH85+*^tL]5#q&Y%EAFY*b_^sLF'M<*D:T=E]TJ3rOJ8uf$E[3<!>rhF=m_rg3gkl(U=<_kj*_feKR/Zl#,kl]6i."U1&N<2+,Vk'!m]dJ0XTOQT]g?i%=9LW_coXPn@&kR>AZ1M6:JpCeiA//C1uf6P!82*Gc=oTHFbHX/(+tN>ZZ8s_+e>qk1"pE\^e9]1opSIhp'7Z7/P]2Y']CfSK$5bZ%32'm6:8F=k[7XIe*Q=n+hm^1YZ.5*U?(oU&0`ZAR4-.pLH%=%PJ:IV0.9<d>`_p%#*2Q[E0(X3,;o_16C$3pq'n5NE"oM\>+]M>n%HA<0h7pKq:Y!"'N`a2C0%bA2Oo=,5$GGg(u4;0V91mJnrbYb\e*qQ41q9#2IG$$2E_Q$p&2V'X:IBY.GX-!We<:2T$^]pDf+*AG;%E.RjtXn(q>4K:=+AZO-&c;A>Ij"eB.VD1j[DJ<[)2NRn]Adk82YFEc:QtCI;P.m)j!oNUU<$j0^(JQG2Y_.bam)I.uj]+>uP71<_%e=FTj^+]Q;$h*K8iH3K*\Cq$nQpmJG+;U5`Kl=Y;<YB/SeCe8g>&$jU&Z;S%YWmD?#GCe1%FOm:_jQ--fQA>MZU/0g!@\X<I*T='%4?:"mEhms=L-uK&H-EGo%9.db=1/Ep)5C/2+\?"'cha!e!H-EpC^aO[<qrSSk\$.4U"VPV0YS%B^k4t;6.-mMa8GX!18,a!98Wrm%8I"GlrL<K.6?)Q$$Q6h7W2CAJXRH^h`70`-q3;]k4(&)YP*#b%cPQS^i3n<g+m'KU84>+G"Ka=lg:s%_#Am/'!db98\$Cf@bmDQu%<\(f1(IdZ&$\1NXF*UtT^Mm^m.t+S.K^N>[2`<*]?'-C@=I8h=RD;6Br\CQ`,Y/?YdKe$,R8!H*)9ND;qcYEQOU>=8!6?&^-B2lk%meYb4?lcu2)Z/j!p*<3@en)SXfI(HI%[JMK=It#$/>gT?lfOS_mDOH]_\Jq[0Y<#332?FGn\Q/8)M[pP?Y:8mqds0s=H52'!?Q80%2;CiY%?B\X6n>pFn[7='&2[F=ANAM=6J/)"fY:SH3u(L)*%[a%hSau@YW7$Fhb3ABF9`/?Nm-ds5Y0QVi9=5<hVQis,]dfP*#Q)P%,F2K&inqtHc5D6u#2?Z=7>!f8+C2M%A*Hu9hD?^cBl:\S99:XQ=6g+1gZZ4&bR9W&A@8E=fKXYb)7&K02$hK<3<TOO&R&`D&hG^u%#4*$(OZhk-#TO51Z9KeV3Q_X$:Za#1qkT@U[g)=aegD$@YOI:Ol3E*JYpgMpMfbhhV1J1DX:_GSi#R]'1-`XoInm@E@L1?>r6+#I%,[)7"[)I@)J@6eUXN`K(4E.<q,doQljf`(YUrh!&Cg5CqV:QtE6Ktd^_ZL0R(`?`DOGc[3?>q]D"Pe<J+*XB&Q!KU(3W@;$3mbOM%<n/Cm0'cl!pMcE?6JC5^Vk@D919rsY5C$UkA+Ch0TuD1<c59fY+,4ahaIU;dpVd::>Q$fL&4Sd=k="haQBA!m]$.>[c(!c4/b886%4q@%\@Q#CsC<BJoU't#QA?q$s]WY;O+U`Bt+iH'cH>@)iT9j^dE[tDGpC.@.NYN\io^K*%lrHWK"%'!<c41PJmI/bFPm-jI-AATl%jC@G>!QBGa_DcON]>0re.K7;49s?E]!Il-RU=i!ECh1DOhY1ksB1"*JEi`6PG:HleG%D$H,)`-P2A6?PY!fN-J[Hs.L^Nj]j>V@s%f*)X(h3-HXA_f8a&+jn4"UC%c<2CV4H$(1oqgJiA3Xp87A9C>f0T.,Lp)^LqbY3lss)qiZZHmK%gDH6C/-WcE]$t>]bKS.NX2(<0%b.$u^NST=hf/7>mS]?+`0TEpR[lMc7_2#^D0RVg-`qgCFBYC^o4@NCjMTKaa^qFP5c:b0&-[u15ZNh$:@+.HhZ\#YI8^4O3R'0)u%:MPIT:aN58[a'e["t&c*i2gaA4/hApIUEi2g@5]C&Ka>?TL`q*a$@^\0iP1I]6N"]q22Oif'/1qVPu.-(&"2-h?=V8MPEEkjNa@K%Be<>Ae<a9n4BE3uV\Qr[nm)(2Jl=\\_>H<1MFDS\rapT9TeWk[S$fO\Z-bCDKNl(]9t)MSr3"$q]2gAC!;i5pX,J/UM'W>;>r2mX%SH@Pp_\H0aW(*ujB"mCE,9NF`VNX03Eqho7_[6kj]'hW%N&];!f]GmP-u]q0KZIJ"lQWV)EY[msdNYX&-4_hC4d8o&E:#Bp2_*qm%9-%HnecUah,MS]B0)PF47eBg?&PJLna_j@"/7<)40#gG/]gB#$2lu!@>]IiTp@4Cr!srAECtR4ri:m*h+G,WI[%7`A[`Wpe!40HV%l$h"S^EesB,]2pgk2:Ie3]iW/h2T(0OIuaMAh1+!pHqP'TF\!>#,N]):9\"U_h[M_>^cu`]?IG\%=B;\+nrqSDV@J#Ug5:YXFD*/%1M.7n-lgA*[0qg?))t#Lg6oEg?b<,+'VZ!]FR:iup1*Y=;+.)5,^Z'5i!dK,p%]G[$'<$R;.:KGqh`ch7L+emOqo>d!Gn+uFeF#O%'M/Fj/Tt8=LUZN9Vj')>osZCd"X'5ERK6eD*5i%LR-R>mf#hrT[2LglTP:7aQXGEcGn"XpML#;0l>9n_$92#e>K?jNh#W%uin5d;%R/tFX\]h5Zbo8I3h8$Y(Ii7*='se3\;cB0]?^_#;f"'#._`<!R#:-,'Z<kFAV.#&q*'2^ZBHN%<!abVcqaj31k:^X:Q0b$YqV!?(%l$j!^3/eA8gQ]lK0UmB/oWPdoP'*hcPMkRZTdD+0cs.;_a5i/<\[$*Wr8>>PpoZ;Q\C!j*Y@.Noobq.JoB!otiDOk<;D9kfqfhnG%]h;d,HMH!PIbINtREaO9%$k7pb!7_%0(\Bs;a76;rI,6rh_Z3AnA&W6bOCllcp.`sp?NhHfRq6r1PiNi-)?<p*u(FT1e62.I[uMA%K16K)L(HJu*+&XRG2?g[@jn(h$<Lj9V(r[[OEMK^55ud=;#m&9F*M$sP/f#6Q<s_!%d2=!Sf22WcVmKIW`WMUai`9][Pha"1OaPL%Gee-5Qe@#aQ(>%inc?+&'TY$Ta$_`g\QcracJ?Ps<A:mg-_p>$@&5f6<usVlbac`Ng.@Z9aHQuHm[Rat\<_m/EBXo9!UDud=GXOh%s/1,2K/!J`iS)mF\P:(>$??"j'B_-c%O^=/,=t-%#VPF#]ZaS/i9%>&;/[tTm3r`5a:)jVUi`:)+_jjYP)XON?O*#YDLe%2ij(`X%Dc8De.;`hBdDM[],VtciBfb?QC.uMX?O'G6i6q\gDqPh-kcE8TfK?L:SOScm";+niCNt5Pg\:uYgb0k#d#_`+Q>Eo>C0e5>Qp:^g%%<4-(qaA7nqER;DjL`[6R6$E)FeF!n$ds&m>h6Xumq8;%PL:5HfOXq5(=Y0nk:s^]BB;i=85#:h=^u]XVjKi24m$';3NOnB.[J:+%R]5FiP1#3H76meC-I67P*GD$W7?W3)(gPY,%.C*kfqbuj.o.IL16>0N)o1TL<?OUI4/U";,CglZ]`:77T&Vo)5_9@bk;BaVEuZn1%QLa!@J6dt8kI!s_1FrSMU+pTi!Y0i[X>D#T+Kk&tLnat72AWGrQX@%B*q(u(3<AUfAf9k8-#aW8R[qdFD#CVP.cQJ,\J,"_A=?;t%FBsk6]M"n7\>ji)$8%pdT<V%e4@RA^\BH\J^jLsR,W)I&mi,k8QbgfR7=/dEj\iXjfC0,`=`+[h8unrn"D$ulH=f2T.%gQ\%Wh,&%ha&%`H:Kr-28s"gR4k\5A56ClS7KW2lBCnZejInFekSm3E`oU)A]kl!2>=_@f40O+LT-9,VqL'7pJ]:G`9GUpcT!?sZ'7Xb;HW))%?B[5Sg^pU*78d\>R1kq_AMaM3CQ-o\X*;?@@R\_VZFNNAN=%Iej+>@!#C%?$6L@cWKn'=VV8>u][0h<K9T+sM;8%l7.;Y@HAJU'A%U_,\KZ#h$<,EpcaU10'W9=]+HYMl_r<>cQ$rm'XEd'S5jSaI:C=A96"@B>5gI+P0O!mn:l"OL$TQ7@AT6/Wfb+/"b?RXpUia5<8*%/K<'s]EX/O$f.<;.WFuaggC0Oap4rNO80n>l8jG<#e@Ei0*-`r-T3/IoYgFkRO7WnF,o:E>-8HmH+(:&[./kHA2T_uQ7:@)!F=8l%GYBfNWD1QSABlN[#,KCSM3BED'[Xcd_OZM`TZGo,5U82hj"<MQ9Ip5efWMk_^5#Gi.&Em1FdGk6bFFbAL2(:CQ31EDqUF]hZ2f)a%0C#ol5`bMg)mEC\`22(F#0m5M#nsbJm;_KmR!A;1VO0QuhN()GH<R5^*gJJm^4a'rL_A&E]#T1m&fV@kMlGk75XPl:CkJV+lu72&%6^k6'(0Xp4*RL5)5C+=8H#;Os_nmq/UoN.OSL'?mZKH0;q:l%pcu/1Xfa`A\,<hREEZSN;CNot(Y[j<n"deC+@qS47$Gl39c?t.\%!>k'>5of[DTNTEZ2N#ARbjpea^Fi36'nQP)V_b%U[):rZ?^#:CEo>ENGam`c%Nn%P/&1Zj7#r^jj&f<$MOODF"@^s&TtbVPj]7dW%L]]mI`QhA7PaH[s3C:5+XNmiL3(eUt0;l1q:7(Vl*ZQKi&=09ZlXGZGFSO@:n+"+_!@V:TVc^6<?%1^nLXGp@NS=jUn;r5".pplZ%SO/Ql3m#.)0AIE>#,elS]A:pMnqXArAe!@1MT7KV_uO4t3MV"09Q?5YJ)W5u6UC4LHK><#Lc<$QfT24r(:@hGQGDdk^4S^[n:D](%XQJ8!WZ`$!'(?hD9Ak#M`1H1\LR"P1=<G(dUYo'0B_9@a:q)pK-)`ZI>s@Ui_!>q$[gYS(1eW4Weo*L6$,o.4/.NZq,`)45f!Cne%j]JdYi@^-1q""B#.&'?UMTbp@&NbnKo3lN_R>e?2l+3tJn<cbb<['*&H!4YOqE-St:)6!!1?sEjS@J<Z`Z&m_A!dZRhtd*KKd1\/%$.NTj6h4,[k1@`C9H:iGAd-D6)V8MmD%VgdLW>0h@B_4YZAs(?d%O5V3okm"3`$7[3iq.(+-b^'26ES]'JF%Y:W!A;(gt\-ED";b%NM=hD>rZT39?*)lF^<90S4+.N*@JFYBb,jcnR\FG,-65eLP5R-`N+*NU%g$"oBS[5jq:_;g%AMJ1;"^\Hb5B2RVJ2]4'OBQ(WpB>%*R;bG>9N%oqQ+OY3O@'V5R2[o_\>?:Qnj4V1,dbK')"ldiY$D_/sO][3mbN2acVa0IFcHt4Z1J2V5LWi[';"[`P\b<P8W2u9WQ?Y%58gY6hC4P(Y(gaa!t:ReEM<8H1l4*S@F'H=lPCsWa9Kk4Cc$\nCr^)Qb"@TB-s-Hm9bpTEHn,,mR:RFs#NbNb.Dj\e`D-i$p!muc%Urag6Qj'!H;"1n&BHLjBH<,RuMpu7El7hh1ekZRQNtU*V_1E`4kU_>dlnHu(_/O+R.=/W[Oq`-bQlj-&QtnJgQ<*)4ILpp-eq%@F%eZ,<u]9cT-/_%TUmRdiSA*ifAJ*1ZL-TB)W&m"1oTOXTS-JA4A"c'E!k`?OBaXh5RU@0Y#<!Rdj=JNU5J6*"@17Uadam-5JE"?h+%c<[PgDR<>uF&^Maci!W8_pO@L0IiB`eS0H[J>1:sFf]P6_h(DJUflR[*WV41MkA3dEJDtAc`c*&8_qmEjqh`6[37rR#8X2JK52&\%Q_tJ.[4r^q5IB%^qn8hr-Ob<5jjTGcZ"gg]2Q2GZ-s43m<L+\iP:NGPjZ[`Z&s`RQYcn6?<*HP*)p;d6#M/G@ifi3:VN<gS^U=7Y%*:(GaP0@AbR1sb5^jsBIkL+3HCm,f#b/Qg6#OXCg*6T^@o4lnnUom2.PGtNT>%3sF:r*);li@hn?<9=MKtoEaGXq9h^fi8!fM`^`%b3BZU#iP9f%OCiPGa4[84_g%B&JS9+PP%uE?9J^K8(J,^6P8)>M4H%sGg:=b!DY0*G6P^SS.I/mZhBgAC$ZDQ%+rn=Bj8P]$OaqX%A8j8W;H[:t7fVmT",\.-:g.G2.8iE$bt;XVPg^BO,>F0"-`RM1V3]LmF.6]LoEEN(Hh+949oXl13u@C(EXIpQ%dX`ik'D]8-&YId%^fPYV@"eT5&jSa`G?*<6)=_?7[Q6n^k.&(KFMJGWQ77]jR?[9_$K;&T>*>A.V58%kZG(#NJ1*MF5I#(U>XsY8.0-//a.8NU"dI[9%K4X04LR*<#N\?uX8j@]J(!tV?b>Ro4Ub0>6p*!ec8KF3^f!bQY7]N^ADk(V<Q(bcl48.Gde'1]pA7;jXmT)u3%:Lc_fk^h2!-uE&%lf>PsE=qb1BO)a(oe&SrGO.,p3DO1j2*g9Vn$fNPe]_K5q6sskKE5T&"k'tdAL!nj)uj==pl6'(mq`^C^F6(t)6'U>choiOYX0OM%Gbgs/D')r8;pH<fA[t3s=co-.])]s`)-A?r&7Edm<B%2_-Z?>3)-$jh7I&Xn1H.n26=#2h&G\N:BNh\=%3/:B"&.WDoF!bX!\EA<%.]b_5Ch4?1!ntlH2\BeGh@SWNKfDX-KDE`bF-o]X/ND%Y#5p4Z\k09tpn*u/NF5j;'BZIG["4r;O0J[skGD@n@G904(^sF3(TI53%c[<8lCi`V7!C.a/ifItT!g(AmFA=!%lcI9.'We(R:#F3L^jZdU*DUd5Z:+7)qG&2/;Lr7?F7\@q/R\]:mn`LL,2"k/M"3K;)]U,V%_ntc&?IN>2)1q'G[Ed@M_'f;efJ/b-^<rZ+Yj=&tEEF3;6Gs`oN5B,5;K\,5]=PXVR#$fa@B_P/,&AJ*-053k"aGK:!h%HB$.i`l%6Y!/5(n#p"9!M`P1eO:4KFq?4"/(KR(bf[),8!X+`PW0/b@@T3aUKG>9<[E?Mo+BXd')Dh9RXd"",u'YqXNMK6fjg@_r.2\]>q"7%g"Lkl"HIG30hHYJ&k$hDgB96)RUJ)j(onArZtJNK)Sd<*C&er3(MRTb2L9q@Wbd%#Sj8PTRII&g]j\)/\d<;C).oXR4k1uR+O"E2%Jd_5&+;P6^Y#K%g^b?5a_dO+Q5\,O%5V.,n1^c)tVX)6nbeCt2./`3c_VM>`[7u!Z4$aHm(9,-9cePUG-E(HF=Jg`i9jsY5\><[d%l]!@!kt<Z]hO!n/dc^=Ali[EJa;^Y"m>jW'Fp`5P@P#`3^8uO2e(HON9.YiI^j>an19HL%N-8<XrkY5[<-g=7nLe8]^D3WN18H6l%;X3o51V[W$Y]8XZ9St<L-X?^YZ;tbX\ZO)u#V>_qMuPjp^X:NGpYoR.#,`>"isQ$6ehMctarQJ\B[p-t7;A[Xnm9/sNh^/k@,#Lp%<'$*[e7N@2;,.,LL#nA`_IU-4J[*YF0HsF:Bfm4=Aejp"laLnEUMI)O8UXiMUg=d"o7[33K758.i#)m>(8lYLfWhDe]-Wl-7EX:%%0<\u&eZ*p,!Q9)Ski</]ZU'_SE*?u^iUX_.,Z%AAb'gSfe6rr<p?=W>AG\(>51"l!cdaJ%0ZRU>H^4Q:GZhtTVmt_S:d=Gm.hl^s%g94[F6#V=.knoqqis9=i;oI:B]"2sP?\koI<LZ$@$*Lk`:$4oXZ>KoQh!Mue;g%+'=J0-2B5)0<!Bcao"YLnpIUT3sQ7jUSYIpE?%YqYFb.+f0C1821U9autZ<SqG,PI+DK)1nj0(*^)`c=i3A!&h/e^C:60!1qbCe-a3lZb$O7pr_cQ$m]#3q=T$r9e[7AR]^_-90\KH%3IWrUE$+9L)U`'iLK%B.MUlb964A$h7"Fq*Nk'9V4_A'`?kggH*\a3gK6FG/"i?8[.o0$RoCI32ck)g+hIEj`p'SrO=Wf;hm4@BA%93$+^ei(0On'Td6A[Tlq?48nfo<B;u#,?]Uc:]0YSR6M2TN`7_+)HF%5#=a*ZUn6/1R(P*=#*_+isSbIAtSm^6'qZ%N:<u^AF0Kg%$)t0j%.2VrMp0p=?kcM@r+!6)@Bt%LYa\e^6M<41D`(QN[oF2rhqur,\ft-?G'P%TAFW*epeJlhScDGb@M].35>\Qh&(LN](7@WH%=RVH_$1+8jMJCu$VR8p"AW5hJ6XP#nCTDN@:mfG]-HY$Aa`L4HZ.8$%q#Kmsigaj*i:O@<k`Ol^&W0Q2fB%FO806T#6,CSY%-t3M%D*NP)r'k5d,FQmN[eFj*Woa*$QWjTJ*dT9t[)-CU$iq(H]hXMqVi=82ST4%+P(jm4%,@5t1pmJ5;jq8iKH,1CEKUqEF.&NGBc4On%E!DVmJ!e*+<gjRa;9I%ujXgQsH1i/]lP;HaJR(6\M77X142b#7@frZYO];,+B>.jE[IPVMB(<)_Kj[tMJ6=Gm"H$[/'c(g,:j]Pr%[S*+,N'D-?2!7UWc;BHY\]c^"Q%3XOLUE+"g[Lku/@ZNKE`cO:/CGd$,HWs8K035&eH$f!#"-/r32h#Q*2g-,8$SFgZ"OTl3q1@6%li=d$ea+nkf)3rA?03ZA#t#GH0_c>s.6Y2C9NZ"mrG!7%,JcUg3:"*m"`On-?3._bb>rTaW8]';UhIQ0&ScoT_ucts15RckqFXqf%1sAgd&SDIe4"sk1UldR(2E[$XLIYlWL=K=mKSiPDCI`6D0UPg:(BpTHq7=)3gL#A*=Goc'n4AC1f%LI1oU0%k)Wk<jNJGg3<RkD?%9BG>af"VWs!U</?cuh8Vs!]7[-Cu"Om_S2PCpJLfBJPZARJP.2_c_95-o-n,chXZon9>Jg]Mu<u5-6Nr42P&#18Q(5P1"p@LTEo^%-rAZ2IN<*nB18!"]A]<@ksi!nR\uBnD<7a-;$Mn.^md^LiSN8<T&:12BeW<gL9Ji9D2rG##cBbPOiohG,Q_h)*pY[GAl8-e'Bj`0%1o(t.^po+9#Mms3J=H),_A@"P9ON(LKi'J1lXl7dRek73'2A@+Gp*q7K:Alti8sGLXFD*/S?1:Ga^b&+=?V>U`eFJPQ$Kt.IN/&\%e.2m`#)XMa1VXDIjZt)I5T?93)2#8n)LR[/iaBI.I=56%dB3d[DV"PnPL56HLSR?F-r-A[r&W4f:5U<KQc%Pgl&"PXRb<D%BduUl%M\8ikckQ)Lf?*B#-E#?<oT!b9Ae>YVJNM4L'$uBrZ0(Q.if8/OnD,7YCb6atYOp_g:<j)k]i2T7%&@p@54e*;M9Md`K9\saf`HSH%J$JuaGX(lF-DaF<D6eV)$R?P<AUYZFat$tp%F8OtL0$^f,F[aSd#]IBarN]t5,otZ*@TcH"3C^hR9p2f=.[7?iLQ"n7^HftVj)@A%jf)cb##`:``.FVF#u<^E3T<opZ<AC>L06_G46N.tOK/*OXOlrRJ_c!ML=83o/'OHdYh>Sn57/JFDGo1;?J,F[(oGXW3mbOE#>u:$%TCjkTql+9f.;ddRPP%"a+B?APR9t`Uo#;_AFo6X<CNum-=Q$pXV\Nh04?bU_"a`7%ks4dU*_8.CIHK.4k)DNcape-JO2K^/bu76H%[dmD'-j.R!%HA,b^lHMc0l89-8Hl;E)m;W_!oWUdHBElbI+>RP82?9]kH\F3@ocOR"J-BCHdIk+O$Y$tKNgVVYIW>9^>fc,dI<]9%HkNefk;sMO6'[#^L:YU4!t?nRR7u7S@Augm#4I<@AGs^@)Uipt?o>.][7c@%h!>5Llooa;i2<ZK'VZ!m8(;$t*R;fk7Zr<Z4I7p\%a1#6C%rq)kG*i=[=B^90%mt!qPtajuMBB,>AKX"-0(\Boo/nOd%,MH^E(kJEVl&.CZtV$l-&XO?WpgHE9sSUC+"oA)^/dF`X>@*m%9!_ufUKJd4"EYRU2SgGZFW*R.Nn1Bn/F/j@MPIF=(>h#)Fc7VVYT#mDUt^e,==M"t;i#LZWnb//0;AggRZ*Z]D5PbrZK23j/d,N%%0`=*(L<E3W:Cs>JJ.Pl_TM.Q$?=e4jc.%8@SYOd,fk#UM9q&C(W'"IJBsJ3_4l:"NasjFWKG"**FM;&]7:n!f0p3:>,6_iei%KJ4%^@hpuZaMpaP>r0t[9%O>F-;)33nZFt-^%2#fM!=#'FN=?';lE:>_Md@-BX`o0NnjG**Bf--o,/;O&Y^ULRLf.Cl0t/`XYFQ?gR;h%;e2g-R[g3ob#18oa+U^OH7E8u;4e0T`[VukV5CgRF!24?Cgf7B-mk5dTGD=-ois2Q5Hr?/3n):UJ^k'D$J<R6?sl1j*mtJ?r`.P-%ZC4O68X`pV,*#)KItL4_/MjZNnZD'rV1RAAmj1K$S+;PJCGu]_Cgi0HQN$^62flkKL=Y<:=<50T8:[G>RS^+ehd)eJ<&*-=If3n\%.82I+MkA].Na)M:eIlr5>%5`%ef`3Bc,s3UXDGjWRT7(!dCRH2bW3e#D.'WAcJ7X#7jH">+8./<(kldEep+4u)d?H?XgYbk,\sSK%BsY"d:*In[.f&Edk8[n;-<;=%(5a'/.9-#e_GW[,KeQ<GcsS["%kGoCqe?Q&SY`r-<_NH,XWsjdqZ](^3X'l8KXs_>/.j"b>rlX:%f^PrJVeF!<>>rc>X;!/uau"u6X9LkHJ97Pobu"BH9,ssQe<#^2r%a__nd$,5Op2,'QFE'?Wg1n\@-^&18tOtECS=k<TB/]A/A4iS%W6B>MXE7?A6AOg1%bs%nJnda?l00tD*%*6lL<0(=H15)r07$d#]5c7dN2B5%b[nJB(Kk;hYb/&BN!@FX+#iE)p-jiA=")fj6Di^"%6LMX40f.0C/rBd="G!-CA4Q_4^rPb_5Z@igp%3?o?T1]pG3$8?;gFZ$hNAVU]4V].IjhWI,>0G8J7u<qGUQ4'g01d-7#$OiFri12%iP7?^2Vh<XP1DG<AU^bpLpKJ8fRb+Y^6?BrYX1h?,R=4eFI!JGVL,YBD'@D[hp>Lqm\"nK']LAa,j$jh`XT.-a38b/I@d<t5.*aD%YiAp3lW^$(XO[G/M@?@]QEk6V7:?"\"YR]#jsd?:W0>`(R)aS_Z(FblBJL[;##(N:IL&K<ppjRU9L!AYN*'59Z"1WM&d17#:nt64%h$@CJn>""oEO&W0TU<omO;a"Icb,"_[9BIdZS2N?gC[c3hETNem/Bg.hstY]$l&'A=F&^oQ]]:]f\<*/(&6<N8l3`Cc:P<=4$IP0%ASAOunPe*14B!%Rb)(&@'>#G^3`bB%5Y5BY)HWXT.,HsS>5(@Mq/rDL+5WbpAZA?uITm$OLbL/8#)P!m%YD'F\-%4h:QHXa<lmnD%bch'5H]c^5cF7Z@8i_=eqmi"gMD^+3G49V7Gq/T<"5d;7Og\^\"3TS,8ucp]8S\n$nQnCsB@Z!PSIpV43-E5R!OjE5(ReNZlOfeZ%fJ70s8JSsgR]I451i!1kUFBgHb&npt58guM3fn)te=,m;bZE;NTa*aq?>iCcMa>l^Opk+6^_#ah40fX,EXfcl6(N$MO\Z=(N`sfO%A%m>cb!'-"#PQqpT7TM*1*6a\3Yhl,,?e3/09+6Pkj\.Ib*9,-!)%ICqAW"LNjLuj0(\0a:r2'Tnj1os!_b)5FJm3/alYV1MC,co%Zd2c^,'7UH[Q`l_Y#]$VXSn_..)7=W,ek)A]#_G+3Q4Rc&6P'==Flq.5]4pha-ts)L1C@$IZT.-'j1$<n5:;1:g(R?jJ8dqX\##"%H@^*M)r=As:>#u.LC%$?9f?:p@@Yu:NF36rWgVgrs,u<oiepnIbUB-)B4[LV^afnLRN'G!niLBPUGZb,R9rEnYFBM9!/QqHJ9SlU%BT_[JD$jBqGU)fp[O!Z,2C#7&8#*<ZQ8nlpqjS;P'mTii%c2JePE^$HbC!#>Z2>=m$$'<M^sNRl&/55++"6>t_9ZaZDLK^Fj&gt+%`J`P+.KD*E$<a".-\XNO$0ShBQ[a^#i2c#PP%i/GNTA,qTbNR\)BNuhWKho#lTD7&K.U&_,F3Wh1q(Mtck\a,rr&<7!\GZ%LRXh7%F"<MoaR/,P/kr!/DOhKOMkKmi0E@p@SOO3Bei_,ec/CC%N+2lB=fW_)#7W+sMeoZ8=)$tiKoQ-`Pd$18;)HJrLSA2@CI?RqC4+q]%\OrR(cWoUJP.\59S$X(cK9V@>XkPmXo#@+"cq,:;5ds/_,FhkqM@Jnf7B'=$^>dc_7:Fme$^YrqlU[89a8DMS^chC"caBs1BMeA@%I7EVr4cKN;lSRPo\%oPR/B>s>OXCM2:(5IQZeq!SSkFLOI-0%KVO#=.(DQmhP4LI23u5.E9qMY^Z;<M,58[(X<JK#Ib@c9"o#G?Q%nH\d!liq\"f=mrJ`B/>ObsEN6E$e`I&M@RJO#W$N0s4('Z@(eMP-"C6i,CG4Z>s^f[k7b4"u;dM#o"rB;0]VVn*"OgE)-g\Or@Hp%QsU(#@5KMi;Mk=Z9L.u%\ZFEPfUa5[7[LmY1jeMCeH2WPL2WA]3E%3;-kB>a<^j>m6Rn`(Fin$!YmM8D?mQOB.p4t#0'hQe!-o!,%:,[kK?b;O\'CFcj;$IZc2D^!cKj1.N9^r#a+nBHU3A6;/NnN:&OO/*3bF6>,Cd8b=^5M*ZG8a@]oB=<AC[mLqI%Y`W6:0u$jYOX]%1iH\kBWBKlrQF\ZjPK?'HKO\bZ@;O76L$Pm1VXE4jin/>9i\d+fC2m$$LTN>I3,7NMGRFOOU^mH8P1@f(G@&0NbCWJlTk((KnQNW%s(6[!hG_m>;VJLCX-,=X8.F<_0!)h9fPYT8IQoJVI,"s6C9IH#4?onN$_5/RMYKo`lc$\hR@4O0<U$eq_diL:CJS>Ls.2'P!,&Y[%>N&NS4"GTF2eE5^a,+9X2&*b;Jrmmt;Em16q/r@8(+p9Gai%VJU.pqQV9A_%iN^Wm@HGbN?+rmek`pS*];9u%Y?f^T$;h!?piDj1%LU6QIO^oT68sf2h*ckX$HY<jHUYAk[Y[[",4tD%$V0&C*+_spZ')6O9?O*%_=]&]PX3/1[+,BU?1n0`$$J/A$U'r=:[kjp:at19K%_U7Ua&'SEi'="0fpgQusPqMBt4a><n'WtU+*a!N2T'ZPqJ"m8RNOpYB$2h?X:C>^V[b)LND1/>E+)%\&Ac9gAm+Fh7Ml^s'#JAc"%!mfq=GqB8Jn>$V,+FubDq8j[?Bd=RpWq()Z-[W)$n><<G.30gcaBFgZ#6$aI7tph"/!:<?<V\T>j7&Y/As^q5iVG$,P^ru:&pp/P%Q73l]Q>os8Oh",dR5pX7n^8ILWmYJ'iM@'sqdhZE['j804TGZ?P[UjDY@gCqPW"DCp-8_0*qS\_Z[D#RSg8^EVo_2&Pof6uL=\L+%k&l%MqR&u<U)B7u4*h:a78I&N.3od1WMuc@r&U@5-]KAR8QE@'fC1Qp_S-FucGL>e&OXXPmc#hY5tWM^+0lYn+FubDq/r?UAIha?%q)@X"n=H(\PL?>1>a6k_5kC0u8!N-73%+EZ/SG+A8L)>B;jAEiPCN(t3CGZ*'lhsF0@iTT;m>d)>Wm9+'GJBbe1oKdILO<q]046(%WcVDD1;&B*fVGn-K2'qcm"#B?4Qa\/dD+FgXJngYoeBd[Xmd*ffq`__G[h7@nE2Mj!V#8TO^t,bb.h*Z1;'6JAs^qE>Ic4dP^ru:%U4qe^)[95EcH0a#:j2D-KThAbP<6*k)`''H[0\`#.4)E/[(ZNC;jB!$2*CS+X(,OIk7rhECl)D3@=%g5!5FHBL,0j<`ain#/pXnU%:7Wu/_.)?O>1M,g.^d7gR:D8NZB#;6dH>Tf]4P!i:b-,q,`A0M7HneuK4C+E_5+(d(9ST4FhZfT4;BRb[ejM-P!3ZoMnp]5RGh44%+f"7T3Q!F(dqYcl,p4?qQT6F]5*.:9BA9fEP"uuf"Ho?u=g-e\&Ls:'NB6?=KbO@+\&%djXXu!H=KMCmFi&uD2,`SChGj(E4qtH;%ZoO'B)PB\SKmi*Md>VNd&mOX<dF8;SPT>AWd;948B1t#OYo`SI:ZB:51h'm7B]G:2s2LSZZ(=^rcYJ3N?k[m,P#6g3/osdN/dCr4%hf.YgBHJD?A3[SqUhEHQN.K/u%1g@aJhAe7*Y@4bfbJh(rJM@9#==AX=lZ<VEBU[;59ckQB&IGD5&r&5Kd[$0>.Ml/,l'2Mc5smt%ius5IR3o923A'W1KHs3@G<"XW15*M<;dL8gq3G$NUkE"t)o#0a2?Vl7/M@q61A7!*S8Pr!@<Y1PqldLbh.gClOFhIqEMKK[mr-bs%*q^96<O&]/>c@hP%rBN/fUS-.=D]rtX5hKiB1%@[,K&Z#7_h&5PesNnRpts.O)Oa2i-1GI1Af;I'Np!;,m;j9IAaoiquF5\Ih=`G%Y$=>;8&V%%Q*X>llTI?b-8=:L$#pYPp/PH=<iIIQc^^3c+3"`BOI>3HGF^*u1Wcf3XOlsG&`Lmh%G3Rk6%[T:T.'e%NSEZm_:!g\%f4>X")\WdC:Oh]>l&,2?P`<"<&P1iqA\R:4prp11HrOBhe"8Fg%Hbrk4eU`>_?c\l;a-k0#Y<RO,s)kpf)l3hkGUBi*coVh77d]q%]KudL=*4FSHmV,qQh;7<X(ej.:9((Z<k*O-q(8>ho3Ki(-]3r8?o`lC8/,":Z$:lYm#+hj-?Z]hR:!GR)&ViOHo&HB+samHZlVB!%Z`YH%Qh;8'Y;#hu!+<7#?iqV`m9<\=@XRPW/E;I:#;6\QRWUJm_^`eod:[iPNcW#!YW+o.fT0QB5!pe;cBpV/YEHZ,KWKRP(`kd2%"mDJphNd>e/-uY3/i]%KKId>8VdphshB[SPWTU_9r&W3;8H-mInFKf_1;"]C`OhA+WQDcR?R:2'W@,4%r&U@5(WkQ;Jpon!)d^g+%p'l/j-3]/>At?.ea%/J&[2^*T*@^tNq7B6^bC/O)J`]DlGF">ich]W6Vl&.CZtV$l-&XO?HE+kB!H_j5VR>Jpni((0I)eP.1ib\=%.nVRYRV9=7D0W`tZ%I_)*6(akb"sC.5(AKe`k-[NN&-)M=S$g4?t/;LEaq8Qs$te2?<NHO=B^=)_'STgI1bc/s**l9ReNVI0nKX=%e'lj4&]b4*5[ksWiO/uoRI=eNT+-bp`f@,P"+fdN#Hf6-8(N/lSmiX!4?.SZI6FF68s<bk%bOUmT!H(/3+_$Ylt>IQc!@m/\7FN;%S^4BSGqCKu,m?&*5LYT]'VM'5WN9"8s-;gJ7nR!C?a=jt^iS2TbWd&8qd"3`^uIJJ=`9XNdkjiLh6kd9,s,\r\a0=:OE=Jr)9Wkd%BeJ*bcq.V,B(hfT%_,.9*nU53>0H7,VXbi2c_nB,XCb\)lt6#mj(Yn['X-MKjLX\Jk+<+-S+se\3hKRT@<oUMc_m#qhWn+k0B3/d%ANqsMD!oH8pqYuPT39q>=pdA5!-bZ:!62q^`lR>Y6[6Zk.IAP?`!<HgIUrH2d(G2GI'3('olbV):%OIp6X(R2Z;1\XFkNCIa((A0%`cq:R8aG'm3ZhMnie'>;`d@YI!dRH.muu=<p>#<so<&&k`Z2KNk9K:W/FSq"fa-i>X>Zf%AIc$/Y+M,#_h0o1_!*j$=Du*0]/b-4%hfj.GUNg2WZKJB_RIC(B(UM]!cZ;:Urkn=+X(XCX]'66$6?\7%26AR?DhV\tK<pk/Xp+,l('VT4V@@5Q$$BFnE:UOg,CU0*CbWVs%A%iRXl(.&e0b,b+.(!]@s/H`OI8R@JA*Qa^T^H6An&!FgRF1AUDUSo9mIA,b9nJ!G+\A!L8q!O"^T06q.M.\Q&@<q'b6b&55Qh0c%Z_Zmk[\u@t7K3/6<qQ9Tob3&Y[PP]K\d-XI?ZPQ(`*@Z56$qs<7^.k3BYAoI^][FC>>JU&%,?4.;RArE0%gb_ApkFiI*+?);;i#h%A[<=E,O$8TcF8:eY&SVTk%lf$pW0j6nA^BK,d@<V,6Mu0feE8Q-gWbbZ%LfeR,Gcp#)+$V3GuWm2Ob>#Vf6P$2-'UrS1Rb_o6&_I%Z_Fm4i#/u_\Ai:IX,jG,am8rG&Zpq+IE>%%T?*lG)Pd.`WZRY8a!$MR1*W_7@*n6c2XX`YJNh\MkBE@H;]a-7(H]m<CY,\r3[jSM%3q#ADIWjl'Xt-PK;!'TVFmgZ*;p16G5=X+E:k<tW]bj5fl]b1&D>7ZCAt2_%&m_6#$)OHT9\;l9fgX8g.&<&-kocEHB!J/'e([;p%I5A^#bh4-KJ@,;1\71h6cq+C#B*:"!,088K7>?^#05JJ6J=CCR^5Sg$KcEdcX?mjk=Ve#2i#7AG\$sGs2fnl;I-jdd0%X+"<fMjd%E)Ii9k]3q8OisC716lE\B;.kiQ"JX1Y9;k4GV:Np2P-U=E]OUef$Lrtf?i_+o<lUA3;@$+*N!=#,<CGF.Oe5NLSUc&LQ8O?B/0gU%dm9.]eJra7;:QBBb3dJM$KiaAIa4'93bNo&7*e>?=Xs2<j)R#*QL2V:/J%lCG*$P*iUMUjO`a]%3d'$H/#&8<&7c*k^f.1I;[ftE%]P0lUoDoM]I\_;GIG`E8,P.c+'pq\J6"u<t3LaDT953VId[p$6M1)sp16Q`KQqj(-fr*1Ge<bSt<m1QVrE+A[8G-"Q]=NDbhb`GK%Dmm`;,uY<e%0!WYcj93`-sT3"9]Z;+/9M.()?ISgV,_ZQg2^&:BMB:$)f#,<_RW+m=ZnM>(_'j_bVceS_p&t&Zt<b'Y5C-J_eunW%"G(9217tsQqSm02`X2JT#/YWZk]=X:ba551,t<a"(IJ17hIiLRL#<mT`7j*!P9bZJ:NdZKH\"oOi0c[_'^/.tifPi4W]2aaAnfLQ%34ZVT$D3`9N$^89\PNrP"q]"*rBI8YAkuRR0I_gN:ir-F&/jstoUQi.Q&UB5k[nZYIGNO^.%F)_GC):5ROW\s^&fNIRqrupmF_SO%(9.i!SL2IO4TPdnQl'ZCL"7sc+-S_7<"1V4F_$4]0&;8-f+DY[\Ta)e:[H1#$NAC31*7/)O);*mOb'Ja(;GmV)+C?OQi;_pI1\o-%PF+PsDOH#V(>LcIprrYGOhPuj8a8N=l7Xa!94JrEYN8VDVcuKurn)X-9!/p#F9N#VpWLn2Db`;qKL*_Wgr)\,Fs$6peg)mhAqe%W%A<CZknX93q((D0kX6K091#jq]_LHM*7:H5q1n`E>q9/>4Wkl-@Y@CJQ\OW!]BQm%fHI0pX*$bk!gQ3J<)%Z,G9'?ba'?iLACa>'N%"SdJdV%%;LV0uRf<>pZBZ5]pa8#a^oP'^9CYL0M@a(OOMO#O19]7BT:"(=t#g/nP+[n:%K@TkQPlsX6*K11&)PJ^J8dA^pDnX93Y%i&CNqCfYpL\d[eOg3?JVF-$T+]L3@u_c%,#m"0,beUP1Wl#Xg=bWl,S3a-$BlSHVrK*b#uiSgjI>5fdm#/$&NI!C#t!p:?T$*h88%?MUh_rpjRtGhb2CW74k7S/ED[F4gj(+("ge9d*jY%,^;m:qYJc^[b\s&KNla#IeHG&7ZsB7/mhQ'boK@VY8819VtE^o3`WUQh4JK%@+3;fH6WXG]]17*(#7Y4fD;%hqs@:]+gnLJpfmEl;>ZX@bqu%TKBO8.F,rL,m)8h.91%EI>jdI7PT<n6ah$@YSGO*L%>8u[9K%Y3%Jk7V$#s8I[&m=n>'V.MS+]@s$DV)DY1\3,"pF?t[GoNcrccK(4D3B10HmDW4.//P0Ht<3,jq[XL,\4)YEt(2p1LFA!V,S>j>j\dX%gRL,u7-7B$,UN/)knElco)3&?A!^;03ibFgT/V#X8QFBHj"p:LQ*b9pBVa-\0ij8V821SVMnYe)F\si><EC<M5_&;K76beHB^aOB%YC9'SS?O70V%eDDEA.n69R4PnWMt,)P;!cV#=af6'qO7>>*t_A6<ZR!F'hIV1@4JR=#TF>;\_*Dg8)uBAja:X4EjMOmn-3V)4]"D%dHjWegn["Pp/gD"#Q+J`ptWaRg%+qRmVe^N"mL*F:<ZeXnGDU?UStE"1Q0`=$m+l`e&I5D=aZ[okN3(VQU3E_/8DVeC>M[r9]V?3%.MMS_"b9Lm9V"WJn7A\_J/@sMj\)e56,>XjIe$tS.%fT,YImT]\DoC:.nq21+YD3"F-h0VHonb+%'t2EK[=($X18:X*o]+%4GG?K%8YsU(hM2<e]]1g>Q)D-'+Y#cE$FKl'5JK+E%"&4]Qe6ri?eH`8E&a60Pm7t/]pnZU_bSFB,T5FhGT=8;^_"+<0eue9o#OAX?+srX%l]kE9)L-XAr`OM48SofrVPX.7WHOQTSlr8Y.EpjA4''f[c`i,ICo!"`*aDsQ3>dDPm)__:T5mh)&\+>cOE!m&PVb1mf:uVEXYT[7%>R>`[eV7d\?na1/EhdW2^ie1gXBD.=bb4[(;cT3V1f-^d2YkS]MEV\@DP\R.7<nY2E+LG4@+K?9lSi>]o8H]7hCettYBXUW0cD"Y%3TP=Zl\U2oG)QFK5'2!XVR_O!Bh%<f(OE0Mq9T,65QOOj7+--,`NE!0\!DK_42e;5-:XVqZcVd/5e&Om&;P:jmm%=NUm`$O#>lUC%)<o)@Dkj!!"D_SJLKM:n\NTnfCtEeO#MCk_`OteBX(u,8RJFm:EXHe).TBP-pm8ci9p<:>8<gGRaa3&e>G`+H9Ct1e:Pu<BYY:VN%#"k5+P:gM<aS`B>Z0\RI`sQ9`ZRo_19*V6#`,fHqGtA60Zh<u/jGYM$-ktaFbb1p,HZH6X]2$[0oD$OWS^oDH7#E<64JNeBl.S!p%?I;NKract.@3T&ET\Mq<(&>a0&F3@j@R+Bd.i)OT37B?%;nLkTFNlp31]J:dlXPI-fI`8SVJSo<l<a$m6m9MqaX-O+NIicUU'I6H%[7NB>@&1otNf0WBT[[L1M;=_loN@7ho;,\`Sl]6?qA'$0o!K3#<mWEedAg.]E_S&^[nrYtQH2d]A7Z%s",KV'.*,..GQ!$[_jtQM%lC%J%,B*k841-"c1GlH0802>PVHHL+;3UrN?=1k19t;pp@WtXAj[b\,&HNDN$=aef9kdqN?2&&U3K$Dib>XPUjQo@m]iVWcAF%c<%'rMoV;CfuLD-":S"\%e327[h(#^jUAXf^\ViS:6P*BQ%VCg=D1NQW>`*OI'W[Cdc])=*BW`eF[)0^gNq53'e#agB%:j@Bf]%<iLA%Og5A.?rFWmE4KIKk+<*BFMH+0A552.h'W<V4ZKbH_t&B\?\O7*_!'s-8BK`4W%a@739HC?/Mah53+_%=(6?\CYQVIPAq\dl(0iWa%?IQZq?H[*u8nH-h6JHlrZrN:@P[d9c-O^1Ig"(bt4btrK1u:C9s8NLlE31;IDAi5^fb<u'7OdB;.:Q%7a+gt&8r\^)Atp-Q(e)D$%"@1d^<j=_qdN_SBfa(3Z8!&j"E8Pf11OJ&n[Kskm:Abhh%]lf13d]jkAl8Q"1^)cM\K3SL,OtC?dB2mn$mZdkg:F:!`"52f38LDD%XuV_Zk0#iB$F(/"Y2-)_dI'8)?;Pq`Um<828O$\"8V?C0:n/O[[s:d>+t@RAH9="`ltL\J9V(`$o4@S4GR0816"H[UAD.&u9Vt?&%DA9o)O9e+((@Q4MlC+MnAptcP:3EF=Liueua>.:RHm"J/I\%r%Wphp/<j!/+I*cQg4-gphrg1_b.2R8emd.)l<8j8@g119bZr7TT%C8]1o#Y[t3_NgrXAar;"N1]k@3>A%)0("=-psd$PW1ATP-hHWZUsGGl0jb,Qc?G*J.e1X]h_G?l3Z;*sAbaWD!`X8UEQ'E@4=Qei%F??gYA\N4tmkcXAme-2Nc?eZt5/-O8eZ/IK`JTms<Sln_'Sus3P=Oc,;dE\Hp<LmkhBJpe.?U@J<1P_S^:r/Clg=6U6OX[m[5^L/%4(n8Y!C!BkSMK\OZLEl>l(m)Cgq#,'/DDYd,DWKVNu`aboUE:#eI-R>QOI,JhN@J7hWVUs.ZB9s6R,%t*G(.>?[5CPS)jN0PCnlB%V$D_R+;Uq/h'gCs.g+ZU:Wu$BRX<uUP(Cde4gP()nnqn->tWGiq_%2YaUQk+]ef9+k,u?hDRfW*,O;bMW)+U6W0DYbIGl^p9`.S<%83QF;[%V`,gi*_W4#?nQB^U)`,6M:Woo\ojGn3VjQdSf:SQ)mf#0f#A%l_3N1aMJp2EPWJE2+1>`A8n]Xh6Fp^:s%LkNh5^^b=]?%P<+/??W#$<h0Pm-F+)q<M,XY'Z!>U:=[?*QMOM^T6Kgl;]/>oiB>IMfNS6HM?Z0&Ob&^SX&.JIXLk8`]r`;k7HA.7s`6@!VhDmQr%?j?@.=s!!l9;/VbP0"-0@MDeANfg;@GM_uS)J+,)^0Z#j>Nt5$Am<&'M@rEs\MI%.GKP<64)hp*T#R;3q-*==H!#:m%Db(>m9rR!%lBTJ0X2lYd_P=6fFJ?>fVkV$r?EC0G=X8C9c,<$MU/qE1+Rd6rD),+FV,T;#qdfY`[FEWl9,?,+'bflU%%A<P-lPYD/b/19Y?*c/%<!eEDq?il/be]!T`YZlW.dkN.j]u&m'`:ju[X'drTS,r`q+<:0Zo2"JD>afiF#'-,=NnAc)UEY+:m88O2^QjV_q<8Y=%]3N5@I)`%)f(Y]#S$i)c0P%]Oc`?5Blg\rP=sG])9'I&EYbo+q*pS9EMF)s;*-a7hE\?Vk('"j?dEL""W6:D@3*<D!gjS02oY=sd\?fQBWH9(%Kd\+*&M<Zb'QRMqAscu.lWXR1?^@EB`Q>_`?V:46Hu60(HhnEj/?H!l*e((?Vp:g.MiPZIo>'3"p%O[`'hW>_>SK4%SVF#/R6:jK%!8\G$d+o)adTlC)cHLd`WdN6&Nu2`%[NIpL82huJG3OGD/+2:t?Ra2Rn0CO*/GH7]_cJAEjogjFQ$8Q.%h3sQJ=M!<V[QhJJN?ro%XEtQDE*DpH^JWT*TdcheOOGjjS6r413g#Z@<G!/XeLQ#7?%YJ!6af@ZT\,NXK=]W]_fq-bfd+PW&N#.R6CAA62$dB^M_.tT-L$Au%-C+*qa&SnK+](c&$?`KH`WdKPCQF+JpX)?GMDo!lU96d:GZU;9;@i;S\e^EVORhf8$o>X$?#.0RJLB;jOlci4h']P.g&l4D;Tad+%[s0Hh-Xp5S9TO\OFUg;ImhP%io8Vin11uYJ+\boeO<q7a$$P&)SLhGDENra*Hj'g_[X:I^gK.a6Xu5*9^*@^maQ'.fCF5rcfQk4c%f-3Y$PMcULX-oTICN7eRU`Z-NEb/TeXu5+h]-Hp.dIbM4"(;=-eSi[>89*@VidXFeZ[BfiJUg&OqFCtijot;Hc^8Lm2tZOZS/p&6%a"0Qr5r1,Xne^L.'Y0CoQHccuI0X&1K$N@IOjjp"ahNJ22;_BD,P/<7q.J2a%d#Bm4[@WMYNY=&KM9r8Ifiu_Y5nJ,0uV-tBGQPS%CfJf.'+D%k'5-HCO5t::,<r8tDh5&cU'&%cgO_i;@)iP_`n(;h,[(d%F#]q?TMGpX-=(N7OZ>I8b'=IpOH!Do)]G'Dku3Eden]O<%[Xir??.o:b5s[@LnEhBYod`qG7"[7XBeHM*.51oc.^/IAn"=I@2;@*6I-LSq$*=,r!jJj5kSb/GOfY=VeZ,lmTPN0rb_#L0N-L$k%s,=P?>f.6#bh46a&Cd1>5RcBLFq"gD'Xsr#'S"@'`%3]/6,'Cir@C[3?c&s'f5Q<to8h9!BYg!OT'15#J:Z&\/YBsbqsN#E2,l.]%Ut@'.6sXR\m/Jm5j_H>DP0OR]fXUZ;l5C@W^iVROI=s-?pk?;69A>i*9$YPq`E0!Rc%W<MB)XM'rKAj88X*V44]'ad)0@a4PY)c.%ce_ONTYNVmcl1-"YBQp\blqI(B"e<kH6K)LjGfF9Tmrc=6(nRtJ?)Pr>Zan=@+V'-oZ-R^<aP8)lrnJh_k3?(d@Ye&H#*MOUot$i%)DNN$21pOq_'P(a6Xq.9P1/7>GioiJY1Sm4`rc4f.7_p2X;feOQN;<$Z4lE/\7Et`["$U8/1hS4CHs`W#J)BYrWB]CR@'Se=X7r%%^>;/Y2&E@LRJH$g-8dC^U!?[<6H_OF,%;GrjI6Pjam&(4r.VY(9Lq1Qkjf@YfBA7)[M2"T:#>4$qn"#SD3RWh/sJ6Y?7BD\4+6l.%Eill5L!Rup-ILY5qI5)S!HF)'cV?qYIr2:(%<65p>M^L*2-2<rRJF/F2qr^I>^P3!46"uC96c0#em&Y:BBGid4e8Z9inD:G])e3\%ID%RiCX(BnEoaoS@D=tea8.gP#t-Zm;O3^M$b3Wbf\^(E1fnb<RJ@2HkbFGrQ0^+#!P,WFRMq_+%FE%b>MI,F^n0d_a(Ssn]USP=%?mk(e\@mU!J?DJN5Y2!tZ3c#!kQRFuq@,VVF&e!eR=BBOL_ogt/hlcNl]pPAV/Yj0pmD>tTrr6q8T.GWR]ALAbl#W7rQ<+X7U=bZ%o5:LBS"/CUe@"Eg^-"2Y>J0&sDl@G%0+5/DN-JW8&(J!]G4uI2>'!\&Sscdo7!25!*+]k[gecUol1I.'g+u>#$?`J]ap68:QWF%_%aDj^UHb>Qt5hDTG/[)CiR]AR>b^ANhIQpigiPqJ8?$F5mkG-]\d'`#9%QcIRDV4DJa6+6+n!;;GE-qM1.7g'UG2U&#L>OZ)GKdJX%lgl-<mJ2M8$?N?F;Xd3=X%;/m%DX!*c,p;C[\BDfMA^kOY&0%.?MU)Y1r\@??[3!/`ZgDK=6nfubdC/2a:33-'?%Z%>\cN1kK*Qn%<;b$/gb@><WJheYg*S!6#'6oW7\?3=01k$k8N5#(9ht!Ani[UiYC(*:k`[7[c]o7+G(D[02Go%KV=l8^s2K@:moN!O&[FN>Z8]S,%@nOo>rEXkS*Rr,AY''!`?8.)d=?igu3mm07id]SE33m.A1,24tMr=YZ^@*mTOT!N2Qgr>ffqG[EGgd&O>Vfm8bWd$bR\UC$/h:`U%cI-sh#s#<j_t"Z&-6#?V-@J%R6n:?J&4O;>4nXp0S\cfXQQ(9^rcqh84,HH1^(YPH]G:a&)98U-7=,!JU6$FrP0kE2[ZSstig6I3%&od[!8*6EQc'qH^hZ5aChCe9"B-'rskc0h1G)F'M!`V4:,%D_9L0o4*>Wuo:MD\2J<^`-C9[#@sm7u[SJa7t/=g-pe*idhBNXZF3%AC0Ghf5+_i,S^O*=3B63hG]ZUdtqQ.jA$T&"p1?`Il9-%)M<H.jN.0.bPTh1qNTFAD=o@D=,k&@26lAhr3NpaD]47V8*%a[jWO^M%Kee;B5Ta?8'U"!Z`C`=uDksb8q"Medjr11?B)^K1h!^+n#-K1kAGq;FrRNe9.6Y&g;'e;8i/3!3r,,fVnVA$e<>VGbVD&OG+IPqN%C8O7g:LGBMWK&F7@3Z+WdMAM&L-)MB@?%jjjB'-pmd^K((cb#*9T&eOl'Eu(_#W-nmiGaH`f^)NUV?N%,dp$D[;_#TjtPjC?<Dd&%%^f/C,CsGWo*0i*b1S\pH\ir1lR#PF%qME5*>"p_UP*uX/f4N.r*qR3$ntdMYd&FnE--!H8CY1I\rq1<V6DIGbpBJ%?:O\9;%p$k%4+gVRZR]EpokK3,M:^s*SPm0r]#Hq)R=C/b&IL3dZ)2NKNf:uJ4Pd3>/"&2lGks+ejQ9b:#ST0g[u:T;E.6P'igTadB$Ma>1=j98%$r"0_k1^[D#CpjY58[)$4p,16OuM'"UM,?_Pt9s%"gBa2Nh[WKm>&8"/"N*78_VQ9NENg@$=_Gd<EI`u8T<]L^U1pKRk0$]_fOLB%s4W-8.)GtJX2JDZPk7RBd(cL(JiE/[)Qe,Br@nrLaTQ:1eC1d/)[9j_<M;\:^.kJS0TeXE;WpRn90ik:&]?M`bik$3"(P0?;I'T*%lTd\6gR!%W<]W&:(l_K"rKZ)%>ioJI$bQ%HChjE/>=IK(qs&+MfoXWZTLFe5PCR:5d%3%!.,LoQ2-9%`qm.FH!ErhrH>*BELR`q:%MbSc[RY7_7:)Sj_#3.E).*Gtj88/(5B*gnr$ekeUcRhPO,Bi([mNQ3aPkk=fEg-'a!JkKF:iN+ZQNIbArlk<`l/(*hV&l"l8;=JV%3C?l2\lF(dQ?H$[V_?XqV)._(dGV7m;oh$k5>MGr;5X+"\S$Z"9'mOGF^2[Z#/3LQ-Vs%an:;eA@/66?aD5s,W'Hq\B?iA6l-+NX%%QQ'TO;]n%G#i=Ic\@,2N%9=Sm(dlu/tj4g7-@pbbp-BqHH.*^_ac^aj*e5:!q)2O%U,Z11E2#n.\hT;YL+?&#(b)Tr2RWsKH5<@%/b5oq'fK$%WY6UEjT*-cl^Gmh;08oNOlEAAcb*u^WWbX='JUJ)LRcu%WcJj1\Sb`UmYg-EpN1#]/s8PMl_Q6=7Os`Qq^$@kaiNcl%dJD=+okB=NqCmO^;F+F=;P_6i')cKb[sbj-4e8!jFu89H_0h<^7CE<qVheV\F7,5C>1?o6dA!2]8XV0tkCt9MfT\Ya9T4l$]$d`i%:M8hUXNF!C&?Uh`nQRetWLQ_`CMaI,)I8a6H?D2Y+F<(@Mmk?@ROND8%(Z<><r]"8DUR^!SX?b*9JB!VkHHE/cQ+PW,l^QpoN4>P%F"4YYYiBL&*;W&YnfT$BTR4soc$!c,e*S'NFCr62+us0G1^h8aWu3QYi%8C^6F8=P_mEE9W@o>`RQ9XGQP('&Nl8u#WegSKE,O+e%JXr13fJWu=E+GV_H]ko*Ra8B$E*eH$*5b;T90-n'YN6iQrfZ'<\Ki<^<2R/R?lpnQP)/4VIG/GcSm=+jKE>ZCP^pr#+.9;H8t-5!%"c?sW6UbI`i=WLK$.K<'i^p^f0K0B1NH%SCmUJ/t\OW83LD6CL6J:]r(Ml4*87\6;*ETm3W"@-m5;!LrDG7tGOoL%6G;,:K.GQC)%dMH\I=r9&3<hb&.HIc`bO`Pk5kO?96m4L35=(4P(<]cQn_b:85:TA7s&HPVIMVJJOWQs"[."IL<Mc[ND/Cu0n"pD)<6%qliFZ]nR%\*.nJ%_T!8Jcb=KcbMPJF*DZAaW+@=7\nBJPZ?-[f45rJH!m^V?7p\9*&<STk1rjgCI,h150#0Bf)VX'o4>?LBIX/D2Q<6>i]Md1%$TuIsfa^r)E<baMh@q`fEYaQ/$8VjgTf"K<0jOmGcHIrJ:!TpVS#WjM6N0GaajY,Z?^#bQT)n]!"!X)2P$9"aR)dMDY'Z?r#OKBV%=mi4b;g*efg?U;5)okJI^?'-%_#qE:A(cg^KgL9m].0rT1Ik(;Q\#3O/[n>p%8])A?a`f4SO1h(epP/FA%%$68E<M#o'0f+M5XuV%g/:Qi;5,OQ\ua[LE/&'t@>)@pa;]t5q0i[P]P0R]!2VLC[E2fKLna?Yok-":4Fl@6fmalAr>Q(GY9CZ<$c/D#qOP9okhh#aYfYZi%GN.F9T]jVtZ_rqg"cH20.UYKeYAbF:\G;F"9h!_IfmC1NI0kcEo-Hqu_B.q(*S96!RW/l!8>C!nO"@"*V(^"\"HCC',dHm\UJQl\%P(=&*PFI]j"!a:N`6OeHa(WPN't]VUVt-CXGYa4\F'EqqO@IpM@.X)*5KqPbg2^IgP0SDdC5,a.Ol[t<?H[.OYH-rWYB/X7PcBc+%8A$(u1n]t*WEOA>66]VrNt+D_KJbtQo=innihX-0.#+FE%-j/pL^Ti]261hAMpUYLS<tu$8GLOUA[a1P7R*-]C:BNB#YLj[8`hbi%7FCH[%tg^3J4ZuqqQSQ.ccPZB`W*no)dT4]Nk@U"8'k/%a3s8'W&FdN@>`cOp/S3jhNO#%fCG^MW:72qaAon0A`sal]BO)C1cd]C%.5+UXO]`9<XED^:JVl$41f\.)YA1UAr$u](2E+<^C[TN:q'CX0[7;$:VQtW&dqVF+3N_@<`mGdlL&"XA$L^BK%-0nm&VXG7Kt]_Q%3!kJ*_&Dq5dH?'$Gcr^i&r2MpK=+m'JJ&D#X.OIh,KU\EPY*t2U*u.af4d+%7M0nj$hE*=oc)st13;1)[J-i'5A0+O<rem4#'2`D%P2i>U<#,LBJ;l)(W%4EN#2Mf-m^El`]G&oHT/6)bNb7c%D@^&(_j.uXjQ[Jc'ku]ZM8BgTGgRNre*4FajiUP@miHm;YS6UY-BbQ!%qBa1,c!\c&!&5;CU&gftH/BTlP-6cj*R^Y1gt*TiVfgc>!Ui??^JQubk]=O7bh%h"p^+O/s47a,gHr="#Fa/J"n;079BT,a$u!7M%;uhK:dX#=.."]n1eT\'C`Tm'0%_T!P47PE(NdG'A*HRYO3R\UNV+WsEhk^K;c[f`=6nh';?7I0Ejes/Tf5LS]E:2-N%f(>2/(^$L%g1mmRFkppl0)P&-T2)K>np%pQKg*=LG$gU`_?a>!r.'&i=>*aV,h5pJYk.Xlk]QPcN,Q![\rh_]ig#(=PCI5Z2CYP+="SMlIU?lJ%Uisl76*c;@'U=O>G[=GZ2q;dHSEOe?m?BJND6gdnR`&TpV\D_Nd^MiFQoJ4/Kh4e%UDV._oRb/_8A(gXr1`^$1gdfIOYt=_N#IU3%Pr?iOheA`SqR0<":%:idYfX47kO@hT'T?3(Pm?=WRs[%>h1Hg<Q\!=Y4>LQ5AkEr*W"\rY3uSuHT9;>U]4Bi(hMLo/?DC&>H/GYV%JVgmq0e&pO2?X^s90$KRj4BSiV`L\OKp\A6KAAD.jij5HG&<'P-:t(qQ$N`^$$FB-!pPo!Dg<_]CO'XB``jjC?7op61?h[go"4!k%MLnq$TtoXhMJ*F1i6bK8k4+7)A=4=N(2Sqf69e;7TB#=Dm&n/TBBC;2WSH0i'?,Aa2#M^5'ij!TQI<c;A,bE_%#(_A$sH1\$?B+j%hW3.q5,NEjWSj"$+.KlXo#d@\RuH5uWT<<>Y.B3[PfQSXA]^ohI53de?H_B&,Vr[cc@qgmaJ]32De#/nU&qk,E,o-<jIhE>l`4H[%_ajS/$"0,?d<MpIE<Mqio)Yf%#/ct!J'9GJ`a+5)gFr>O)<cq@/@,XO;I!=^r5om8L@]4bSXX^)!Xo3Ac:te4'-!^F9h+N^g5MPZ%k'1Ul?2*9uRcQ9fGo@*/0]20cKd0=h/K)FDLj:3k;#i:C4W2m+5I,0KMF:8hS2,$e.S&W:PDgHYHo[5<Y.Kj/T3Vd4_[(sD`Lpn.%kk_l/Xm9N;&fE_S$Kb"HL@GEDF))FJDO(pjcAO2N3AP62!=]X>D.'<H4^tf'c6_C]eV?lW.m6)%?H\86GlXjTfp`?oXRXelV:<f3%!U6QIn/::*NFLCRKCd`@.V2X4_2JHBQEEt<7XkH/&\Xhoh)Dn,`;=$ien!;GaFs+0JUio.l+abiiV3OL0Ta0lbVtp;Le1qc%m$nC%`CBB?9h]BtqIdOQ2+QfP!La".f&!4G=(VZ(4Q+BYFS6XLWkXUrfCApVLi'\f7^H\EdrlCjJ+fP./k3R9I_<_)%3LJe!A0n5?*?]e%c.+g0k9`V:J!>'6>-87=<kau]J"WCR-Ng!H4gA<04Yn!Ss/>F7]Nh%(9qGHoH71P&W6gLPT/>=*qM!$W[+-KH01;sDiD7X>O#pp>%1+uUK)b#jVAKG>!h?'\E)bY9`^*6#(EDnDGfR!h<07c2=XQ%t\!hYoDE*eHd\(;<l&-o@Igei=DNe&Br$WD1dkYVA9Aehr#+qR0l%Y\G\MeUNd@,+6ENfX3+9*]^??1oCJ(%fD1Zg>o>[?=5(t[=q$3U\k`cS*^bUCDVf'Kkll,0uf2.WOsVnYDc)KE=2;/iS:4^LcR9R%0$3o9V8?oPd[h_UA*,<15B1"f;](b_Yf*6kHs\4Bb"Y_5d_cEc,d^.Z%pdQs8_A^D6)u2p6*%&GLhu:Iq$XA/HsY?[q8XZjC-;8&%POdIneS7#9WA::%,m'F43jN)8P827L-aHg+PnTtUBZ^[G0+gXMFMF",c"RuDS:W;i$p7:?JSpl_5S7JYJl4=b'kF[HVb`]Y*@R2R%46"K<Q=hH.7]jIPD71Sa6"EIe?:O@Wp]VG>Tm-Z3eQl+YcHJKlRQ!2OY3(^"lTZrh(W+-i8p?MYVlX7aOEB+(Xu#[qk,uA5+`XoV%S6=V;@]-!':g&,gVuEE!_PU$^_<B.AN&H1cmhd>+2,NYXqX^A)"%VJ<H9!_:/FB<?Ss$X"W3[E9I='Qg0e5@;e9Fi&<7`7t[\Cp[%#R;u,<F"%)8-C]ZN[KhPqg2#dRC/@4Cimg-S1l,1PK'VRVW,hDCNGu'K&MfJWXZMo<6=D`cs(,A2%!LrB4Otsqq]+HkNpFj"&5]=%PNj8BHdRp5mY)F0eA&)>Ti,,/X<:q7Z;mc#bE%b-JV%lEdnXB\=1Mb$WrXtN).$sn2<aDN>an\,+kMdF#7>b,`R6[#^]amWKROf-%\8lB]:NGS;?ojW(W2oLt,k)d'H)dO)liK3g%.TEVE7ac+f;,`/o+*Z\(E9aE<lP<AS#,R#hut@1K-F*4.+k!?(m/$Rp4f<jF$=`:%Ja.4Cd:80]bWe0-Ri0ZfImh76?_K76_.pg72%PGhI\Z1;G5D\u.4\)hYBf*5M9+]Ag:ZW&h)4B^aP2a?#]Z$UQ)ra*0cQ<b7?+ja%OeW6j-hE=B!*VN#KdXkSpb%R'33?bJ#+C7t*kj4HL^GB,Iuc5,H=[$NT?0KI1aQj2jp2mLpoo#tNIG0A5]o,IkTKs)bUA$#-?/+$%U3*b?kVhXa9$GJ0b]\Q6ag0[2\X_t1F&T0'"Z;O(Bmj(WNmq%-eo%"_%BV?j+AR%)jZ>2#J7<3K;n)j=HmEr*gZpX)ZWM4%kUiIp%Y#/XuhR:C2Ps_m$]8`kZNer0LBM>an9T"\O3]u"(%K/=i^MNbP_W*qiE8[/KK'K*Q0i&_%gdfoT+.emiO$YS*<]hoK=Z#jIT)eqR%OQnd.)iT:)V`&LCoSDR"-Y9*RG.\8N>dMAobWd%Zm8X_W\k5KD[QLOu7a\Cc%l[itjuaF.o%:8XAEB-:73LTYF`qBrg!J)N4IP(H%GgCFl_lg%hAGq;FOa(K*'fY1=.4(JC'h?gZl(J%0_ur"+V[QgZifX$D8.(X%FF].4Shr&;\9-,\[4P1?KQ=+k;p(R?/7g-JB2HF.%A%a:Reb!B+qU)c,B93Wi=o8"%AtWb(ru_AEdc\^LZdHlS$[&='.DSPf<,.<$OrT_r?A5M(:_FEK@ks^mX,-<YBnBNBXc,j41BB,l%h5&)P4YsQA%NlUr%gnNO<Pb)m5piE=Z\oN_7UCRb.p)6n*Rfk6$k"Vc,GD4aiBf(s=P$Cl;]"%k/*<99G@ka<6'Ai&i@<%mk08)W%W#MSOAQWIO\6kC,/*e+5!ZMIH6]B2QH;_B]7pNC[cHJM")I6djQrKm?`qF?/F@8N:H!Wp^UKC_;kWJ"erUuone9rg6#m@O$U[#.u%-f40b%]UN5g),+[.:Z+fV(@u=U8O&B=_#tLgLMq&AP&]$.WY]*[osl):,3/\RX<CTG7A%D1Ug(V/(9kQ-CqIm1C]A&dR&X2VD_"q%7!k-"59o"ZP>5>(g8SC@8""S4^o>e(DUN5]%a<1Bkas)@O*J_fcNF8fGJG9=Qr7+nISp<;D=do2i6`p+Dj.>4ChMll8+o^<1#O\R%N\g!l,Q%8Q:H&[23SsQUS_\?_OVgT`E1+^fY708JZ?PG8:GH(Z[54P60B853bN7P^DjQg)'u`r[5=Z!!kK)NO^;o<C;[+:5[V"Hp%..,QRD9VtMq%D3IfKf=rHHPp:j/NL_jN-!ia+HdTXUcf=8L'*&'V3I0gkQ9Uq:FrQL>pb<Wb^,@RJCJ_oB'o?"jD"!rJ0M5$CIG`%\d.%%;8::h\0_4tH%.aHj@rOiKc5#EXlUk"kU^q9M8++JBLG\t!LGU1_Q75lUE.=3UkWY[iL0LS6hBGoeV.aZB"_L,?-bX/o[$T.%FmP?D-VC@+KgSp`:o@[0Pr=m3BokR[X3R2Y@[@@jX8=tk/T*&PaH;P0^rFVaV&&.$dd*o]`c9,Ak*5$IMM1QNijX=.B"_6M??#KV%,a;&F6M-R$\g@iWR=G4f$q-H1=F&pk"\7W8RZ:K]0OusUKNVU`7q>WcJGI/8j=jd:C-]F"JCd-iZXSo<W0H5#aV08MPF`o^bZpX5%i(Ta#,g,>X[kXY0fs,=YV'ILJ&qTZ+5;V#$<If[b!^+$]<hnVI?]@O"TLl3pQE-k/4]+T,h4l?P3]$e$@s-Rh!-2Dua+gZ&U&e2s%7:?a]bTiD.(4rhe1/Sle2RX=]>J-c#EpIUciL3,XjSdbo88Jte-\*g:B*/V0"W:Z=okN(-l(Aa'-TW:e#lnB#R_I$_/,@(jA\$aK%R!Usuf:]T/F)=h3:J9:%QjdKmJchtVRRiH6'\XNlMkrn4#0jJiO<OaAKi&:?mtkHl]IF.Bhr1&j3aua+R_4">38$gY+0I0NOu*2_%Wt=A-QI-h^&eh38jg;i0Y=.7CK("oGRIpJgo?aQ32Q95=?a$Q_42j`GO8@\jcJ,i5Q(==YO207s(/i:gL@N1QUAcH+-O7ArJm&CW%Gp#Q+k/PLe5p!lK1+A/cI-\b_-@q_UIl8YQPoK%oD.hF'?Dln.1<W9;Dsk?DY+Mfm"N(X=`/P_JUNkb;\gE!!R=@+OD[)K;&F[oG%s00.CK?Bc`\rS"]b50Y]ZL4/&EFs+_T\qE``+8^IShr&;G[,kWlfD\j`T]-$brhfB#G0i#MEqkl7t"01R9RYROT?FT&1AYYaiA]2%i4A.Xf#ppo?q97n=intfnPS#mn>D\mP31'ps80ATM?3u"mfI>l2p'>Z`c\,Hgn'SMK0?Fs@m]&kIjcu>K)`!5VG8I]FB6^YG52i+%Vh=0ESkKp;9qi)l/(a+QY?*mM#$pZ_Onf6N>SLf&&<7OXB1P);1_5p`(8$a9`ZN\7gm1)b1,f9E:lE=ih3fH5>XFMSW,lG'Sie7_%-_5U+61182>HA!m0`BH&kj7F1aj%)=l1j95J6^W.j<i.U?kl"n!utrQ84fltd6hJI@(KbG16nWo.Wt$)bAgtES=)%nXp(d;`?>T0%Ic`?g.L?b,Ke:sT._/%&RYeV'gWW,*M55[q'FK5.Q"TR#N@r_J,O`s=,ZD!A1Qt,Cn=9b(BG8p$f%>[`F(dN?.HI.`UrlrFBJ#=A%09mkbDoh:^.lfDpq`&7&:K"h51?K?lEad^k_l6F?=LGUm1C^NOi76#//9=7^EeriHdY[:=5B]>(S=,jMQ(-4G_6#i/Y5*%-2rgF)%B[,lQlh(L(\ZF*-c?g?04Nhcm!U&oPLf`&X^pun#GBi,\F3nhN*l#XIUjM18F3j:spYe2sPbCQF2QfoQ]VUE1!u!'EdqdN>p]Y<m%488JDP1bPbHY0rshEB!Y'[f.dI*D1CA`.P<'<%EY23nc?E=SOZ?D*n5To+XK0e%.c.T:a<-hg3m&qS)hS6<&WdEdtQ8u*XQ2"H74%6ajOIjKtd]9Vr]G9K?#(;94#t826I)TCIfSj1_+QIl9+`bg6k%H?G^k!6GC4HtN>4j]*6KPe1As4f'D2STm3qa0Z))LTKqY:)S:=%lne7Zo;^S;>U&[iiZmWo3$qsl&ZrQOpO*DO?V;Q/.s87`d>$YIUjWkpi>8#PIl9.XS)P'3a&b7,hCe9"B-'rskc0h1G)F(Fn.Ke-%aF`%qB79:i(ahTeCUT!$gETE6=qs2%rCPr\JB(eP0kP.ab&Ir`'C1i/fsEk%(aB*?4,edV89V*`InRU#+/!it\S&)hE+'QQR=@+O%dAC'd`$@EWjbXBFqT/ICMkcOEAB\NS800MfD,1d@p^Z#kU>;</msjg(r[pif@/\d6O?8Hfo=MYg,O;bM(8YBRrs-"-q/o+,i_E)9%YA;kuBLD8r+Zhp'bK:i-J"@AKqr.DJ0)skJH+1;qDL"e9Tq@>Pf_P?V(@JYq!>][MQN;/m[unIs`Z]ll!Xq<"hF.KiRZ3qC-p4A/%NYG^P;\YfLod<ZGn;>"mj,V?mY4b(!JE"ER5B?b@ibetY+esenGY%\%$1JhC'D#KLnF&9.\F@@rS@<LRj82"[m>$WY'JGDqbKQN%%n(d:,/TD*4k96?ts'^2fFj*cRG<L)s`D-`L9O4<AL=_SBU=R&$[2"s'7M75t0pa-`YAlgI6(+?JZb/Su:0o7Y`th,"/T'G!Q[q$H%k$0jrqFU3,&odN5S=+jb1iEeRb>UB?rkm`E/")0O*fB5+l$%lteST>=rn6(k=-gY`.3)KojV>a;IF,H$kO&`0n#68RX]%R<G>d-k%r4=CsFdj@rIl8Q*,(ef@=[07L0(5KFmP9*'WfoJeMSNfl@edD+N[Y&HoA18(2VCK9YU>i3pWaPaS:r3R[CfY@TB$<)qh8UR;e?(K%AO(MgV'j5D>Mq8]8*6EaNI6c./.D"NU2*FuEM:1?=oVoUEf^tBk9NbPLZ^+_nkI5V]I8,-HV4.dh`JTfbM!t=Is/<^(PV&,]C>&\%N7ZKeTLL$UKfL43'kD5pOMj2qB\H!h8+B6dc>W/-F!p+B*R+s2i52?UZed>'Tj8]pH>'7@)Ks9=KlGpd<(NA`6j@lI0F('CB=2Af%]8b;\0PjMIVT&2#E!a=6r-i%TV,=Y;&/0arKdj3L&dXjq0fn=tb-E1m:g5SI2+f_57T[P_8su#o5SqWOgkBsFEq^$^4u-c3dSMZ2%X%Qi&YJ!ZL(8OKrDk;">_7h!.YGD9tVB\U9<&'7CFE!X\P3hLP.%3JX63RWdd)DhXW0gf#./3ggW7"W4dS&K=mNZd2R:m\ih<9E@%`,\i;\&+RT-t>itB`VJ+oLIJJGtCLra$jWi%&6Ca+=<R'-M]>K@Gk*@d@hAOaDE\WFUf`&7F7EuCNLdj.P3k6Hnt1#'gFJR(_&WD%P_S>O0:E@p@q%pVYUojpW./<9HMpIY1GB\\12:FR.$)RPkW2YU^1@DIE>V`,F,qs?p`jk0D#4DD<Q7*Sl-mk91gApg:scptk!Ioh%Z<k]n[/U.H<6MS%.@3dUX,^6Y1(*sf-#6$IA##^M1W\)`bRHHo4J+#5i,C;kB1'^\2&5/9J^9dTR"*<uL<0FI3Es5!@8!!V8X,OT%TL`*YTBWS0)Ps2pF`,U)Z)=*pXe(.5E(*,QM[@a?!A6_X,EMiLR_.]"SN*r8*>ht7F$pm.8K\!L3SOP/1cOt;"o449p)ZF62:C*V%+%U9g/`4A8,P/<5D+PF)-#.&ZQ:1@106dN+Ka!ZP[I<4gBfo\EBTaHl_GV].LGbak\?A>U=Vb"0d&kJrb2UJ^I9l*,Q;4.O-l#DC%kgEo1dIXNPcJk:aE+ZeL-iY[DocsKKjdmm9M=g@9:)0b=f0:t(@)R0K0=CJE)u-/`.):A0Z)A3B4=H^TE8@?8o8h;_!"I]gm,eff%:oJL&8)")i`LOj9o;Qua+;uR,1CB\sT`6OkH6mkVd(%0t-J]$`-cm%njo%k8[q<?A>#.&a80cLU>^bicf8,5=la8j0l0?UUY(]<.%kfj0o4iQs!V#]5GNa/]oI`!Ocauk#_$r-FZ(\pP?+.9IW#,lpP\Q$POX/\l!.(*AuKRlo'56(T"H<k\+/B^8)J%%Pl,_\&?9,@b^%Maq0Nl]['M0]^<t+CYN+-?[$0p_/B9!JLrr*#W^IY7g%!/7,DO"neGuT*Pq>=.#p.%16k7q'H8C^ZdeI#]:-Ee)?ajE+XMeZ18;<%DZdJ];LhkYWL_`CI^!/cXTl`n\t:M!erh1H?p_G%83ZSk;s%A%A_L#c^.^_O1Pmej`A:$@CPssnnn+US2:_u='u`Z514[\*>>XNE%e9N'Kr<S]T#-j.oN?H^7Y('3ar0H4Cc5lbWGi6gV4(p6[he!h=PIQX?/$:jO?An-F">f9Vb@KEn0&;UE*/uu>K-MdqboiR-heRCE%a>K9PbIEn)B[iFQ6c'i#iO$P@2p)'?r+!!%0^)c0/oBuJA^qY*irGf,:#_VHEFunM8+WO@&d&ujPmGT2VQJ<Kq#s2&j.r>KEnCL:%Vs)8P!S8)++$:!\E^NaY4G?4V7PV!da>D7f06ODu+D97V%j9G`bGmcFS(BbN8gl\g_MD0_\b$?MS!U_F.SVoZs(l@T<,K/-P8lU_%@<''I!M2'Xf+^=nrMjUB\11G&bWjF3ntp*<2*L'BGqDc7RD*Sbi88>NMMP\9o'>l!PZVfPrjcWN\EZtP]K[?u2t(mld4T(_gZ:S?%b[!\64a#,j:'nH(=F%'@@b$2ac__(>H`Zn0\uWULdCI`5/ePV1`?X]V]Ep&CZW("meGTJN7<M9\.lisDG=$UR]JB])9qI`%/t1.!%k'=8H/)PDB`]8)=_r?+qR>6_BMWuALQ\N;b`tS'jk,,er"Ko9uB@^jDnjN/)j\(r"[?(TU#Sd!QT(8b%DtE`'D?X9f.0n.j#Jh>e%i#:0f@_>jt6a>Fbo$gA]"ml0X^ATe"N43)afDE^u1r]-i0df%95<F<ad"Db*iNT"qI=>7bG\"LR<uI-k-:uS\Uk)uOU"!jqV6,dX%WN`pl7_6>#-jITaC@-<33-o(C?W"t.q.E&^[r^j>[Sj"ZjldW4F(YB+jY^?G6ruHG:_,!D+LK-Z0k\DBH-5tYiKSn;PCI6Eg"_iS%NCsJY8Facijn8'cTsTCkW&oBS@F.L_08W4CD1o8>pa'XP"FOE9nGYOAme=ZmrEXF&M=YV)G9-::cU1JKQ*KrX]=+*o9qX5`clf;G%cm^\F-<oQ!Qnt3jBEKjn\,sVola=CYBBBi93&YFVZ.P`O>q,k.p@U[UfMK4HFrA#GL*Q<9L?8ZF96#rI3j\h'np[9e4Jd-i*dPp)%'sc$P^%NP9Il;N4"ggpBNNbIM?H]BpUm+-h.qSI/J_1@SaA^#5[SkgUr&_@1n3)FHR=@+O0<e`>CVnYjolbV):%OIp6X(R2Z;Uta%:#;7%'/*.Xr$!fT)?=qm]sS+>f^#MUn)<#bi`0=+pY(+-^/MO[>'X?T^s9%]Ye4<P,9&*1C,ss<qVPM&L@;8E^j9W"rk4T;2>HLU%G\73Jht<\:*g52Qr-Ks?n3)@FR;\AWMo:]mm+7ZuG'S<!ns%O-6QO^];[0C!-GVQ,jmc)Squ2^;gXMEnaop)^jkG<$mamjab=alR%=l1m.)94B0#/lbuZ8P@0BA,rA61N5)pbmD,rn5Z2GT1VHrAnuu_r?+mSf]_6Uokf&IePbYHO)hks(lSqS$rFMfWR*s[CeW#=.@cF%Z2)82Ld@VH@X;2&)_(/&rr%D`pC_r7rRm:FZ3@Cmn]6$g]XsJTaQT=sNp>7G!af41#Ws2Z>+=1?"l>S].bU6_/fqOOCpFj9/=nH4%^Z0_OhdcGDq)/9F_A9X*`Y7N"/FI*X*\r&oJqp/Zf`GM[Ht'h7%_](MY*j0?f%]Q<isS*"0+TLK./r$<ptik`]Q]D1)oOD]`47\i%5:l94Q?gX:Y,RHHfI6mR-7p5cDhoI?H.>$:3[ugqER!j+ek]M;<P_>MW_h8$@m4,Cd940KRYZ0"]p;0,C?9lFkEU1Ob+\_[N_#r@%NhS3:ThL06qW*Q1c--t<\!8"Jqu`V#H+ISFhrN[^CQkH@k;Xb3L%OD:c^\c[hi[M6>RIU\VO5NIRpIi:B[.N`HqM#idSq[bS66[I%B,&&OCg@@uApgLq9#.pV'6?("^3-ECqEgt=AM6qlc4\AG^=O:T4M`i>[Cg#`#8mb'lB;F0!4j^]m]A&ibo#MZQ:/9t-l*/q>Z]%p%9VSTlcjVZITt$k-ho#5Oq8[/^pnP#IosSOK$;;rP67(>$,^XA^oF\s?6<1Oq_cimdl,J9Mf)?Vu+CiqM"fd#`QV6ap%IlSFT6R\2%U'j9fg5X8*M;A</K;?hF0+$t`R<W>WQC">9$Qcb:(&UU(1!V5$KK0\L'9RXf6U/"-A0O);OCg<UaRe\[8<Re=E6W-j\fnGK]JBkL%n+HLtHu5#I>`q^D>&+q6/mi!o@)\iCk-?lC@g;G`q@#OYX9In-f@dAh2sH4hU.p?l_J5Fp6+W5(;u[U!Ffk-gRo<@CWGs[SX8``9%&5Ha%`T^O9A8l)(o$CFEeHN`(Y3sP2):Za^-Sb\W7"/6tF^/JroI!U@Ibgi7"I6u+`Y@#"6QmH`6)Sf@!;KlEO3H2s'd-5]MaP8Y%6R*,<l9*KlX".d<ljP`oe>iU,!.<9H@uH=uJjjN[(Ua3h9A-GEs,?A/\jE>/Dmn<5nR7:UR[!NmGcjEr])r;`CN2Ch$=\(c>4%*I%LpeD]E+Yo4Z*?6,Oi&j@%:?F?==kk:k<pV^n,)ug:63WN*p#HK9;K@*dN>N^[,];"8D?JX22Y:f1ZaVVJ2c'meOq["FlRp1pZMu]%:<_B9*OeD6Nk)!+]QDDGfDNR5/MD=RLM`hJb3fY(DZHKQV=]/c:".ZFV_em!![Y"6F!hV/-prFi[P3(^PXjl.bN()@Oce.Q=Z)+?%`_YIQ9[6e``AJn5b^(iOgE93:hm0@N)U)\K4JK&RqJQ_R!8VrDAC`n()-*R?4:qp;kdgtd($_T2H[A3s9kO[RY]0!cqjhMUl^>/H%-hYYb?(E1phbDCcM5[^$A&POVT/NmS)i@_cGHOHY1\8qIk!dSH2.6.!q%&D\Pmr,`kakY!9);i=f(DLXB)^K=PW(U,fDOAZCKmBA%7;TPWhJL(5i`<%CPSIqt9e5XtinngcXuFKJn'?aLc24&I4R\^2G'S9`o8q?e;]XDn;ZtCFmSj*S#1BcB]WLX?7@molTbGJBD+YFH%12r3`5-hWYFiA'^?<uWrRG?JG@`_na7>[k\nuTFX:qWgsG!/`pR=@+ODsFr?o8V(ts00.CQ,?BHh5cU/Z@5m4m<YTk1]M:Zb+&6F%hi-S?CKk,'.F'C*HN&l;r'aO%/QT.Yellh@<T.jF?IX22Sgi"059$%Mp"cbga(NuXjkVc<;bD7NF]QUZ)7ZPDQg[MO'jTP"74$;-%(%c^%btM6-?]OMn%66VY[UIn\9Jb/Ma!ePOL]Vsq>[+\H^o,`>:qVYp>S!*4k+<+-S(PNO.?C#!Yde%Hk>Oioch/aOGHl_bSat#&%ZahN'@KY5Dj"kIT?;#hsK*\RTVRB87nk9.('pKPOCAYFRruN,hhC4Mu59#bEZ%6]1nX9&nH$:k3OO6Eo*S%Dn"<PU%j)dD@k;Ie<%MqUAHSDuEk?#4JXfm'[/WgbTZMqUAHo@B?*f(o;h>MpEBI,t3\`Vn4?)]@HgeOJ!UCk9Xo4#>b`#&e=/92?U3D^0nH/U4k`G?_;H%G[Utb?JgV6cLH?^gZP#MHtN>4jo*U_)]@HgeQEnS7GsW\Q1K3W6(q%#kGqgK,_@qj2]G%1l&1\#<A[RN9(?*AOLR^:)Xqk.]G=S<%9oS9fp'hHF__Q1i%]bM^'6glGdgTeXd:N!g/@,)NH1?rNlWN;mr3N)ZfV3J+%=m.BV[.YpO&)kWYWOFF#R.`r]"Tk>$k!l@U+B.U%Si6mMn$*bLlu=^!W6\;"6GFlp$B90k]J=G#l8g\5G]b:?5rn1eJ]4`UO9l=i2a*2hP_!V3iK<e:*Y)]h9S0&K6%=t''hZpK\YUsS%(aG81+^\Kh;Pq:jb71S367-!s)pi8C[e^(<G>qn>mL!%I_oS8Ag14rk0@#e#O&Pn-W@u0c-+n%u#h8T>Fp^R49M<eU0^bl<4)5Mb%)$j8@#c(`I"O8U1k%1-/F-VJ_'Eo=q&#BMfl]Con_1D2]S.6C47atLX5&Td$`s>9:UMF5&I&&<*WO:rU)9#u%>>G?,Z)"HC!%Ke7%a/]X#X2C>cHVE=6L/u*2fAVoCT[5a`T;/QX0,NuEl?qT=/P]V@Wk,YWTP?LmU2=S2RSD\h?uX.8-Y(`;oNJCUYJ0K)?<8ElG^W:m%?dJE!E+8ck:u'<glbiV,s5+]4QM,8?OpkaEaekc=SI]a]Z^dZEk=&6FCiB/`*LVXUj\SoMfG'f\A*IRTAJDF,m>*l;lE3'k?Fc(M%]hY/;ORnV->+U,"hK8#tBK)\(=ZRs%h^AR)=qkI]Di>d"q8`QE%p^2C>Am.=PVbq.0Ja%<a7#5;*4P5-\PXa:+-TX".U(,_%UNB)%8Wc8s'fo\(LMr@IOnDm!TWcQ`d7KBl\LZC84ioKoI,RWTGH3dXqN^S\+#6c3B$H6#jos*gI??:W'M]OUgo)H=D).+>8g[=`Zdeou%rqZgZT/a$njcK:*k*rcVr=o@.8cm=j\`M"!)C&kpWJs4[RRsiRpVV#s=V2(S*m*\o"lODUNm'^WU[9atNUEZkH)XME/WfO$%n88j%?)*%ni!&^o.jJ13BM3uZc]C,;ZK^tdo7?I6]ZFKmL<c(&5;VIPaUt&#J#&CPU7"K:7?<"nFS,=<Ng\3'T3/:dY-;_;k,`1[JOS%O%1mM%-N**Q9/6g/6`n5867F6i\..\Kg?1\acVfa9M*fWKN;42Ll:$fE2pa=X.J(>R7i/$smMZRfb(38PGbEqIt1:!A.qFV)+B:$jb%lgOjk;OnbK),/a_MHgDBELffD7Ce,//F*A?pf`lp':1%$LS6q(>R/L7D4ESl\B$qgKK#`G5+aZ.keHCeb@JnED,HFe!Y8RX)u6)D%VH1Q8REo=V5]g%\N'7(,\BA+uR=C0M*[4$:ZC*tNMagl8cFhXlX#@=K[B;#-GKrYai$4o8'Z97o>\!.Ihb$%AaCXI5oP)9"e%+VK%QECA_R5oVY(Z/p8(oH*4Xd<(^^PT3R\gX;71=pu5Hlp^7#\j@1,%dP4+iT>Q*6_,.P;5.]IU.PtJa.6a+C3^jaS]O)3@[RaD^i4b%UR>4mM7T$1C^UDLCR`u]f:"mkg9^dG2TcItQhq",H+hY*hG*iajGE\F7tV]F11<bjH\o076n74jP%de#:>D7`NjC9./n]iD^ZFLu%K$]3.jh89kU<CA:11/)0c_<!L-;Q33VKQR*&lBF\NiTNb=ijBMF-Q0"OsLA\_R)Brd&4+:[Z"l6nj<e-&b>>FRriq[8*1ngO][c?%R:;/_E\KU-Qti@@&IRo%l8PiJ3QnGm=^o5()hG*fA59Wsa5p`pe<tAX(g,tWUWZ4k11.Umr`%oH7ET1%M01R.?HrdM=AUE1)%*bi%%q-uVfW!L1%;]S]ZDDn(/a1Y37Yj(hB[l"4`oTkd*1<unC2Z3[aT8pb\s0Qp"-^-pAgA>P^=8,Pp_Al^46m\49%k]c%7?hX/^]SV%Cnc*ikX6hhRrnI78*7uhRIW\N_K5ri=4!`@(dM1^[1d@G=tBGQOoE1DbTh_T:dpf+:>Gk!TBj[***@\KY1f@ad\RIMSCcc]F32/^%U5W-FT2l)G=gC_A&*(g!1@C1B7U;cP7>W.`lUOnCC'n=rilM&(Tcrm!^nia?3BJT;%%"7`ZMqc4FR'Zf9FTJ';b"((*FKQ6UehB:%T$b?5_C5PQPB^VeKd%D`';XCZL;kM@T.N(.?H[,W>srNVO1+l$-n5*@3$2qS1),U=Ur=6k)Q%-^W-$H+UKKQ)$FrqU:K_pd'nn<8%5;N7TF>;'FeJ6Y`%rJJ*X5Ylk6`aK+1*iO5arm+I/p!e?/%]#,M!Hj]7O*#7pr1NAqHVYTn$U,sUK2,pFjikudb@6L]r*/&H%#N[%'nDB`'[.PoO0&VX8.AB<iT2g&GGV$V@?Y.Zh*uUd]ME#ZR4kIgB8PDj1aEN8H)C.Uk%dnMAYH+&3M8YB:Sa`3IN-VPTMTG2?A'Ld%STn]Eg!^'N:.iFF3NolFfO^`XO-Sc3ahEu>/l-A)IQ`*,!]&S2L2l]]hEC_"cAD@>=?Bq=+=^saQSQHtH+n3BkM1n\R]%nF\:\W!%74GU9.JRAt2\]5Ql8k7Dh"*n1c\"A8?^p,M<S!1+;2p=n9H[.GYq3:S%Gj@=%%amg%!h)/hO_BASa'dj>ZScfB!$;2jRbI:-g&Tu%FBOt@nk6GCaWig=#dT#`0FX+\:VjduD,%"j-GeWqUt^\'/+];JH`-C9E8NZ;ZJPD^O"^EQZ`8I40n,=;c"0\5oI4Qa#.3!4cZaj)%NVD"",^ELTXC:6K`?t]</NC&m/l)Lo<'2+r]VHZnIdB5ZHd$4d7H!cIWM:<:OUVXk1tttJ#/bRt,fJbroQPG>^.Wc_]p:%D<?B)C%_c&HM$07aO19C'C0fF._:c''C0P#Gr?aUGrIjG?rHFu"Pq6<HPT+0%.jE&GYG=t`5s00.?^jMKs,Nc^uqGf^h]"IACn'C-j]LZ_K%]V=0"79W:cV&&lpOHGcH]6_u/i/rF8T+/btKZ<ZGCei2=)k&^.;U,Yr@_H((6c[u9o[HeeAaGY42aYpjSX'e"BrbqmlXOT8,ma+E%+n3Ie-e?m"8#gU&jbG?iH@B35.+X:69Z<OR*iYj2B2-uhY*U,e\W!h!pWHIUnYPY3-2/Y)oYjTRk3KQ-f&#`6,oG?8!jPEH%\2X*%4Y&#1Vd:9@Z_+OL3>?MR-gaGo&P(cm^5]2_5"BR%!q4F[5Zj/<F-D)d^0Ygo5;kqK)7;#V."9>R8q&'9oQ!!@^0JU5p%?[B(d!<B%aCI+A5Y/)Bj'V7GPo_X%:NKaTU,\e'Y:(T$YA#:0nVQ=;U/A:(5t&q=f6_)eMsjEbf-Z&KS>4_]:S[/ST7JrI2V)X^FUV-^P3kuh%.%5QJ5[5l[U&1^[0ldfjikqO:i3PB`>6U`rFnSnn/)ScqV.YaBcG$)BL29JH[?p3]Cc!WZCG+pCC']r$<A)mEgF[WGZTrUd-m@eL%Ps'c/)WU;1="^5j!)5^mgK7@J:-f+-d_3':.1MCp'6p\+TNFU[PnoHF=1TRgbL_Dq0FGcH.G@^3F8BKH<8K1p?^Y9)Be`/="h`=W%+n5-#'S35cO(H,SJHdQ'^O@JPb0kCG9/6Q`cA2<,SXEmh'MXm%:L)0cqXW9gB>+!d`us(./:__<bU0Hk6eJ>^>fi:7CXHFiQ3ue6%]8U%ZLiGR*.f*Rs[;92+MGf8=gQ9["n'G8WoloO_#IT-ZBE_:GfdK9,i4VhIpiWM#F(0PD/r+]o\8SFtS[[a<C'aMSS%]cASRnk"%+f7I%O+WAP'S-Y^FVND6jV.QjZ:B2/>Yk>iS!8/5Ip"nsnpSfbfCC9715X0J]Le@+8I8_N0@V!/Ol2ObGnSn13_g!kcqmNN59#bX%/">%3Lt4-:q#8h*Q5r!S(KY6L`%PJ_5.cf%WYI)NJk+LiqR)IVNPbMi?QQHko?Zijgh9q*E+/P`=g-rWYSV*XF8LZ.]SG8^.GHo[%:.e"'WG"-(NJFH\15N)CG%CU*dJS@6\%8*L1[FH!mRkKp</L/06J\T>UFp_Ii8$D?7afV`nflGa/t_j]H=mNO1_3l7:W>L'hDDsm%kW39&hA]ai-DMfn\!Ee`J)C!E9c?$3hCl%qbN@1t2J*=ZjYOY5,CI:'=890X"Et49pO@J,DTm<Zi(i<qJ8<TSOnFbYplC;XIc.i(%H4"@RnOq;*&\(ThOnhc"^.A$"=1iQc]j9K#a#o#sf2>+=lkG$:R!"E_Q`i)U9lZZl<IdXBZB\#i9&:hh>pAdW.jrn!O+Fkse5Bu*%g,'U56&ZRNcI!$3&^l<kc-,"'^2nI,rn5Z2GknDSLul_S&'OkCZLjC0m;_D?l8LAG1VPq_O2nZk7JZ\E^Zp_Z:7TqqW6:n6YIF@5%56PL:.%Q:$Db?G,'`\1'2l#\p*LVC81iEeR04$ZEhCe9"@ids_kc(=4G07T:(dGm"n_IgujB-1hqomE*&si`KiQ?`C2D=]ljI*Q?%`'d4i)O&g_"@^`i<<cdtM"Br1GF=d:mu>6``WEd\<Aq=-6ZUZUGOaJ9#G*]""cb:c]*%a07sNmP(FHp8WuO*;@Y';[]fW5i$#M(s%=Fg#rkH].a*]]SA-#j7L?)4d:T0&M!$KdH`\nS+,$?cclFi<R<i*'Au.=Dl,BS.mm7,+cKQPqeB5HaJD$<)td=WTgAT]*8o1Z??f%2VLD70"#04]Scl`'X'8Ya`Y[bbWd$blJbGSPtk.Pls);bKdfOCIombZI?^Q^!;u.3-(5Y6Wb1I1->E"3oprrKK6IRfcM[:H.X)Ml%#[DAlM=Xmj4Va+-ku]k`J3m\32!Z.P2Kpq1;>cTa;Za+3G%CU*d(G5>>bT<&olbV)4nFc`6W]iNYu:e>@n,uj"Pu2\R,smJh24aD%8-.5Gg"qDaXuPO]GqDd7[R_ri2:I`lJg#&n+h;kU4l/p+NoEbei&Y@<k+<+-RrH.ZWuP:B@<oWDc%hB%!Pq.O0*?fMa(uD#4RU=L%JA;u(S2di7,VUR$+<fiZ2*1s;r)Vl:@c(/ND^f!\"PIq?Nm'^,RPth0046fGrkn;UX-na)m[EF:MObB!*AXjV.N>,9/8]sH+tr\m%oGkG:Edq(?<.,A%OYt<tI.5oPdn7XJ'cpnlde"bBcfFqfs$CSej+Hn*/2NQ+l^e%4TseQV*O@!^O4!SKD\Wu&<P%uFC+JSn8/9U*%aj42q%KD.9MUjT@&rkCu6JL*RW3)J9Jikc#O-<Je`^hkhe%Ql">>Tk:S\+lh#2og:<\+8F-TPUpp=7]NqX76b1V87N,P-uDJ3cnt%5BW+7:/3498KVsuCJ(Yrp_VH2L>kpWqol5,l,`e/UU`[-fk2_a;EVIG?Os(eqj8CSHA.IP9""RYeCMjH!9M:L*EO@WUce=JVOMI"%>>Q"f2lKhr+QD7O[^[(dljfS1I?!e1C.fA\GpiX;r*qR6%@<0m$YrP:/LZ-5O1Nn&k9ncFBr4^1cuguG%/gNJCM&p&I:U'6.m<>e%44HD4:T,inRf4Ilgo_eaZ*p=H/Oi0IH0Og"=Bi(::':'2k%g.]f8@H9E=)1PeeV;lc)F?nToAf([0;96'i6+&<O'6Ug<u[8D=YVm%Gq,#/QIKct:nCcn:b[;`=#5Q=BsE=VQW69((e*rt+EhYMkDUF+Il@;[RrH;WgeOBkimO?OOB\f"p$m$5d%`F,jW*]WLURsN_NEi!%`(nN@)k%RV>Lf(L4L4t(o)=QUop!iE$Yg=f]Kt;@`TJV?Qs]@hWON-di_-Y\l:YA'=g-pEH:dVi`u)EA/2`^bQ_4H\TNV40C^XMb%Z[pE!2+lj;f%)CdH[aoOfr3mle.rb*0i9:BCoa`Ee<X7,/n5QX@^Wk#hLC:6P#LW#ia6u7/ImK!Ee[*rD4n>1!/=/'+LOt&iYU+1%R9\GN'uedY`VKdRCDPf!4Y^;-5mlQ+lH8e.@&SN?D&J'$/-SSrnIoYQ9CO,>.6\"1`;Hs>q$"/0Ks[U-CCAa\q@0k*FIc`(D95*6%b42[ZYJWD;Qq1c]`n(<-lfm0[TsgUBAMT)i[i[U)ItuaHXqCA?k%g0;;-kh0Amg%Cs$CRjiX,[G`CSSHJ[G)L]5N5.VJAHpOnZ.#%SU4AQ0H;%%/LV=38K#RGleM4K\5N1NfP9=%6ok#*G$k9lI-88Y^tGa%(U#(LSHo&i_@Hn;L9n:aph-,!l'fA9jLt3t?Sl'ahRnlM%\')BB>s2ckaS29hg.i6i4P2L*/$HYfs'ff5K@sdgAd%L!+mcgdUXf,$F_&1O2gQh^Qcq%+4C%3!``D.q86;Y%H2BK$P%?PjB"kCT%GKjJZ1]M9)hE7q:*kdT8s00.?TR;sN,LjHNq,JKR21>GEqm3gZ0Cfso(U"M8[5]428F,tOT-Q-#F1@ZJRA=c-&^QKs739?(H2Ytb%Z_;YC?K6D$3jRTpn#g+@6@*=EUF(0,^`/aWk(jWWrkLHUo^$+q-0#Sl'[pZF/fFHT/19$#"%SY5bm:VcX&">!Z+AH4l)p@#ba(Df%0WCTd8@-#ufp](slUTgtTuojlns!l&JF4Oa7Nqe'#IE#'k7_CL-k^SU;[=uL[ienXiT=e8lOBcXGj%[j7i?.<^Op?&hi$]\p%?6K%"UDn?W+hq<.5:.0j)f)(R#sL/GgV,%@9bKk^Hf6o&Lrfp)'1CIXqr3bY4:Xek%g0$_K0;.FW:/B!O;kt(mRc6!"Stn!O?;*<!mP:%!u,YO`4oeu\Yb.S=KaiF4@3X&K6k$u.`b&d8XMMD:Llm\<B*2*!bV94Z*h\V]n4mW%Hfo2?TEoP=EZqW?Kb>&+LWhb+d"3uW?oLK%_#G3[bL.)E8G;mu4YM[/&6l=-gh5d$,?en\U?1ooJQ2T"fNO]#Y'\CZ^q/soIj)6O"g7/@Q\ifO#Nr,JR!=:,>@,nelne7@8)6r]%?GQLJ?N159AJ@1q;Z69g._=ST)$R5*9jYrS-skhJ\RnR.R9s[E!")fH@*Mb4>Lce#Eb'SMD]/mnNb-3XcB`$RR1A)//m-g%:hMH)%.0Gp+*KkfKaf21%Bece"79.\J;'FY(.,R.[b<WON@heAg/fFGMG@JhfWicQP<!A6%oV@%ifnU:Mh6(+ILK>[BZ\,gi;<5Y8$S$KU%7sq\Z'[_GbnB/Q.AfmGIaaot6<1!aLHGR47e!]SqXcZ6\^?(nfYN<0Z\i^'MfdeS=AKZ>2#TcF_4,Of@[>rER?fBuhT;_$:oJOaR%q8m*.U]oT"J]lA'11ueUe:EtbIm$0I&!U8laFlaD#^i[7E*eG)EREVG/PtN1!HaUKKGIn="3s2rP6Y.K>SL/-ZHLgLir\mY"qtsl%=F\>]["0;Y>'7S4\>E#nR=C0mN[_F_j+rqX7S]KO(WJ&\(37G%+&"pqf4PX$'2f(3>bXckfMn<RMAQ)UTNU7U\K*NYeEJc12AmqD%8u#)9*[[!t*%I@"`eab6?YP%o#j]QX/J">QPLH=6(YVQGasmbN'G5>D6p^Q5@T[kYOAR1n,c@("cFDeZnbPH3Z8i"3)$!*J#Fhm$%dq@eb1Pu3p3jX\-ZKe\NH<NN3OE2h-2!&WG'Q$V;e)m//X)jK-2urkrr@>:s4g]LF)m^EiDuNF*gDj:,l(>)hY70j?RcX(X4_ZC0%'eEkdKd.o,nuHL.XWh%KP*s?,ZSrRqj@Lgk5"'>X&"5"B3AOs2Ur67,U6RSEKU\\H_gpWaD4r__>>ZA[k]PXUd$P7Q+up?kRe/Hl%[pF8Zc;:/,cd"\b_NY^P[`E8L7AF%neD.(WClO<I?F-O#R(9BrOnDnLI.!sKpQ_$nL7Bc<4HRq;pC60g[E"L>dh5\*?-7]EJ-$@Y%Yj)lB6qX=0K!(_G>Sb"u)qSWe,O^\U=E@7C,Q<#1L]_b`S46gHe6e1-WVZT-:o(+i;Wfn:Hq7Nt\ZIX4mN)-jJ.qP9r5e&]$ug,>%YPF\&s%!77U[U:a^2hC1kI!8rD.Goc;d3Oj8WKWi>D;p]-'/4m)?\0OCt+3_pnmb?-4HGWDna1JZMVk9CIH!dO?5+:e+2d!P3Sed%CYIhSQNV\^p;D:5o#qZ&U9@28_Rnq*<9/o/V1aA`SV2Kp5A@V1PelZHehF4oR-BM9XQ8urcUp[S8"m#fXn$p<"C6%o<Tj\\*YDb,%EalaL`"<i%=tnp$m%Kt9g8cuVcmJmeN]_8eMj+"(G=i;#(Q.<&="@IF.m!'<>i_&Y;j&><"BP)RVm^=C$q17WaODaPQ?G\.O[#r:%q<\FDCPT5CC!?VZo>7_r'b!6+=c9jd&FUK1MH#PE-n&P5c>4P=S\e(u:+lt)U3?[r(1"9!O1`"mEk*Vo-JQXMJiehTKXkpKM=Xmj%NN`iE,]gZp]$(-tg*JK2BJ3$lfq=C&6L>=<_IV:$NPsD-TS$c4jm*/\46mduIqJ\bYTlu_cVnVm_@CFB-K)`SX%rdL,B[P1QH+>W%@g#B5hMYTMOE+8N7rsb?1?FlXO\"@6*N.!$.0GX;d<VLNpQT:Nb-$n`5u2&9[>DNo+Lu^C\g64=!CtGI`?f8fg'G@:f.[*9Hr@uU%TN=e$hIL0T!X_M#656^]P$t4Ahd004!Y,hY3ekJATlLUJ5;Un,ku8h%j13E\Z`k)PUCtCAr9@tXD#H!?G$^NJR2s^)P1CA!eFNZ[%U@W5\Jq+Bn/Nr%KU;pIu1]RAk0Y>:.e&Yfd.n?D;YTJ1EbL_R-4N(Z57VgV/aNSjl.[r7=!+Qok;ad,N[oTcLBC&o!:ip%gO#M%=%XW<T(On1/sJ\Z83Kf_.b=\EoaILYrJa9.qSWJc3?NO28ZXrS9+o\Z((X>&pPMJ(lkLs_ej3;;XA7q^u<A<sXT%MVhf9(4!tFXP]O%,jtLTJm9Su/r)'u+&(\p/d0"arY89Al#_>;cM-uHF>_FJs%jm'R_sSdDL:FF'noHRn5B%8RW\0OFg-KnK!'8<KeK5ZWIF2YYk6(m%_O;>\/^bn5]mKD8e2-^BNb6_s-)6Qj)uJIAno/4>LZK7mr_VZF3Z'%%1/lU1Ma-&sB+uB*)%%jd./LEpfTpe+huh\#9njWg\)6H*%j55-cRj80/W(rC`m1=LI:`lVf?FkYj+)=eNbA^!@<^m#s)`MW]l0%:nLZbr!nl)bo@9H6I@>nuHpR/Rk7&^2JbN.f_^1^-_IELN+%nmU3<P&ff\K)ehOR+2OHEb8-Jq[?L87FQYoCTQ*_qO3Hq2pAm(O8F7arP:0i%:GhmG$L6mP%7782TZ?CCrpAS^W-qi(Gom:0!Gc"%Q\LL'PP+D*cE:\G:`LQk5TfE!TPOJtRCR/I;,c\Aj1Kan`irk[a(S8t9^>$M!XBp7Z6>;R"t']N`nq]o)X`"6rHXR]I:SBsFL=UZ%3U[b3;oBuG#42'V.8#[*/d>-jakCEb5Uf3<HH`otY`]XQjdJmAMo,;g4mq9sq=9&?#Y`!u5+,1ZQN0-lr5dP8&@pK!'\W7j;g7[e%],9k#LlOcgoD?.IfDa%8O*#p].t-0BYm8PPP.1YQ;F!b'gZ8GM7K%7a4C!8"+b`i"of3?]=#O#$@%aEZC!))-?(BZ2a"$B"]N[>N%XT1bT>6Z_;qT.GM=n.)g"3[!i^ee"m9$GAT?+*#0\ge=dU\:`RO[fMXFf=17]^mSN)K"\#a8+Fo\t&(2F5(4ZKX[%bh5oT.DX_r6%9d#BM41VKq^W\d)4q+:6:p`J^A%)uRlnWKr#rO`u36&*eRV1b)BQVuD"#^4t+4j64?(H)-ZN5Is?5J/.>$3uld#.0o;E1Un:_hiF%6if)DR#>FleEL2'\b:dLXuVb[jr\81T1a-+nm';sc=eHAA(W!6TJN(=#d:_AEj(2M8"FI;Xa>rDOP^P86?7r<#1k]Q1\]4UL.I3M%_Uo5Zkq9+%Ea"L)\'$!+eXoCMbP4ap0i+I"3=<a%=7T8#FcK-W\HtQV.a#%O2?#)*8=%HHVsn<],m0K`I:@(q8\T>O+li.4Y>uWk%LtkRB\%++)G(SqW?,)Og(!K#WDhObd)h6?4iN)!/58VEtq02$XD?o%,_-s;<$n]*<P^hkL%*!i7,R)'I5*8nj*s"Q0NZ6G;Ef*%$%BrG(FM)"DEF\n.S[E%g._rONYnec4K]fH02Pq_:.ILR?RVrT5-aJ6";n3-CG6]St6@(]/QF].g?:Mk%@S(aX\K0:sh5Va&up1Q<8%-KnZkG05\R=gjGB\<$0Bj:q^'A\`FFSbN+=9s$R)]YlW#%lD(S<!=JW?0u:ApjZ3/U;52I]\\#>PQ+A.5QC_Kn+U_Ij+JG@J"@ph%!^Y-M4*'12mT5VrJqdSTb)d9#Sq.6(:e+K?;"rACm&pIV5+HPP#OY5d7%QF`dsk;F)%*qVV'BdI?Q#N04\/;u^53Z8iR[IBr>:WA%L#?rY)kC4lTH+D>=4KX65tEqCjMjW,L6+CY7?KphOLSiZ\YD[?[^\`]$[P@9F[O'6M`eWL$FJ)Yg-?1L<Q]iodHH$Z0Fu`3$g"*j%/fA5cmKq8RJ]GYlF8u0A:>eW6\94CgkHf>"'^=nON3gjlVpifj16?tPX3(M6X<C;DHhj(,)hE04e/Ydcl(8/6a!T-f5LAo<&hrjN%c"g"T,h\S27%'i!&m=@[GW-"3._Y.T$,!%`nl<;5?u\ADV-SH_-Pj6uMFP8ZUtVZcKfsMW5gu^O%GHsJ>Z]!;(u0?:Pq,\1Luf"<%g3;PN8G;PmSF_l:i#jkWpMX-->_\.M5p5E8%U:g<cJ5g#J@=O_b@,&urYpi+6,aaBDL!:1U<nmq?nog!?`ETMUdUEZ+A,*RD%2;%%mes.H2*;>>`D`FGd(N#3-[Y!Y9e,QOMGP#;dg^":3fQB/dLIg"d[^[?N`8k[_s*BXONNufob<"Z?UtObj?f^)+t97]`2!uN\G,4W%1="ZlO8=4c1_(^gjX1p05?AIXeo0DdjNL[Ddhegj0)5KA2jreWqFpI\AsW;$N9QnM]1J&(5BGF''5(5jL0*:M2LBD230+ktAo5_l%loK2lln/5,M%`FE2)X[RH<@EGJbGa-%JL]9k`E6IgM$!<(SDHBf*k<@rfcJ!jCdnhbFko!6D^56Y6%]*ji45rq7,c7!*`=bk6Pe8%/BL9--YQ)L0,XrB%)=&o8^g(WRVo)%#k&ET+G.<jrfst[OJ6SkIBr,C_[i\j34pdXP@Klc+QH&Tm\LYDB)l@=<W`\CQ^O"Q]kl`*%HmS3`40*>LmAm`d6CkZ&Qc)aSr"M0aCRk8T:F%H0P_c.OFb6e(Tc*BFj;l_ed28ZZ-fmX7dT23g3(UlIBDmV'l>anjgeB@UM]i-S%1-;M"&uJg"6_SqL<u".)"*Id!f2r_bTcdMDCc`=udI\i;YPnr9QR\X2'Yk*#Wl?pMkfhka\7?!<9k"UZ<BS,DLW\s[)$j+'16VUe%`dYMNjgkGE>P6muRj!f\Xai`W("n\<dnKk9e8<32dt>s$bp/D]-Y/lkFBmYZ-+>mb#3r^hEm;Y))p[D/Jh(AZpg&:tH/F0;d"/'$%q8ta]n#+6=\1a[o50oAe2L[@S9;:Gn2iE5Z#0BAaG$@gAPNCt>)t'K\.,Zb5e6BujcLFKbh5&(54*1GgK%V*&bDa2pUS#`qPfn'p%3jhYn:JC)D4`aN.FOeRV5u'/.0C'].-HNod.MD3C0F>SU0V5h)Fu7-d%7dbiqtO^[$D^If[u7#D$9+U?3QYeVUjG;aQnn2h^uN]u%'X4Rk.;n0l3sJE4/TuJAAImL;-5A'"k\BdiZl:n''^QZ6jcb7L@k,[mUj<-;Jam"=*RZM8#':@).s['--0#LYK6rfb][)GFm86Un%:9euH-KjH.`F4%T$dtUY[JV`s7@E>1o+)fCA[tM&XuhO3c!5'S:utUQGKJktT"0>o1^_nM.*U)5,+9gTO=aVNQSL7F6M9,A#Ze]8%/!!Dig4q>6#4K@=2.k\>`TU?[J)P5_)on9BBqqWN)?])]-mSlF9O_k(Nb=Ar![Pu.)l*(HddA(Z":Dk)#\grR%&:V_Rb=^arO1=S%F,o%`a[47Y69L-uD;I2haX3^4$S$@p;;sq"VTs5Y)+kR1C*o-<p%;Bj^qC'd)701g_$\sndC!k@LY)d\HKK*jfJZ8G%-"n"Y3X]`%)=k"kpLu6r>Qg!:.j2VqWLQT71K*7;3>:XKiSC<Q;`o)-)+m>m8PoLBm:3JX0%#j4Zpqh#`-fO4B'bq-gK52&2F=BGdVu]p+YL^\%'5n7oG^5sfA)s98oMR`4OrJh7\C*Oa]I'=-D*1^hRX&(E0!QmP+sEhIDKE#433C8P/`&f/&A#@79%tAs>C\1H9#s0CTY>LT)'Xf^%7GC2,H\7L]:6FNnMUM@o'a*qZY<]TT7C1KW'1/+-ZTs=ILZ"5.>^2EEmZq[nLo9!4*.+9r<`%GIkU_j/ju$2[*UnZHdXoXk,a\eg%C"f@F$dLid$t/4bq6>OC.//Ku#Oa!FM7Y#,O4!0`37Ej.'VhXIaR`!cNnGJp+5(X?ZP"e7p%hdIT"C7fOopsuqRfK1K1Jka$nCq^%!A8W&1\[.n!lV,K;L2pA+gCq\@FOJCd&>(`S5sJL:L[3_+k<AQ2@<]gPe\rX>kX/m]0g4;m-i._/*"JNj9Q/M*d8Mud,75B4gVTY%iImmh)YfA_%kO.!(n1HF&:9]WMu7;B$IJaEd#ea3JS-h))G*24Pc,nNmS<Jcd(dl]:%r_!-?VC\.?+P-YFqZDB=Ci)aA0hqoV7sE%b,kXTZQ`.;Be^3%*ZX+?<j&D%(71TaMnD=L/mX=G,Bqo(9[)+a1Sr+QQ'+=na%<SLA"a?gML&afj_5Dap@e,ZW6jUF9-/[;/E7UA%ED$0J7,"=2hd&2"Jj)5:\!.Y(CD78Vh!,e?-&3a#"t"nu^`t'E7D)+7oe\O>.qRpXP)jK6W=3R>5"V@>Rdn@tcnoP[^E%M!n!pqX%2o\CX>U\2qm2@)o%EQ>C9RY_A1C!3e?o2>#BMaA44CnaqWQ4i\nF"\l\,/8Y&%)Ee98>?=l;HKc2"SG3isQS]^Se-\^ugnJ"Fdgb%"1i4RN5',$H2EH*7q^QDn'!A(R*d%A,be,e*bDMo1WTVN-]1.0G0kCSar34ZW)EEm1s^b$.13Z/W&djNP1MNsAsp)A7>#IsmK.&^%F4W#F]W>/nc(O?u<>ZK%+\g*Z/IK_;JLdl6m:X@;%TXr+YGX[[O@!;@nuZ]g9D]2^d#LSAd(N"Pip"D:!o6,`Pi4.<]#Fr>_5qE4%RG.M(-n(/Anh(f%YUo#U5bo[krn^T#0b+,H^4n_tFeNcE\UScZqD=EG#+]IS'_i177*M<hB!(C42GqH1;c,+PP"ZXPk&O,89"th8%c)D#-hMQadR/&"Qi,6T#WR[,ONnH(m+<=D#&QL:A`#]In_)j=%p`Wei5RF::[VZZ-VGNEgOK5qmA^Gu!WSZ;Mg8$7nFQ@>/CmcV>%\UIFKlU/UF0<PtHQ%["D3`IH/Q$RT<(k+X+]!b0M%N`i'ljEn88aCl&o%_>7=7c'Hq3%K^$3=bE>YsgQe/?4D$Dm*nP)2d>)Yeku%[rIH/T*'!\$ITlXk*Hq>GZ$L[l0=*fF13u8@5<Ek8S1l9PK">%GT;u)lh)l!`fh=\C)u5n:Yb%!!,[i89iKY(US"D^pd#5a3UcDO%JnLF]&E!C9b`S;"l_V,F)V43=`m??%eZnWecI476NcuD.&3QQ6RIsaT^3MAW:u/M3!Yeoe*7$*=?Dp?2m$P:i4guF83>BJ;!1c"'%^6GZWo$%(4[<?^TQK:SZIY)m$]Fcj3R.UC:-Fkemcc-ebYQ<)&\e?!LL;nt/,Y3Mu]tIoqT,Mjl(KES;:6*[GFk3Q$ElT@A>U1P3%!Cd242*<HY=n^WFVGpEH\`n#h:DKX.;pJCtG0irm^,]V'2AsJ*FLF\MSWN7#pT<>)dGcl0-Y,Qk\S3q)]dq"0C3?Up$+_6I;<BA:%!-D]\:?%mqE-0Y3\K64Wp'h9l8l?`q'-ba2#>Oe'$s\EVC-!#@5CTVf\p-1eJt<=)ep*q>rN:.3AIFdKoNk]+1?&,c[$k'\.TJtU%I9V=FCm(4\Ap\Qp_C,LoK2DKGHFIJdURVhhZl^="KA>+6(:!-rB%dF!50g71O%kM:m?gmj5uO:bn?/9,7G"o-2^.g25hR'B?"&Xj%j@,n:g895ZL:DEl]%^J3oh.5DFTM?m"6OlpfqM0"X,lGUhAM@'!6Z3/qn#Hp.=U1IG'kfuNmGa]8mTXt7![D`>kMl%8S]84mlH`i%<uhi#CT;8gT1TEd8kf$_NmsVn\b4^mfT0iiU.r%u]]p'S)R#)dX3M*+kfU`@9=)7[s7$F^#@P.#Z.'&!C-,Vkp:"r8Md*/b3HOMq%!2Jjn(@3]#d^.d,TS(jumRC(8c)LDFFT6BWe3C/*TVoQ&MQ5o_a@Q637p&225Onhql53rI?+mW'k?(KE`G3iZV>-uYpQb%3(kf<A%SFJo>TQTUG>oh9te@mEcJOmQ/L1!jo9h>l,IpfU&YG9*+H;LKI3`G(J0lBXj:N37sTO_9_hb]HIVIU.Z2C9L0\oLslmhU$NA3'>2%rZ#'P28O!BABTpTg?1`b&P:aMhD(MH6)QK[l1Or)eOq2W36q'XCt'$DrbXMRC51/QW^TCr_g31ZbA%a1g?*f\??tf1jn1#[)6;)b%hh&98V'n5\rQe0<GnR6:cL-XS-2PJ:!k#=p`6EU%cb2euGU8HrL$DV&[g5o3NUJh;>ITgHBiEQ@VO#!E\>ANiQA$@H=Pr>;>rTWB%+*/B6mt%5S,3sg3U02F5)?kIheV:Lc@38B"8?JC\e+[6sdk,KDZRS6W1_hHBnYrR$bOAD[3-;u=GJD0Abn(Y5[*k4S-nVtWA+l>`%Hd&X70k+J(6Yr=@Zc_)fd>6IU7'p)RE%'id#i4X*k[pNR!4r^Ba.#H<_*e-+G88f[Ku8!SF7\)/qR*9cN'X@g[eBGG4AbOO=U\i!%l0(JVQW[A&/O'G+<<;KV1qcR"9BU&-X^a<C/qe+\l(.Fso@H-h;o[&XD.%OX)Uu*oAG*a:/5"C1UjXnk&*!tR18'THDMD7n5IDQU%\-soVX%K!m@s91`[TI=89JgJV4WViq8*.tk[K!Pb`qGc\%+EV,U-[o?D7_8Mld+=q-om/@oF]=tM0Roo%'1]#l`0b_NUu2F#/VRB%7B_Jg7lB&A</n/nom<X8,%!dB\9,$L$_C7kog3g@)sR?.oqYBA5uGF5OhZ<qdm>DY&nd%5\s6^*<bBtU!h?:N27J$m0`?Dsas!%L%fZW)L9s5+t%]bYq6T]F*B%,)_qJ`ldeuH6^a&E-p?M\T<ZD"+mSl?`6\b0`7C?&<Q,us&GYRqnnp<^S/[W>u\duC*%eG-JO<YEb6%3GkP*TUr1WJZt^)Y,hRS?/jXcR>Y]jeuoD2icCrn[O=e4n0'+!<^9rJfmC=H_PYA"WjJdq5C,G.6rh'1gPhFKC>W+K(K7T7NJMC(%EtRHVH5*c69I=(;c5JLf6.F15m"7oe2Wn*o3Ndf5Z!,B,8+,2r+&BG7EFq?@N*h^?PB5I%FP&^GF*TE),G")7=WaG+`hgGNbcu%r%mO],u<OZgFc@TXAeC%^QTQ:e7eF_9Rjn6!Z:<2pV:+\lc.DEb`R\'X'&b4RXA?)BUh"iV>kRula]0kgeB.dV%DEXAUr^QKqUSWl&%9#uF/iDZ!KQ;Pt9!6V28n%)J:Oe*-,^89'@HF5UAk!"]l<#[K?,:cbLCMmFKe.Z^=kB50.X$/q+V+@XjNag1[c3L?!C23T[?I=5!%lSc@m&K,30>q1hP'o!b8V$YMT"C23O.S9)/=)l::\m\*ELtnkcXHIjp!C(EWR+Cb*A[A8RY<JC>/:c66[_(O5$^q6\2LG+>FMPVH%?:hPG'Ej#P[9@g]BYLT@ptoBn$WD2Sk18'S]tQ&?KsR*EW`YWmOf,([k,m\:Sc*qH)r`6R?(<N>[C%M$fB&j/9N9Ugfn&AL_/UjJ%FuYhloh="]oW#-\G!]qPT3A^10'urjpXMd1'H8![\u?rL;0o;qkChWR4>VD(Ss$,;]id?KN,?&DMhIrp*?bp/pMm4^#@[rd[]Pe<%'dGVR]8LOHNdLhuWh))WIZ#n`"FmC>H"oBVSe!AO96A[JX(@65`$U];/*hc9_S4[$/F.2L;SqZkRHSsWJ*u>go]Tc9lWH@Ql*d<m%$;sm'>pTg6PM)IH9CgU)eN@'BRgrechCcoNR?(>TCUN)1I,M]<S?@:e1<uP7kBOYSXkKpa/m(#;8^JF3@j(JT>V4Y$ju2U[eB0t_%IN+<Qi6'VbajT@[qV*F%HFIL;=E57Sf&WgpX*K"p?eVY=]'CQoGpi]F"m5-<Meq)'f![H$F#futVFBaJO'ZXBhkDp@X:J40hTWM+%\A,(tE0mTWUI?irJm?AN217?#=,q/E^H0splrirj=%?"XCNba]D3<Ba!55nN20lH,>L*OR:LVq[<Emf?9%QLu-RPVDU,TE-)jkLn%UQ2j$b.>WsVemMVAc*P>X`@Xu&nrS*4;La!Hmnm.C:cj4`VL!I;2PSdl?g2Ld]1-`V\a'X4&mMBC0Y&o\\uQ1U@^dmV.T%6OTq.@%_)\*`U8"XOCT&n%=31a`iE?K+L:+-d3eZ/^2:NGmp8qM#Y0/+k`R2uKp4LD>:qG:Z[kge8Zl]RenPC*jHj[bj%C`n@X-Y:C[-`9?%-AjlSkno9e(lQIgd.IOT%OfBrd%RR9ci#,5?PD/f(Y<IV;\b*g`U-Xa.U@BSJa.>5b[D>g8^lqHMc\,$U#4A*)Q/^kZlY.j(^(ij%_Y3:6:.hJs"CD2h2,u#(`bfVl(1<AqCP4fsf/Z4D#H9cO;q'W;T(55agQ``LcSrF,/6=k<4aa[dm1$f'J?08Z<K_"7Do#!7R$7tV%[HONcYNG'mj&/n;==HT3JSe8hSYD_%gUnL$Lk$"rc?^Tle0i7SKY4V29>u<Xb>I:Ra`n&1U70?G=U4$-q=;7[PhsPN;Sn>FCHp]V%6W#&>dSdc%0..M.btVQiZXq_%^G6DbNMXZ$TaU'F;cR">hOY&d5JMf8og*Jg:Q40Ta9upG;Gl]6oJ`65iVm3B,jdjSc+@'M`4*P4%%[$EMDQM0chkICHasJbTQHi3/o9u2rMQSds!_pH9EKk#pcZ++MGUWX*E_/&eWc)YM(-nJ+U6uCV-\gZYI@Od1*_]M=\N'K^;rdf.%/MJm=`YBeB$H):O=iL)$8knjKW:]=K5qZK8R_G57g8D6<FOM[>Yh1Gc9Mm\!AJqoF\6p!?iiXC]cDT63&OobO<63`^\e-XZKN,`L%2>rNse[:G0)Wg>Kpr#dnWeBT<?*@ou"mKPt"b6ebfrFlEP`E7\mqbH?,\+V'S)[Hc`jp57Z3[40*K)[0N$B0LOL[mef"%R4>f8b2%HlF<@n,'%sdWOh(9Wooi]d\<45-U%>2TeR,UC>qf/u[j"8m?Z7!O-^aAcqp;jm0*PY56k,b+A7.W=k>7lW5H&+BAEjFl`FTOER@g%n*6\9MY>I6-0K-s!Kn(/1hGLOh\.6!(ge(rPRoJ'akU!e=hdCm(H+LgNPX+dfK@BTqtnH;^$YQlO-l#AX%q4N\\Vf%;K`WsRIX<`%(Q=XA8GCfXHb$PE*/:K1U1BkIp?Yb=&"<ul_E$e2e@o=*qJ)V)_eprE]AJYT>?b:9e\CCD\e&]mM:?64]C/U>J[95qG+hnko-W^"%B>rV:8%I&b;E%,4fd1Q2eZkWK^CACfon^`lea9kr$!m?JYE.">oK``".WqGZT,1e6l346PWdVMk;:Z?7X41U-[-)fsZ[N99YAEcM%gRkJ0D`$qCp;)2cRm7_PX34%qL)l)kB[^0aiMO>2,-jtbol=YM]sO0]<^dapmmd@Lq&m*FR9@6B=-T8tQKk60!$d0bX_]mSp[`ih%b;i.MIFSYDGgQ'A->uVD!hEQ1"W/ik9%.bCm!_S3\>`3LeFY\gVb/f"q:SGX?e?-V2@9eWFf6Ip>-lo+XfS2m\dh-7\9YJVMQW[Z%CVQkYmj"<$I`BWTEb>8.0Vb_PlJT(D>Ft:EQYJrBNc"+gTj#iL`IaHDMF;=$[Fe.6+^5nAjXA89e*Pi>lT;%=G#<gAP'u]*VTNc$%Xa^f?qmkDkPlkI!;3-]:;15K\Y)5ekV`-F1238nU5E7qq2il].Rl3iq"25!19u"c$XSp;hU;D2&4%n$APUi%X4(Ftshdt9qqeGY(%riO81WjauG*l[Yq"KpO/9$X.9;2d96;?l:,O^``s&N3$o;fq5qC`h9aAn>F6MN]oYX0eR\@FAS3c3#lOhe:lT(AUAEEs@C8SUT<O%ZX+H#FmPeg<K$GF?2MV0#1?WbUioX^Z?g8hW(2@#,q)aC-Wq5P6hF-lrl'=sF46g8N)p]'PAih4m:N8nYNDgKlrIpp?$5hX@r."/%&@cF"W<V7"=!^W'T3Z83*!'#2bm$_HBi$fmZ9ChHUo)^]!Cf(nbA&d2a:a\X6&HgAbMR!gTc?7#.p\K&kT_AVm]2!bPm?broX%,!%?'*c29s*<)Te\<k/aB`IA<Io:.>CMj?d5ndL<\tG5tW:i#j'9:Cpm54)n@C_r7on,+/H>j1ZPqEi^ZV`"Z_=]9S^l6o*g#"WG4I9%B3gVQjO$"!$90=rIu[BI6GV)m\/KVFN74n1hM?F@*+M\XTq,DKAmC&.Wi`+gP9G!B89&0TqA[[0f1]^cY'[Aqk_6/;D>P8H<MtEP%_'?6\8F?#GetWDb@o?&mEF`fF=qLIc0jhak!TJa<ZVF'Yo;:*V3VRfe^ZMnRWTgX4I^5Z:1h"pTDT9><?^8Aj.qbE7g')?VHa<lN%n"5in3M(=o@8nlS0\Q[(YYn6;EF`Zbbu=9ZjfMRGVC:o=&EX(kYUcKoGMjej?<\(@<KQCpDZSu($,#E-MQ,iY2".3N$9(8EKsP-N%^f*[jkLORfBR)lGY;n=KCAM]%DYk=uhcC8@i"I&=*A>[&k[tE(?\aG=7.=.jl+-IkJ9b^#aQY-Pdp_kGA-4c!_OAcm=XR`=6Z,,g%gK(>H\LLs+&,-A`gjH4a6"Odlg*bfN)-%,q/M0:OJ+IeW'tKnS%s=9V<eR!91,]#ik.)3-:;Vkg=226hjS$bQl_/.eb)29\<5*93%P`>0hU!(5G!TKpj+hJQe^@`l_J,].W9hQtn[JZ$(fgMTfdZOGUfHXYmmC)^u;gG9KO5O[3X:%of+hcQ-jkZcfU,3@S(6rX?Z$khe%iZO]HlSi#XlW/m<K1?t%]rBPU@P+R\%lL8`9MJm=4.DDF['l%>D#Jdep@l!D;k*SJDs"[NIRV:=GO=g':R,;Bg3M2!:o_@3DkNSC%(IBc2CJt_iZk$%RTrI_>^bhn:5*VFA2&V07\Y%%.U1?Qb&#XTA`Suqg]9;h8_:GQX[B2>-/?2aLFSr/\f^;(>[uXLXIEjG%bLB9s%CAg%E.W]d3,<A75maf9`)d"[pVR>PsUT*LYH/$aX$e*D-NuTENL!,ORkkOd0a!\;1:Zq1mf6]NOW=Ya1%k9<7&EZu^!=g,MQTJY^%bM)S82B@+>$E_XV?bJRG-!fD(^"XjQqYIpldq4PV@q]fTn"=b-XY6H9b#*?7#dkLOe_9FuF/3YS>1W<lLfC5D\TR6"\uQ1=rJCO<%f=lX[UJ;gLeXDH$;WE1?qJ+l)4)%u?m`2_pkbB&h,W%)(##LS[j_QDKH>Q+9aS@!q<)N.b&pqdrTk%ZpdaM4T\Q_ba>IkOHROSJ*%\#rJlEMpl)/6.aHGDs[_X"\1mnRRHh/>E^JGpO97mpNc*;\)KdV%,o@rLD`'OE\t*em@1s<iPZ^UmA"b5I[e%*q+Cb?WFnPXd<Fu%P(AOFT!d^d`RLCZ3&Q+Ac\Q5mZ_I9gP%pIATpZ.sQo,H@aLe6<q\MRb:f0N'A*H824F*O,Hn!=oS$Je=9uWi[kt='+g6sKl5IZ(L%V?G^V\Vc4nqejO]3<=)2q.cGEVu(@O9c<7h*LZ;PXu',t6uSTZ'e,USS!#\"qq#DuVI3onEL*d.jg-RP]$@O^?27L^gW$Ecjl=5A%+SW:oL:Ss3bPcYO2IB[U<g=lg$=?Qo^60`8YDGU<DEp()PdiU*a'9lNZ[TN<l.-Pg/W*B^Y,p2H!49jD\aUoCE)',7c*M*2B%oc)%KWcpP(,W3hRC73j4TJ(bIbg8-J7W7j4IS#I^Wj4q=W_05/':WC\#Sn'mL,qukoJNWH$nu`[c=RrlIjs<58e6/s'I>8amE)KqW?#m%eMu(md'dK"VggVm/60e>Q-oL2(u+F2);Ek1BKal,YVu4IZ=7m3%12.:lITQ_,=kbUWiI7F&*1/K1[F>ep0O#i]h*7Z:O$H(dH3=:%S4gC8[2_t:?d1[4MWT"pJJUf-G?"cO=%qM):mlVEA[Y_@)X>"L'5A,7nn/;<98dYe2V#km+R=[87VZE1p>r[36MlmV>83J.4\3++%ZP_"_O65->J"F]Tij?`qN$3oo^1iS.rI1%U7'XG,7`m0NIBfJVe+i`]76L2N?TG<]O:Our;4h&7^"cSV@6KXZlUTP9?40VpC[BiW%qI'3DY1M&q)uD-BW6Kc[<H5=FQ`BSOe6#3]cQcC,b#ZTX[q4f8]k#]YWGr@o)ub/*Bf"=c>m<$(lER(#$uIOAj/QA20f,ro*Ue;0%Wk>4PrM?+NpK8J:D#@tc4!``9H;16TrOrBe'ue["lVNC):E_8CCVrYPT4RoY9s\4gZ7WU5ARbT&U0bReT.1T7FiD-_HQutP:Xt@=%_T&$Z&oNjGa%&t;8<lTRPbZp;RdFU.$Y<gsBI_1rVmPXtoiNu9qu'7N#I`l%YH@,H09mosO,&-XRSo/WWN^;UqJ)U>$>rR6o?&A7%W9T#,,AU]Ar^ckBCalVXa/61i[d`rd!L.G"[W!CIEoC\M>joOlmaKp7=HllBm=X1(C1dE&0I)_R\SJ6ma6\_)-ec=R=!,^n8s'H2%Nk@VTppR<*oUa(Ng2&_i`F;Z?^q;j`*m&<"K=[kZ@BLn6@8*fhJ9Ok&,?90!Lho*?;r4BGR$(/jkHe-,4#MFDcZW*$):,>:f*0&M%KrUlB>-\6=Hf&[&E^0!HW4qKcpS'-.joen^7k%+XgFf\5S%7K70n(('DZ@=T!lY'5O8cY34np$<W(M38"N#9j![&Y&P?(^I1fA2f%=6$WMEobaHD/dl\[nY1?f'uH"V#W*F50ci/c!0gN<)lH2[RZrl<@fG;8V4U%WS/8to\lcd+=uq@:/0hu^$ka:IV?'e1gT"jf"g@*%p3l7nr)iX/9H'aeQa,?uWht%ko5Mh-8^AE39MOE6\(^7UL$>aaAF'-Dp<ni*QFf1m"/&j8W_s#PL46C1>gG+56Us>H`AQt69IE>f%2jI&tPi<r@QJF-=dE5Y<[43oRC\J?<B-D?FeiX[BfT)\car8i.;)ZLiSU`;E2@C=-#mq6Ih*4#"]pr9@"dg)]DV!<7c.qqMReItp%,MhDo6IOPjV;/Fph+L^W;G3%9(NOEEe61&OoP!*aI)h.UhYdk'DN:NS3cs71!^,oBeOMPeL_m@7g@cfDbDGmrJ9g8U@Ho7TDE;U*%T5<F49N]bH3U;>t09tnk-l+jG&9u,>B1Gk:AkV*^I^L!\+/Y']k,(Z?Pk%RN!48@.0I&6H*oPdcm_&dl2abLkpCE<q-bjTt(-u9:%J!`8jR[a:Go0-Dq$_691`s&VpmJc(,m,c1^/K-,mgcnK'G0Nb=^*p>JQopW?@u]bTN9$)#9;TgLf=c@jV@`:?rPKl/bIR:MKR*Rr%@Ht48CAAg.q_6D#:@aV!F@OQe+O`ndj,VBM2d<MdqDD:uV-mGl;Mo>dXd?V[:mE6MqR,*#;13tj>`dW-:+]]1Nd'4XgLa)MMun[T%fLc=ONG$_Ni2+cf[[B%p/qs*t^9c)>\gYDBr>AbI^r\L;p1]Po.X%W!343XPm,NiAWY;\Ee@WN,.X!kTj2p$hWPbmLl-[/DlRDNf%D;Mg1C>3k\\`rSLp5(#IMIe:=S!$.QKm$GobU2Lro_b3/j5jTrY\q-j2Ds_qXX['.Q*u0F<OVT\=*%Hc#H>VDWTDMe'q;2F`EC6@%5fM<dD:n,OPYgVh&5,61`aGR`S9J78YWpeNA&R6]%Ok)oG,./kleTckql5<Ul]JrQ>#Tj>>/(Abk[<<I84T#"*%KJeAPKXnYG5ZW%KmG67O6X1\Te*'NGhIbThnN`:Rau>RPWii]R;M0C\oi%A+*B/mdOY%YT!H\nK_).N@EA!je\%mGdCcVtB6C0uWR\eCZt)5$5Ad3T%l)P]D`[-sp'ell:pGT>RkZ3W.=9Ppro3A^9)ii+,CXIRqc2LVp$(5Yoh"jaGic6s3U"RSu[_"AmoMLOLMC=gEH>RHi;=sn_^'>%l%FCi_j1:,<5393p/+C4tO^HUFq94o86iQq$&DVN>1g;9FB=Ikqik%Vgj^8r(^f"))l0SCq,f<m,;b1A_b5Bi;7G&=\.M+>28E)g>L%eoW9e9d^+DR>p(YqWOcXUZX(dPeQ!mYV$8$-'m<(/Au_7Mf-o^gTo[kS:-`ub&G$$;,dq!)JJM^KW`;ZD:nR#+aM=KV<6@2Q]&7R%<RPt\m5jg:]'an0)Kr8_?qm20cO>l3Xddm9o9'HR?"Y`ML"1TtAcGVnC?6`tkA)Q[mhJnE/Q^IS*=.o`eNIF`f:GB@*K\rDc)olV%.CO!V<);0`^LEYo0&&*!M3O!>Z-f@k4mf8BbO;)RfsW3[<1NcU1iHWad?C7$e[M"$WD'FT0^.$FXN_BhceklWgS'gs_n;>kZ)<WO%kGCc@\daQtVg-@I4tt,5>e<aeQi/L(/2k]_]fWI&-nqECrb%@tXiDPu+/CeF;sQ?5<[DrnXZsBW>d$QhHXCpUbe?TM:d@b20US=N%_qc(:4jn'\3o1s!4l<or31ZPQAtsM+HFJEI^[djTbfH2j9;!nf[c%<U=R8$4qH9mHJ<HAU12$\`]2E>pWaT-kMnmnkLn!*ic&@_N%U<QUd,bS@LHQUQ;Zu8eh<D#+0JCG8gZTK/X<&:s4FksP3Y7&-7-,XRr*j'+RC-,PP2-Hj&?J>?PLW)Jh1#01'[ICJ;-e[gN@DJ`A%li3nGg[iU.9C8OPejhAF\33f>[-uah?%c7DmV2dAU7I.HlIoQ0V)#J_YD4X:#?Ab!VOe0'HS+&]fQZ_bLra`p[8iVu\"TU&_A6!c%2OCkYSA_4ZQC0,`VFU5W)ajGs:0Y8]/rYJ/$5As5OX"l@Z+ln\WR:Cef&en;7+I"BeVL;QZ3/Kr?-YdHdph@E'2h-oeG;o:O@>4c%ojV`:0c;.=Ec9TpAUDV]*[<HUbtX8]Xa<taC&?jm-k;9KfB1"?K!#:5_'W^(e&qOFU%n=gI!<?^CjGpT0?RV#QRB?aW2Zo4/`ml*%]K'f;U^K3GgN*>?qY&+Iq4dmmhDY8oQ[cHY^$&b^pcjU/mHm\fjmA\SCc^\H2Hq62.qp2DZ"^#*?V>,aR,4/b_>I[XRrmDYokLP=%":U5#?,&f=pK,&W.&UhQk\j"6-ir=((WT/pD7L@"'3"cubRY<Je9g.QHN]8<Y-r^oD-Pj-rKa<j@F`C`T0;3&JoBg,58`NZ&uXPh%G-!!?fK\hoIS!Iuk7N-Q`Wh7e5794Fe,9hc]E?M_n&%.irpIrOVM!l0VgX&CKQonl\,Z5a^\OXaScA5PJ+__!mDn,_oZr$dh+p6S%/8W85O1sn.Q9rNOZ5sZVemh7Hc/o09?JPZp,npk$L\trH7aWNs25G'A5@PhZQD+UAVp]2/VO38Dm'+Q0Oh7aX@j0ebFbkjZ*YVB$%6NSIB`Wh7TIhlMkVi)th*Iu.U+3rR1+D"P*rn'DkZJ4%s:'1N.JI*_4%#D:T_+>T^Y"iAcJ?k*A0Y6U[98J;s+_B:)&JJ#b2+sCJ%cEjoILN4AB[Ln[X/\8"Cgm#_++X5'T9L)_k+d%.^"%;mUKc'jS!m8@\^9R1dS1P7LFqct'T1.GAJ*^r==c\CflS52OZN0DS<iA1B%F?;TX!oEC;,lu!o<E6M+dKo7:351:$[q5[@[]+@a0M3?0?n=!B/0FtS>[mlScGANqrmO;pFl+9XocBWEj`/02^3g])/N+K-K<4$i%L&)s$4XMASa,ifKJi(EhWT7\(V(L3n=e)jQN3+[hWZ=S!etRO=Aa_J^$apX2IL'D1T04B-XN(I&oap]82`<oX+$L=t5@)30mf52q%qf'iHa!b_Q`O9<L()C`@a1b$-opCQ@*^_,#$ITbuqed'51s'XskPboL?X)2I@Nrs\II(V#?IhQ!L4TG,INJ9$!G+D<U9)B<PkC,g%8?T2u@e64G)#rhEb'F;cZ/17W[QI;f1]0h/?-i5LY5r3c#q-/iLpSW=qFg/sbd+9U\:::\l*rWIP5s']^7VA*AOlN?2W]%CE#2@%%,9k9V9L)_k+d%.^"%;25E>X)7J?j-ED_-8qB?OeLh3r5AIb$'^[dE8:oFY!P@j9'A$jimmkV'2jTI?lWC],PW$7"6sgcdt)_QN)$%oA.Vc_QG,0r:d_i+CTg,#R_%I$V3N-f@U).\W9(5qed!OrPqE,^&R4gH'kbrI!18#f@=Xa<+NIZJh`GTbPNUnR&@uu*<b&D*PH<b%ZD8+f5`c-n&7g=u"Bf3H+R9sS4Vg2X*m63,4a'od0]TsZQJ.ZrOPQ1$9>@;RQ%QdaeRK^Ea:^j+Q5DR]Xb@FdCjC-gV$#R%B37&9%:h8P#5`t^jJ054D6'*CEJh2aS6'`?@aC9OB4dL^7H>MM'kck-pT_sC4:lg0X+A3+Hf`:%QJC_So;mneX=\\8Gp7tlB7RW-8G@75f%3YkPRogGMs$`XA^/22Vt98jZt0tt:Ab<ZIu2K0c1fRO*$IQ`gl*WlF/Q5Bt7^sE+r[<1Dm/WWb0R:f1kXM>rVA3nm6OnFrm+:H><%6'_KXZK+.P=^o#dMrEdj=H68BZ%;YB`s*N6nd?L)4U(t>/27iL"-!-VBImCJjiZV:?-8@$#])o%aMNFX,3qf#5o)S7+A2h@=^V:s%Q5D9rqSkj_7?=Fgo#jmk,mgOJH6,pH"p0B-0be.#N->8*$R\^&o&/ZrglB*r>$)=aZ>a3EaEeUeO9Laha:^d)QF*M398jZt0tt:A%b<ZIu2K0c1fRO*$IR,6Xa$;nO-&."fJFO+7CZ32\>9;RI=mWdcHaa!7L_O"\^dsT1/>+-OM*sXq#R[l1@j&i*irrR]=m3,`/G3,V%O*W?K5ipT2M<Zf,&7g=u"PEe8*T1-p-Vi@ci%2KDi*/E]QAlS]:c;-\4_5eXJrgOSM1?^A<^Vrp`!`jf?!`TR&;;/E3"L=O5QN:J%TFo[`+M8gi#R&f\i]fW\$3s=oo&,q&0(*W'DS5[hF_'1;`aYmfl9>2k1%mnnj'>5<G?lX=\]gc0kqV]u3QN_&5Qm6$0S(KBN)r$e%=t$62F.gY7gBF&4DO.*AQ`Ab;4g;:DZX9\eXcb/q&IHND:m2&0ct%^$..1;4@=?.^a0-I(bGUI\ct)+N5a)?\T]^kucif2u-qii(%PU4?8S/c!E/*0$m.SC"EPpHmP,uP$^1([DrJI,:Y@N^U+el#\Dn`A0Q"\!-05)HY/.dJ)lWNr*"<:i;<W!\,mJLh1&+NkDXPthfD%YEj4%;O=3^WQUG/h@cbT&K(l>ZG6USXN(I\\8,q(Y0Zn6kYZq[JS/oDZ4VX?$do6j/4^.K&#Am8+9<0gaa=H%`-ADJ,L#JM*2cbJ%ks$Z(A:_3X-:(**K$#VuJMKlW=2oYu.B_"Lni12t62<(S#0JLp(FZUt!E;39$-FA&P\,IQUfh0>g54BI0h%]:D&2"]ct5QG=9=[7%,Qg>L(77@V,mNA=D_2.d).+F1mDus:C%H/6c,,$_2@CEgf)q;2%2(sHQGfX[98qIa3Q/RBb(30-Q4B]O9,`%JU_9J6+K3Qe'<&7U%5T][%V8PRXbC`^EnBPZ8[#mE8*>kc^Sd&0f4I)iT&j^dYKFHpE@_C\,dR#epB`ic!%Lhu4ciB@s-&Tf0:nREJ8=q14!kE)`+L9>g%o(Yo5T%7Q%Ld7R9B`ic!UkQMf8jXaJ!Wjs!%=sfVYBb/=H/4_&PR9"u7tm6Sn<QTjaN6\4T`p)V/Kp4rI9S/*ca`P=fX4aKo1p"-%Y+m4Y;(8HGKF2QX-Q)_'I<i"ol'7P$Clu0Xf?rF*7T%;n*qXtJTCn:2Sd!'uSS0H/;tN"FBCXdZFg`p&6*mTtlFJG;,B_pcQ>_<[%WjBJDl7=Xar+IZE39A<#3=M-Gj0K"1W3^GNT[&,nd.KMb+:SB;D&/qF1^f,k3]XR[?HN:@AX:W:1.qs>!sXaX,6L5C(77@T-,tF`%Zka^QEol93[:MRp]k-+@&Lk'CJWV_RBg>D=0o<3/Vcob:H:T1%!oe>t%P=lLEe%&QV=UY.Ooj![4cQB`"$op&Qp?r0(k-qk>'b/1%Q%oWlD"cDgnl[bbUrn:nJLV&E6IGCXopR$&S=1ug:Iu<5YAnSnH(C2[PDUo>7n&^PJG'?d5sGR*MC^H4,"mmlqIhGX2eC.,o4q9]%iQn66TZG!"JKbI;5g/aeJfG$roiM_2jB+[[^58.B,=R(a2&>($:h)cllFriYe;f*Q)@K63`Y.;r5?\F*::]pD@FqhL/Sq*mJJnn$%#&5]&!$0BA#uVlGe7-7.9!NnkD3I?1l_>Gm<+>)S.^>cL1geT8\hOaq@Y"iM=CV3k7r.)".9@RN@!h]+_F@/!G@75bH5]VtF%i;:%#QT!Lcc/5)"iT_q+=sls&2m?niOhF0"U1k!H5]X:#(e>+a$_C.1&geAf$]1LXuuOr6$^=3.tWa[=:dAe@6n"/Gb0tX!<I]T$VEd<%"i>&D**?M`jm]&I9@m$l,ls\3JjdtDJUde0#SgH.r23%hiOp[9*fjZhVf*:Al3.hLY[o6sbR]FghRd<C7:.PE"&)jtQ[kS18-CeP%@OT(t(oM/T[9ae`T*#fDh_%`6]31:.h\Z/6CCO6FA[dbg?Va\c$!J8jW58TLW3F'6"S]$pN]uLH__Z+Srf/NJ5o#[qU^Ba5GRUS4%FhdtX*B'QSK\-:b[*<!73IN_$W)R6j5Us%7JQH;P-0W?6:l,?&:h#94&FNaq/UbX*LM,?3F?1X',#Db-^d*_[%=eJETEUKpe7+9.%(`QkQ^)7>6Vi_/cQ"hij82Z\in7jMQ7-tfsWj0>BC95GY@^p2jTVp-2o&.LTU[7+,o.DkOC+MqL23t'2(m<GVJcPjtCqtE(Z2qsZ%SA>JP3b^9CWQ<M;<+O)PYK2kud#WaN+q%);a:dP+E8ObIl8,k2S;0`Gs");jOer)VaH?]J6RI(Q0L.me-&/.1J8mUt>O/[pp,Pr\%na-BX(,UOk$RS_<#(ij+0S(]H$q,*m>3bB/^-#*CpA@>r1kM_Y*Cs1r2"2>[am4NZ!kN25C^@?J`bD![&9E/30MnamdXbA08HZ0?%P"O)`JY4b+9VBTB"(BuoQJ21o09<h:0_#(C1@#kk.'ml#TZhul^jo&("p5"8=V?nWCk-MO-V<V];j'%8BApWkSHTIqc@S[<P(B8e%lS4M_9+8aYf@iJsTCM%%j@88,S;1b\eQJ'$l7>Nm0r1Vs#Qob3B*2IeJMr$<bqg2E:,`W:.2?$tNs[I1i"]E.$$n?<:hTm'6;%U&%ESjg^lSG\+q@^Wg4IblFXIC#(W6jtU"Cj8cXp^B-iqe)e-;\@bnbl[\6j*iK0S)P`N)s]?=t$cA1DO)B4"@UK?*EV3._iRHi1=a^%\dSJ&Aa/A+d"p6c!JQgV.^[.0")':!39A>9Ucm"?Io`7S,6EQ7%La%Tci=D)W!%g?#V*3W4r%71]L'dbjqV&0<%,,)"/4'G2"6f%%-/VlMT[4<=Kf6_k&"p?"ifl),PBMAcX9TXU.C@r_O[AAJ5_[cfM$biU(+?Q*":?_8?D6Hlo*R&S.MUUPJP^"^)L+oJ&m@p2'O"tE%ciQQFpt!lO;nb@6*ZRtRO^fU;KbgHn'O$S6$8"g7'j:[;d$"3(BSl6d/Ou10BK8h]cj'K%66!/E>9]8YCPdR.9+2Qh!95&L`kmL0%[QI7:noVi(2Bkt2iP.XO"Uh!MJk8dPM4d0C9VB`FitYb)(()Yi9SJeiNX@@P!)$]4>"\u4>%4GW"rQe0Zkcu<o&Xl>f&b"`"Z@Q$%B]6`lT`kmud"4kdBSiBK94Chn-,qIB*+E6JjZnMd)`SB9D*S2AM,a&J,m"E*0iVfgN;!<U$SP9No'#u)6NR-5OZ$*N]`TL5f$f-V%XeudH=sBolJrkOM98lqc6!>\D+>"=33fj\#B`Lf!&m@p2'O"lGKf6_k&,=`(Mc7>P7bX^-V*:A%L5cHQ>*(X=BL,fM[%JZY=sBWd%P1NND$1S?S#FJS+3D?-n#4@+1)j%j>,*@7gM=:j(+])hSM#[<b.m,fQb+i[5\$A,#fY6]h>5>3=a0bD=;6l,K<W4I<RoKA2+qSF=%#m=F@]]A;r$e5qS%eNnO\NleCl_O)Q;6l,ZZW%]kRLB>l=^V;Z()SO^^9pqnB5DiM@:q1bo-bRAZZ'<Fc[$?lfE76Y%MD'QQGf[`%98jZL0tt;4b!AXBQL:M/9+jJp#*GQ)"$q&FQp@2g#5YiJ/N*5>>96O'^Xm*?L8,?C3pRe'WO%TgPk@/$-k1cCJN+$2+O1V[j\Caf%YF'?l;OaN[W6LJ.:k:clW$DI2D&/L(S+W.6*Nt[L?ZWY<9\JuY&ihioct5Ss5b%G2KrbO%H=`0<9!dSAV-.9?fSSSKohpfI.^Sag%Q!&,-)DHC=*>o,4ZbQ^d/2:HLpPl#\53'f'@6nhX?B/G=!bE/H$^=di!_@Xq&S+0O.*M`+#d_HoWREdAC+4HKkd'u(JM%<C:]^8P%U5B?^F]i)R?'Z<Uj1_p#f4SoFR'I'W5)Z^t/dhmg\u]NF"?d;&U*(&4AP$[[ZG_!]'B@8OV&Z:1Aa)CYZ6TJC?P!M^1([DrJI,:Y%@\AYVel#_EZ/n8O[Z9&@P:.BLZJL.p.dL2%3R8@qOrt>NAO4@%PU4>mS=[#_8jV,qPD/l89bo"IqWiu+"W7S\Z5sZnZG]!CYER+9%F1+2Yeb^ni[eYe;=\q$'A3FKIk^eg,"c7aT93+EC-,b_3(gUGqjUe749BT07,mBt?Jk"+JJUepP#SgK/TSNEQ;H'2Bj\`T1rI"<M%6E/_HnlP)![.79qmYgO7r[N>c<;n'cOCWnK,["Thb)+\9.7Kj29buV=ct)H'WVfb\rh>bJ<;m49e7=+:1g+5E!ONVKSFYc][@f`)%(8)7j-4:%_ROi+P4V(MD-:e8.=]1ld/2:Joj:Lod.0h>&=ZVYE/8=#oO\3?q6r9-P-;\91nK'r2iPd6Q*e(W/5+OnBNJLP:n%_JZ%oe`>9kG^jL&7c/Z=^V;6Q5HfIEeo"KPQR2^/0.8eQ8J)s5UEe'#jS_2"M1\Tci_"io\u)g&)ZKKjk0_0Cdar>K!^(]$dqAl")5G&%8-"?H17uE70ja2,#kN?ka!m9VqN&cM=l:lo8\VT#:mhJ6:hGQ(%R=O__^Se2%Lt%)rj6r/:hJ\$5a_c`T^%)":^2cL1^cu"bnB'e%::(do.Jb#tZhS]p2@CG=&t"@'&j^@MQp@,e`d7]fKbpY7Gs"(MlXrYnOZ!RP#21VA!*p+7Ji6.&`E<hCi[cfjn)P&OROJIkeQFqp%l7?Z-/WiZ>[7!i^"X[&YM=DWPCZ35]?QQs<qfM[01a5h1]`TL%f$f/lSu34O5p@`'JrkOG98lq76!C4a+Dmdt_L[8%$Q?enW.`_7%6%.<o,(5aomfD<LH?%)oL\9@"r(R8M,1'sgg-D86Bqb!HP0aJkJ3Zb66_GaDCRuMR?8pt"V*[iL;5#9B]Hn34\!@:J["(uH-,b:]%ZkXXPEok\bLmjL!gk%+rJ,a(qh<.QsW7!T50D1\SLfl=tE\<$I7kfLr#;be5V1%A2`\R?Ds72P.]mVE'`;T;1Dp.q%0E5kgnmCa5%r,;J[TAJ/\m@V+OTE"5DqY""jiU*!3o)Y%>r:oHIIfHJK\(I5GX7a):5Q'L_rq=MgroP;`?i@l\rcS-n^]*OP^\Gctqsi9&rU]K-%r*TKeVr*""ocJY\^H]F1pm^1=p5_H;nYb9tT=k.!pHSW8O2(Yl:N(aX\)70V5I%uo(&j+ur54$_:LF)c[bGGR~>%AI9_PrivateDataEnd